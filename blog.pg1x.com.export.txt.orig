AUTHOR: wnoguchi0727
TITLE: ブログ移転しました
BASENAME: 2016/04/04/213643
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 04/04/2016 21:36:43
-----
BODY:
<p>今度からはこっちにいろいろ書いていきます。
よろしくね。</p>

<p><a href="https://pg1x.io/">亡国の tanasinn</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 外側 IP アドレスを確認するの作った
BASENAME: 2016/01/31/151229
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/31/2016 15:12:29
-----
BODY:
<p>サーバーに <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a> していて外側の IP アドレスが知りたい時ってよくありますよね。<br/>
NAT されてたり、社内のサーバを触っていたりして。<br/>
<code>ifconfig.me</code> は <a class="keyword" href="http://d.hatena.ne.jp/keyword/curl">curl</a> に対するレスポンスがすごく悪いので自分で作りました。<br/>
とにかく短く、インフラ系のエンジニアにもわかりやすい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>にしました。<br/>
<strong>N</strong>eto<strong>w</strong>ork IPv<strong>4</strong> が由来。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> + <a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> で数行のクソみたいなコードを書いた。</p>

<pre class="code" data-lang="" data-unlink>$ curl nw4.io
203.0.113.224</pre>


<p>重くなってきたら、気が向いたら Elixir あたりでもっとフットプリントの小さいやつにしたい。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 好きな食べ物
BASENAME: 2016/01/27/230556
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/27/2016 23:05:56
CATEGORY: 趣味
CATEGORY: プライベート
-----
BODY:
<ol>
<li>ホルモン</li>
<li>牡蠣</li>
<li>いくら</li>
<li>納豆</li>
<li>そば</li>
<li>うどん</li>
<li>ラーメン</li>
<li>カレー</li>
<li>ピザ</li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 見せて貰おうか。ダンボールのダンちゃんの性能とやらを！
BASENAME: 2016/01/25/234923
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/25/2016 23:49:23
CATEGORY: レビュー
CATEGORY: Amazon
CATEGORY: ダンちゃん
CATEGORY: ダンボール
IMAGE: http://ecx.images-amazon.com/images/I/21FGzaYNw2L.jpg
-----
BODY:
<p>ついに届きました。
ダンちゃんは長谷川刃物の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルのこ DC-190で、ベストセラーらしいです。<br/>
知らなかった・・・。</p>

<p>正直主に <a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> からの段ボールのかさばりが悩みの種でした。<br/>
注文した水のペットボトルセットにまとわりついている<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルをたたむとき、ディスプレイやPC、サーバー類のでかい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルをたたむとぐにゃっとまがってかさばってイライラしていました。</p>

<p>今まではカッターでカットしてもいいんですけど、鋭利すぎて、なんともいえない引っ掛かりがあって非常に切るのが難しかったんですよね。</p>

<p>ところが、このダンちゃんはノコギリ状にギザギザになっていて差し込んで上下させるとザクザクと面白いくらい簡単に切れていきます。<br/>
その他紐やガムテープとかも気軽にカットできます。<br/>
つまりワンソースで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルで包まれたものを解体できると。</p>

<p>届いたその日に性能を試してみました。<br/>
やばいぐらい感動。<br/>
これか、これがダンちゃんの性能か・・・！！<br/>
やばい、やばい、年甲斐もなく活き活きとした声で「すげー！」、「気持ちいいぐらいきれるよ！」とか社内で言っちゃってました。</p>

<p>値段もお手軽なので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルの処理に困っている方は購入してみては？<br/>
惜しむらくはダンちゃんを注文してから届くまで1週間ぐらいかかったことかな。</p>

<p>以上、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%DC%A1%BC">ダンボー</a>ルのダンちゃんのレビューでした。</p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B000W9KR1G/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/21FGzaYNw2L._SL160_.jpg" class="hatena-asin-detail-image" alt="長谷川刃物　ダンボールのこ　ダンちゃん　DC-190" title="長谷川刃物　ダンボールのこ　ダンちゃん　DC-190"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B000W9KR1G/blogpg1xcom01-22/">長谷川刃物　ダンボールのこ　ダンちゃん　DC-190</a></p><ul><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> 長谷川刃物</li><li><span class="hatena-asin-detail-label">メディア:</span> オフィス用品</li><li><span class="hatena-asin-detail-label">購入</span>: 3人 <span class="hatena-asin-detail-label">クリック</span>: 11回</li><li><a href="http://d.hatena.ne.jp/asin/B000W9KR1G/blogpg1xcom01-22" target="_blank">この商品を含むブログ (1件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Gist は ギスト ではなく ジスト と読むらしい
BASENAME: 2016/01/24/115104
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/24/2016 11:51:04
CATEGORY: Gist
CATEGORY: GitHub
CATEGORY: Git
CATEGORY: 読み方
-----
BODY:
<p>rebuild.fm によれば</p>

<ul>
<li>Git: ギット</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>: ギットハブ</li>
<li>Gist: ジスト</li>
</ul>


<p>いままで Gist のことをずっと ギスト って読んでた
つらい</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS X を 10.11.3 にアップグレードしたら Web 閲覧が死ぬほど遅くなった君たちへ
BASENAME: 2016/01/24/102707
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/24/2016 10:27:07
CATEGORY: Mac
CATEGORY: 10.11.3
CATEGORY: 不具合
CATEGORY: ブラウザ
CATEGORY: アンチウイルスソフト
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124100535.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>を 10.11.3 にアップグレードしてからというもの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D6%A5%E9%A5%A6%A5%B8%A5%F3%A5%B0">ブラウジング</a>が死ぬほど遅い。</p>

<pre class="code" data-lang="" data-unlink>$  sw_vers
ProductName:    Mac OS X
ProductVersion: 10.11.3
BuildVersion:   15D21</pre>


<p>使いものにならないぐらい遅い。<br/>
ダイヤルアップ接続の時代に戻ったのかと思うぐらい遅い。<br/>
比較にならないぐらい遅い。<br/>
とにかく遅い。</p>

<p>結論を言うと <a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> をアップグレードして ESET の動作がおかしくなったことによる。</p>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>がいけないのかと思って<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%20Public%20DNS">Google Public DNS</a>を指定してみたが変わらず</li>
<li>最近買った安物の無線APが逝ったのかと思ったが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB">スマホ</a>や他の <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> マシンはピンピンしてる</li>
<li>ヤマトにぐにゃぐにゃにへし曲げられた中古の RTX1200 がとうとう逝ったかと思い、共用の無線APにつないだがどうも違うらしい</li>
</ol>


<p>中古の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>がとうとう逝ったかと思ったが、そうではなかった。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>をアップグレードして色んな所がおかしくなるのは珍しいことではない。<br/>
今回はセキュリティソフトの ESET Cyber Security Pro V6.1.12.0 が影響を受けた。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Apple">Apple</a> のお家芸である。人柱を厭わないマカーは率先して入れる。<br/>
だがこれはすべてのユーザに推奨されるアップデートらしい。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124100535.png" alt="f:id:wnoguchi0727:20160124100535p:plain" title="f:id:wnoguchi0727:20160124100535p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>ちょっと調べりゃわかると思うかもしれないが、セキュリティソフトまで頭がまわってなかった。<br/>
ESET からサポートのメールが来てようやくわかった。サポートのメールは意外と大事だ。</p>

<blockquote><p>2016/1/22</p>

<p>【ESETサポート情報】【<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>向け】<a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> v10.11.3にアップグレード後、Webページへのアクセスに時間がかかる</p>

<p>本メールは、ESET個人向け製品をご利用のお客さまへ配信しております。
今後「ESETセキュリティ ソフトウェア シリーズ 情報メール」の配信停止を
ご希望されるお客さまは、本文最後のご案内をご確認ください
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</p>

<pre><code>           【Mac向け】OS X v10.11.3 にアップグレード後、
                Webページへのアクセスに時間がかかる
</code></pre>

<p>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
いつもESETセキュリティ ソフトウェア シリーズをご愛顧いただきまして、
誠にありがとうございます。</p>

<p>ESET製品がインストールされている<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>端末を、2016年1月20日（日本時間）に
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Apple">Apple</a>社からリリースされた <a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> v10.11.3 にアップグレードすると、Webページ
の表示が遅くなるなどの現象が発生する可能性があります。</p>

<p>本現象の詳細は下記の通りです。</p>

<p>◆ 対象製品
  ◇ 個人向け製品
    ・ESET ファミリー セキュリティ
    ・ESET パーソナル セキュリティ</p>

<p>◆ 対象プログラム
    ・ESET Cyber Security Pro V6.1.12.0 / V6.1.12.4</p>

<p>◆ 対象ブラウザ
    以下のブラウザで発生することを確認しています。
    ・<a class="keyword" href="http://d.hatena.ne.jp/keyword/Safari">Safari</a>
    ・<a class="keyword" href="http://d.hatena.ne.jp/keyword/Chrome">Chrome</a>
    ・<a class="keyword" href="http://d.hatena.ne.jp/keyword/Firefox">Firefox</a></p>

<p>◆ 対象OS
    ・<a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> v10.11.3</p>

<p>◆ お問い合わせ件数
    約20件（2016年1月22日 13:00時点）</p>

<p>◆ 原因
    調査中です。</p>

<p>◆ 暫定回避策
    本現象は、以下の［方法１］～［方法２］のいずれかを実施することにより
    改善されることを確認しています。</p>

<pre><code>［方法１］80番ポートを使用する通信を検査対象から除外する
［方法２］現象が発生するブラウザを使用する通信を検査対象から除外する
</code></pre>

<p>本現象、および、暫定回避策の詳細については、下記Webページをご参照ください。</p>

<p>▼ <a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> 10.11.3 にアップグレード後、Webページへのアクセスに時間がかかる
【 <a href="http://ssml.canon-its.jp/c/acy1bO5pjnlmhkab">http://ssml.canon-its.jp/c/acy1bO5pjnlmhkab</a> 】</p>

<p>また、本件に関する最新の情報については随時上記Webページに公開予定です。</p>

<p>お客さまにご迷惑をお掛けしておりますことを、深くお詫び申し上げます。</p>

<p>━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
このメールの送信元アドレスは送信専用となっております。
お問い合わせは、下記までお願いいたします。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
◆本件に関する弊社お問い合わせ先</p>

<p>　ESETサポートセンター
　電話番号：050-5559-0035
　営業日　：平日・土日祝日（弊社休業日を除く）
　営業時間：9:00～17:00
　<a href="http://eset-support.canon-its.jp/?site_domain=private">http://eset-support.canon-its.jp/?site_domain=private</a></p>

<hr />

<p>◆「ESETセキュリティ ソフトウェア シリーズ 情報メール」の配信停止について
　配信停止をご希望の場合、下記URLよりお手続きください。</p>

<p>　　<a href="https://canon-its.jp/cgi-bin/red_infomail.cgi?key=67bcd98472902936b7d0e0582b088957d964226ad4cf4927c6cdb63e4bc88053">https://canon-its.jp/cgi-bin/red_infomail.cgi?key=67bcd98472902936b7d0e0582b088957d964226ad4cf4927c6cdb63e4bc88053</a></p>

<p>　※お使いのメールソフトによっては、長いURLを途中で折り返して表示され、
　　リンク先が正しく認識されない場合があります。その際は、お手数ですが、
　　改行されたURL全体をつなげてコピーし、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D6%A5%E9%A5%A6%A5%B6%A1%BC">ブラウザー</a>のアドレスバーに貼り
　　つけてアクセスいただけますようお願いいたします。
　※なお、配信停止いただくとそのメールアドレスへの弊社からの情報メールは
　　一切お送りしませんが、次年度更新などご案内している更新案内メールの
　　停止にはなりません。</p>

<hr />

<p>「個人情報の取り扱いについて」
　お客さまの個人情報は、弊社および本製品開発元のみでの使用を目的とし、
　それ以外、または弊社と秘密保持契約を締結した外部の業務委託先で処理
　する場合を除き、外部へ提供することはありません。お客さまの個人情報に
　関してお客さまは弊社に対し、開示、修正および削除を求めることができます。
　詳しくはサポートセンターまでお問い合わせください。
　<a href="http://www.canon-its.co.jp/policy/about.html">http://www.canon-its.co.jp/policy/about.html</a></p>

<hr />

<p>※(C) 2016 <a class="keyword" href="http://d.hatena.ne.jp/keyword/CANON">CANON</a> IT SOLUTIONS INC. All rights reserved.</p>

<pre><code>・Safari
・Chrome
・Firefox
</code></pre></blockquote>

<p>つまり主要ブラウザほぼ全滅じゃねえか・・・。</p>

<p>暫定回避策を試してみたが</p>

<blockquote><pre><code>［方法１］80番ポートを使用する通信を検査対象から除外する
</code></pre></blockquote>

<p>はうまくいかなかったので、私は以下の方法２を使うことにした。</p>

<blockquote><pre><code>［方法２］現象が発生するブラウザを使用する通信を検査対象から除外する
</code></pre></blockquote>

<p>原因はわかったがどこをいじればとりあえず回避できるのかわからない。<br/>
一刻も早くどうにかしたい。<br/>
この私の使っているバージョンの操作方法をここに記す。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124101405.png" alt="f:id:wnoguchi0727:20160124101405p:plain" title="f:id:wnoguchi0727:20160124101405p:plain" class="hatena-fotolife" itemprop="image"></span>
<span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124101443.png" alt="f:id:wnoguchi0727:20160124101443p:plain" title="f:id:wnoguchi0727:20160124101443p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>ESET ユーザの諸兄はすでに解決されてしまっているかもしれないが・・・。</p>

<ul>
<li>詳細設定を選択</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124101527.png" alt="f:id:wnoguchi0727:20160124101527p:plain" title="f:id:wnoguchi0727:20160124101527p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<ul>
<li>一般を開く</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124101703.png" alt="f:id:wnoguchi0727:20160124101703p:plain" title="f:id:wnoguchi0727:20160124101703p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<ul>
<li>スキャナオプションが出てくるので除外の設定を選ぶ</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124101847.png" alt="f:id:wnoguchi0727:20160124101847p:plain" title="f:id:wnoguchi0727:20160124101847p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<ul>
<li>Webとメール -> 除外を表示 [アプリケーション] -> [+] クリック</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124102021.png" alt="f:id:wnoguchi0727:20160124102021p:plain" title="f:id:wnoguchi0727:20160124102021p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<ul>
<li>ここで使ってるブラウザを指定する。私は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Chrome">Chrome</a> 教なのでこれを選択</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160124/20160124102133.png" alt="f:id:wnoguchi0727:20160124102133p:plain" title="f:id:wnoguchi0727:20160124102133p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>おめでとう、これで爆速になった。</p>

<p>すごい疲れた。ニッチ過ぎて需要あるんだろうかこれ。</p>

<p>おめでとう<br/>
おめでとう<br/>
おめでとう<br/>
すべてのESETユーザにおめでとう</p>

<p>ありがとう</p>

<p>しかし牡蠣が食いたい</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Ansible で sudo が Deprecated になったので become を使うようにしたよ
BASENAME: 2016/01/19/222120
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/19/2016 22:21:20
CATEGORY: Ansible
CATEGORY: 構成管理
CATEGORY: プロビジョニング
-----
BODY:
<p>ansible-playbook をいつもみたいに流してたら DEPRECATION WARNING が出るようになった</p>

<pre class="code" data-lang="" data-unlink>[DEPRECATION WARNING]: Instead of sudo/sudo_user, use become/become_user and make sure become_method is &#39;sudo&#39; (default). This feature will be removed in a future release. Deprecation warnings can be disabled by setting
 deprecation_warnings=False in ansible.cfg.</pre>


<p>もうその属性は流行らねーから become 使えやってことらしい。</p>

<pre class="code lang-yaml" data-lang="yaml" data-unlink><span class="synPreProc">---</span>
<span class="synStatement">- </span><span class="synIdentifier">hosts</span><span class="synSpecial">:</span> all
  <span class="synIdentifier">sudo</span><span class="synSpecial">:</span> yes
</pre>


<p>を</p>

<pre class="code lang-yaml" data-lang="yaml" data-unlink><span class="synPreProc">---</span>
<span class="synStatement">- </span><span class="synIdentifier">hosts</span><span class="synSpecial">:</span> all
  <span class="synIdentifier">become</span><span class="synSpecial">:</span> yes
</pre>


<p>として解決。
<code>become_method</code> の <code>sudo</code> はデフォルトでつくらしいのでつけなくてもよし。</p>

<h2>参考サイト</h2>

<ol>
<li><a href="http://qiita.com/imoyoukan/items/12832aecd956d14b03f5">Ansible1.9からはsudo/suの代わりにbecomeを使う - Qiita</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Cisco 省略記法
BASENAME: 2016/01/18/224130
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/18/2016 22:41:30
CATEGORY: Cisco
CATEGORY: CCNA
CATEGORY: 勉強
-----
BODY:

<pre class="code" data-lang="" data-unlink>sh int fa0/0</pre>


<p>これは</p>

<pre class="code" data-lang="" data-unlink>show interfaces fastEthernet 0/0</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: フラッシュメモリ内のファイルを表示する
BASENAME: 2016/01/18/221645
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/18/2016 22:16:45
CATEGORY: Cisco
CATEGORY: CCNA
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/IOS">IOS</a> イメージのみに絞り込むにはパイプで流し込んで include で bin を含むものに限定する。</p>

<pre class="code" data-lang="" data-unlink>RT1#show flash: | include bin
3     47454756 Apr 30 2015 02:06:24 +00:00 c1841-adventerprisek9-mz.151-4.M10.bin</pre>


<p>たいていはそれだけなんだけど、僕の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E4%A5%D5%A5%AA%A5%AF">ヤフオク</a>で落札したルータにはたくさん入ってた。</p>

<pre class="code" data-lang="" data-unlink>RT1#show flash:
(snip)
284         67 Jul 22 2015 00:46:28 +00:00 ccpexp/templates/deconfigLDAP.txt
285        108 Jul 22 2015 00:46:30 +00:00 ccpexp/templates/defaultRoute.txt
286         49 Jul 22 2015 00:46:30 +00:00 ccpexp/templates/deleteAclClassMap.txt
287        600 Jul 22 2015 00:46:30 +00:00 ccpexp/templates/deleteBackupInterfaceConfigs.txt
288        745 Jul 22 2015 00:46:30 +00:00 ccpexp/templates/deleteBackupInterfaceConfigsPPPOE.txt
289         44 Jul 22 2015 00:46:30 +00:00 ccpexp/templates/deleteClassMapApp.txt
290         40 Jul 22 2015 00:46:32 +00:00 ccpexp/templates/deleteClassMapUrl.txt
291         34 Jul 22 2015 00:46:32 +00:00 ccpexp/templates/deleteContentScan.txt
292         19 Jul 22 2015 00:46:32 +00:00 ccpexp/templates/deleteCwsWhiteListing.txt
293         25 Jul 22 2015 00:46:32 +00:00 ccpexp/templates/deleteDNS.txt
(snip)</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Cisco 機器の開発用初期設定
BASENAME: 2016/01/17/201334
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/17/2016 20:13:34
CATEGORY: ネットワーク
CATEGORY: Cisco
CATEGORY: CCNA
CATEGORY: 勉強
-----
BODY:
<p>コンソールのライン設定モードに <code>line console 0</code> と入り、 <code>exec-timeout</code> でセッションの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BF%A5%A4%A5%E0%A5%A2%A5%A6%A5%C8">タイムアウト</a>時間を設定する。
ここでは設定できる MAX 値 35791 分を調べて設定している。</p>

<pre class="code" data-lang="" data-unlink>RT1(config)#line console 0
RT1(config-line)#exec-timeout ?
  &lt;0-35791&gt;  Timeout in minutes

RT1(config-line)#exec-timeout 35791
RT1(config-line)#logging synchronous

RT1#copy running-config startup-config
Destination filename [startup-config]?
Building configuration...
[OK]</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS X のバージョンをコマンドラインから確認する
BASENAME: 2016/01/16/151356
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/16/2016 15:13:56
CATEGORY: Mac
CATEGORY: OS X
CATEGORY: コマンド
-----
BODY:

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:~ wnoguchi$ sw_vers
ProductName:    Mac OS X
ProductVersion: 10.11.2
BuildVersion:   15C50</pre>


<ol>
<li><a href="http://applech2.com/archives/47532924.html">OS XでOpenSSHクライアントの脆弱性「CVE-2016-0777」および「CVE-2016-0778」に対応する方法。</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Cisco 1841, Catalys 2960スイッチ二重モード、スピードを指定する
BASENAME: 2016/01/13/235343
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/13/2016 23:53:43
CATEGORY: Cisco
CATEGORY: CCNA
CATEGORY: 勉強
IMAGE: http://ecx.images-amazon.com/images/I/51qnQIg3giL.jpg
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/CCNA">CCNA</a> 勉強。
pp.274-277</p>

<h2>二重モード、スピードの指定</h2>

<p>以下は全二重通信、100 Mbps の指定。
片方がオート<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CD%A5%B4%A5%B7%A5%A8%A1%BC%A5%B7%A5%E7%A5%F3">ネゴシエーション</a>有効だと半二重にフォールバックするらしい。
<del>だけど実際にやってみたら全二重になったんだよなあ。。</del>
表示上は Full-duplex となるが、メッセージでは半二重であることが表示される。</p>

<pre class="code" data-lang="" data-unlink>interface fastEthernet 0/0
duplex full
speed 100</pre>


<p>Router</p>

<pre class="code" data-lang="" data-unlink>*Jan 13 14:04:04.537: %CDP-4-DUPLEX_MISMATCH: duplex mismatch discovered on FastEthernet0/0 (not half duplex), with SW1 FastEthernet0/1 (half duplex).
R1#

R1#sh interfaces fastEthernet 0/0
FastEthernet0/0 is up, line protocol is up
  Hardware is Gt96k FE, address is 001b.2a77.66d2 (bia 001b.2a77.66d2)
  Internet address is 192.168.200.1/24
  MTU 1500 bytes, BW 100000 Kbit/sec, DLY 100 usec,
     reliability 255/255, txload 1/255, rxload 1/255
  Encapsulation ARPA, loopback not set
  Keepalive set (10 sec)
  Full-duplex, 100Mb/s, 100BaseTX/FX</pre>


<p>Switch</p>

<pre class="code" data-lang="" data-unlink>SW1#sh interfaces fastEthernet 0/1
FastEthernet0/1 is up, line protocol is up (connected)
  Hardware is Fast Ethernet, address is 001a.a10c.d381 (bia 001a.a10c.d381)
  MTU 1500 bytes, BW 100000 Kbit/sec, DLY 100 usec,
     reliability 255/255, txload 1/255, rxload 1/255
  Encapsulation ARPA, loopback not set
  Keepalive set (10 sec)
  Half-duplex, 100Mb/s, media type is 10/100BaseTX

SW1#sh interfaces fastEthernet 0/1 status

Port      Name               Status       Vlan       Duplex  Speed Type
Fa0/1                        connected    1          a-half  a-100 10/100BaseTX</pre>


<p>また、両方で異なる二重モードを指定したらリンクダウンする。</p>

<h2>割り込むログがうざい</h2>

<pre class="code" data-lang="" data-unlink>line console 0
logging synchronous</pre>


<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%BF%A1%BC%A5%D5%A5%A7%A5%A4%A5%B9">インターフェイス</a>説明文</h2>

<pre class="code" data-lang="" data-unlink>R1(config)#interface fastEthernet 0/0
R1(config-if)#description private network
R1(config-if)#exit
R1(config)#interface fastEthernet 0/1
R1(config-if)#description WAN network
R1(config-if)#exit</pre>


<p>インタフェースの状態を見る</p>

<pre class="code" data-lang="" data-unlink>R1#sh interfaces fastEthernet 0/0
FastEthernet0/0 is up, line protocol is up
  Hardware is Gt96k FE, address is 001b.2a77.66d2 (bia 001b.2a77.66d2)
  Description: private network
  Internet address is 192.168.200.1/24
(snip)

R1#sh interfaces fastEthernet 0/1
FastEthernet0/1 is up, line protocol is up
  Hardware is Gt96k FE, address is 001b.2a77.66d3 (bia 001b.2a77.66d3)
  Description: WAN network
  Internet address is 172.16.0.254/12
(snip)</pre>


<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335243/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51qnQIg3giL._SL160_.jpg" class="hatena-asin-detail-image" alt="徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)" title="徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335243/blogpg1xcom01-22/">徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 株式会社ソキウス・ジャパン</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D7%A5%EC%A5%B9%A5%B8%A5%E3%A5%D1%A5%F3">インプレスジャパン</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/12/20</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><a href="http://d.hatena.ne.jp/asin/4844335243/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335901/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51JBNgu8FZL._SL160_.jpg" class="hatena-asin-detail-image" alt="徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)" title="徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335901/blogpg1xcom01-22/">徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 株式会社ソキウス・ジャパン</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D7%A5%EC%A5%B9">インプレス</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2014/05/22</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><a href="http://d.hatena.ne.jp/asin/4844335901/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Cisco 1841の初期化
BASENAME: 2016/01/11/201821
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 20:18:21
CATEGORY: 勉強
CATEGORY: Cisco
CATEGORY: ルーター
CATEGORY: 設定
CATEGORY: 勉強
-----
BODY:
<p>config の削除</p>

<pre class="code" data-lang="" data-unlink>erase startup-config</pre>


<p>再起動</p>

<pre class="code" data-lang="" data-unlink>reload</pre>


<p>特権モード入る</p>

<pre class="code" data-lang="" data-unlink>enable
conf ter</pre>


<p>ホスト名設定</p>

<pre class="code" data-lang="" data-unlink>hostname R1</pre>


<p>IP アドレスの設定</p>

<p>no shutdown とするのがポイント</p>

<pre class="code" data-lang="" data-unlink>interface fastEthernet 0/0
ip address 192.168.0.1 255.255.255.0
no shutdown</pre>




<pre class="code" data-lang="" data-unlink>interface fastEthernet 0/1
ip address 172.16.0.254 255.240.0.0
no shutdown</pre>


<p>設定の保存</p>

<pre class="code" data-lang="" data-unlink>copy running-config startup-config</pre>


<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335243/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51qnQIg3giL._SL160_.jpg" class="hatena-asin-detail-image" alt="徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)" title="徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335243/blogpg1xcom01-22/">徹底攻略 Cisco CCENT/CCNA Routing & Switching 教科書 ICND1編[100-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 株式会社ソキウス・ジャパン</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D7%A5%EC%A5%B9%A5%B8%A5%E3%A5%D1%A5%F3">インプレスジャパン</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/12/20</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><a href="http://d.hatena.ne.jp/asin/4844335243/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335901/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51JBNgu8FZL._SL160_.jpg" class="hatena-asin-detail-image" alt="徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)" title="徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844335901/blogpg1xcom01-22/">徹底攻略Cisco CCNA Routing & Switching教科書ICND2編[200-101J][200-120J]対応 (ITプロ/ITエンジニアのための徹底攻略)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 株式会社ソキウス・ジャパン</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D7%A5%EC%A5%B9">インプレス</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2014/05/22</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><a href="http://d.hatena.ne.jp/asin/4844335901/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Windows 10 Insider Preview を使ってみた
BASENAME: 2016/01/11/143851
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:38:51
CATEGORY: Windows
CATEGORY: Windows 10
CATEGORY: Insider Preview
-----
BODY:
<p>7 つのエディション
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> 最終版</p>

<p><a href="http://windows.microsoft.com/ja-jp/windows/preview-iso">Windows 10 Insider Preview ISO のダウンロード - Microsoft Windows</a></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/VMware">VMware</a> Workstation 10 に入れました。</p>

<p>仮想化って便利ねー。</p>

<p>現場に Docker とか <a class="keyword" href="http://d.hatena.ne.jp/keyword/GCP">GCP</a> とかいろいろ知ってる<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C0%A5%F3%A5%C7%A5%A3%A1%BC">ダンディー</a>なイケメンエンジニアの人が入ってきて</p>

<p>透過ウィンドウが悶絶しそう。</p>

<p>そしてなんといっても<a class="keyword" href="http://d.hatena.ne.jp/keyword/Microsoft">Microsoft</a> Edge。</p>

<p>Web ノートの作成をして保存しようとしたら死亡。</p>

<p>Introducing <a class="keyword" href="http://d.hatena.ne.jp/keyword/Microsoft">Microsoft</a> Edge</p>

<p>The <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> Insider Preview now includes the new web browser for <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> 10, called <a class="keyword" href="http://d.hatena.ne.jp/keyword/Microsoft">Microsoft</a> Edge.</p>

<p>Note: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Microsoft">Microsoft</a> Edge is currently listed using it's codename "Project <a class="keyword" href="http://d.hatena.ne.jp/keyword/Spartan">Spartan</a>" in the app list. It will be renamed to <a class="keyword" href="http://d.hatena.ne.jp/keyword/Microsoft">Microsoft</a> Edge in a future update.</p>

<p>チャームは抹殺された模様。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 生活もクラウドスタイルでいこう
BASENAME: 2016/01/11/143801
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:38:01
-----
BODY:
<p>ものを持つのは疲れる。
量が多くなる。
それは引っ越しの時に重くのしかかってくる。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%C1%B3%CA.com">価格.com</a>で引っ越しの一括見積りしたら鬼のように電話かかってきた。
すげーな。
というか、業者もピンきりだな。
数年前にアート引っ越しセンターに見積もりとったら市内の1kmいかない転居で7万とか取られた気がする。
その時は社会を知らなかったなと思った。
親にはそれとんでもないボッタクリだよって言われた。
まあ、たしかにぼったくりだ。
東京から茨城までの引っ越しで同じぐらいの値段だからね。
アートさん頼みますよ。
10万以上の値段が見えた時はどうなるかと思ったけど、
引っ越しの日と時間を自由にしたら値引きというイベントが発生し、かなり安くなったので、またアートさんにお願いしました。
前は赤帽さんにお願いしたんだけどね。
一括見積り大事だな。
あとアリさんとヤマトを比較しても良かったかもしれない。</p>

<p>引っ越しの際の解約手続きもうまくなったもんだな。
電気、ガス、水道。
まあ、東京だから便利ってのもあるかな。
ネットで解約できることもあるらしいが、面倒なので直接電話で解消した。
なんでも電話やね。</p>

<p>携帯もドコモ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/au">au</a>、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A5%D5%A5%C8%A5%D0%A5%F3%A5%AF">ソフトバンク</a>である必要性がなくなってきた。
MVNOとか使えば安く済ませられる。
私は携帯をそんな酷使するほど友達はいないんでね。</p>

<p>2年縛りとか、つらいね。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: SourceTree にライセンスファイルを読み込ませる
BASENAME: 2016/01/11/143653
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:36:53
-----
BODY:
<p>毎回 IPASS を入力するのはめんどいしつらい。</p>

<p>読み込まれたライセンスファイルは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> では以下に配置される。</p>

<pre class="code" data-lang="" data-unlink>C:\Users\wnoguchi\AppData\Local\Atlassian\SourceTree\sourcetree.license</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ConoHa のログインする入り口が新しくなっていた件
BASENAME: 2016/01/11/143607
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:36:07
-----
BODY:
<p>みなさんご注意。</p>

<p>新
<a href="https://www.conoha.jp/Login">https://www.conoha.jp/Login</a>
<a href="https://manage.conoha.jp/Dashboard">https://manage.conoha.jp/Dashboard</a></p>

<p>2015年5月17日以前にアカウント登録されたお客様はこちら</p>

<p>旧
<a href="https://cp.conoha.jp/Login.aspx">https://cp.conoha.jp/Login.aspx</a></p>

<p><a href="https://cp.conoha.jp/">https://cp.conoha.jp/</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 使いものにならない初期状態の Mac をある程度使えるまでにもってくまで
BASENAME: 2016/01/11/143539
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:35:39
CATEGORY: Mac
CATEGORY: Yosemite
CATEGORY: Homebrew
CATEGORY: セットアップ
-----
BODY:
<p>最近諸事情があって <a class="keyword" href="http://d.hatena.ne.jp/keyword/MacBook%20Air">MacBook Air</a> を変えました。はい、 Time Machine なんて使ってませんでした。<br/>
もうまっさらですよ。やる気もまっさら。<br/>
Homebrew と Homebrew Cask でだいたいインストールしたところで心が折れてしばらくターミナル環境整えてませんでした。<br/>
メモ書きはしてたんですけどねー。<br/>
はい、怠慢ですね。<br/>
家で何か作業しようとすると腰が痛くなるしデスクトップに座るのも腰が痛くてつらいし、
ベッドに横たわりたくなるし何もする気が起きなくてお酒飲みたくなってしまうので、
無理やり外に出てスタバで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E4%A5%EA%A5%F3%A5%B0">ドヤリング</a>しながら文章書いてる次第です。</p>

<p>最近開発環境まともに整える必要が出てきて重い腰を上げてやってる次第です。</p>

<p>今度買うのは <a class="keyword" href="http://d.hatena.ne.jp/keyword/MacBook%20Pro">MacBook Pro</a> 15 インチがいいなあ。。。<br/>
13 インチ 8GB の <a class="keyword" href="http://d.hatena.ne.jp/keyword/MBA">MBA</a> でもけっこう非力です。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a> なんて動かしたらもうそれで終わりですよ。<br/>
最近は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%20Apps">Google Apps</a> が幅を効かせているからある程度はいけますが、
やっぱりオフィス系の文章は開けないと使いものにならないし、
Office for <a class="keyword" href="http://d.hatena.ne.jp/keyword/mac">mac</a> 2011 とかあんなの Office のまがい物だからね？</p>

<p>さて愚痴が長くなってしまいました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> を買って使えるようにするまでどうしたか、その記録です。<br/>
また同じ轍を踏まなくていいように。<br/>
つーか Time <a class="keyword" href="http://d.hatena.ne.jp/keyword/Capsule">Capsule</a> 買えよって話か。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%C3%A5%C8%A5%D5%A5%A1%A5%A4%A5%EB">ドットファイル</a>とか設定ファイル <a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a> に移行しようかな・・。</p>

<p><strong>以下は随時更新する予定</strong></p>

<p>あ、 <a href="https://chrome.google.com/webstore/detail/bloglinkclipper/jcbdhcdpoagflgclgidimolohhmofnma?hl=ja">BlogLinkClipper</a> 使ってください。
お願いします。（宣伝）</p>

<h2>References</h2>

<h3>Related Posts</h3>

<ol>
<li><a href="http://blog.pg1x.com/entry/2014/08/22/200000">Mac OS X の tmux でクリップボードを使えるようにした（pbcopyとか） - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/08/19/232656">僕の iTerm2 + zsh のキーバインド定義 - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/10/21/210545">Yosemiteにして直面した困ったことつらつら書いていく - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/08/10/025902-mac-iterm2-and-powerline">MacにiTerm2+Powerlineを今更ながら入れてみた - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/07/29/083626">Mac OS X Mavericksでawscliをインストールする - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/02/19/222928">Macのzshでawscliの補完を有効化する - 戦場のプログラマー</a></li>
<li><a href="http://blog.pg1x.com/entry/2013/12/08/000913">Amazon Route53の設定管理ツールのRoadworkerを使ってみた - 戦場のプログラマー</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: マルチ商法（MLM、ネットワークビジネス）の生態系と対策
BASENAME: 2016/01/11/143443
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:34:43
CATEGORY: マルチ商法
CATEGORY: MLM
CATEGORY: ねずみ講
CATEGORY: 連鎖販売取引
CATEGORY: ネットワークビジネス
CATEGORY: 詐欺
CATEGORY: 合コン
CATEGORY: 街コン
CATEGORY: 婚活
CATEGORY: タワーマンション
CATEGORY: BMW
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%C1%BE%A6%CB%A1">マルチ商法</a>またの名を<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CD%A5%C3%A5%C8%A5%EF%A1%BC%A5%AF%A5%D3%A5%B8%A5%CD%A5%B9">ネットワークビジネス</a>という。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CB%A5%E5%A1%BC%A5%A6%A5%A8%A5%A4%A5%BA">ニューウエイズ</a>。<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CB%A5%E5%A1%BC%A5%A6%A5%A7%A5%A4%A5%BA">ニューウェイズ</a>ではないらしいですね。最近名前をモデーアに社名を変えたようですが。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%E0%A5%A6%A5%A7%A5%A4">アムウェイ</a>や<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CB%A5%E5%A1%BC%A5%B9%A5%AD%A5%F3">ニュースキン</a>と同じたぐいのものです。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CF%A2%BA%BF%C8%CE%C7%E4%BC%E8%B0%FA">連鎖販売取引</a>であることに変わりはありません。</p>

<p>日本での有力な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B1%BF%B1%C4%C3%C4%C2%CE">運営団体</a>はなんちゃらランドです。
どこかのネズミを想起させる会社名は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%CD%A4%BA%A4%DF%B9%D6">ねずみ講</a>とマルチをかけているんじゃないかと思いました。</p>

<p>登場人物</p>

<p>Sくん
M子
Iさん</p>

<p>Oさん
Yさん</p>

<p>Tナー
Mゆきさん
Kさん</p>

<p>雲の上の人</p>

<p>とにかく商品が高い。
なんであんな値段するのかわからない。</p>

<p>初期投資</p>

<p>23万円</p>

<p>月額運用コスト
10万円</p>

<p>すごいねー。</p>

<p>土日もないし、友人の結婚式にも行けなかった。
あいつら本当にあたまがおかしい。
宗教と同じだよ。</p>

<p>予防接種というらしい。
鳥肌立ちまくりです。
僕のことそんな目で見てたの？
勢い良く手をあげてた。</p>

<p>結果の原因は全て自分自身とか毎回言ってましたね。</p>

<p>全体経営者会議というものがあるのですが、それが土日使って行われるわけです。
ほんと金も時間もったいないですよ。</p>

<p>出会いを求めるために彼らは日々合コン、恋活、街コンに繰り出しているらしいです。
非リア男子の感情を弄ぶクソどもです。</p>

<p>みんなアダ名で呼び合っているらしいです。
こんなアダ名いやだと言ったが私はアップラインの人に言われたアダ名変えられないと言ってました。
これって個人名特定されないための対策なんでしょうか。</p>

<p>金持ち父さん貧乏父さん
金持ち父さんの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AD%A5%E3%A5%C3%A5%B7%A5%E5%A5%D5%A5%ED%A1%BC">キャッシュフロー</a>・クワドラント</p>

<p>ここまではいい。
やつらはこれを道具にすることが多い。</p>

<p>21世紀のビジネス</p>

<p>ん？</p>

<p>パーフェクトドリーム</p>

<p>んんん？</p>

<p>みんなタワーマンションに住み、と<a class="keyword" href="http://d.hatena.ne.jp/keyword/BMW">BMW</a>に乗りたがる。</p>

<p>いやー東京はこわいところですね。
かっぺ、というより猜疑心を持っていなかった私はこういうものです。</p>

<p>どうもSE出身の人間が荒稼ぎしている人には多いらしいですね。</p>

<p>あんまりその場の空気には飲まれないほうがいいですよ。
痛い目見たな。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: rbenv + ruby-build をインスコする(Ubuntu, CentOS)
BASENAME: 2016/01/11/143151
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/11/2016 14:31:51
-----
BODY:
<p>毎回めんどくせぇ・・・。<br/>
最近は anyenv というのが流行っているらしい。</p>

<h2>動作確認をした環境</h2>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a> 7.0</li>
</ol>


<h2>やること</h2>

<h3>必要なもの入れる</h3>

<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a></h4>

<pre class="code" data-lang="" data-unlink>sudo yum -y groupinstall &#34;Development Tools&#34;
sudo yum -y install openssl-devel zlib-devel readline-devel mysql-devel sqlite-devel git</pre>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a></h4>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install libssl-dev zlib1g-dev libreadline-dev libmysqlclient-dev sqlite3 libsqlite3-dev g++ git curl</pre>


<h3>Git の初期設定</h3>

<pre class="code" data-lang="" data-unlink>git config --global user.name &#34;Wataru Noguchi&#34;
git config --global user.email &#34;wnoguchi.0727@gmail.com&#34;
git config --global core.editor &#39;vim -c &#34;set fenc=utf-8&#34;&#39;
git config --global color.diff auto
git config --global color.status auto
git config --global color.branch auto

# required version 1.8.x &gt;=
git config --global push.default simple

git config --global core.precomposeunicode true
git config --global core.quotepath false</pre>


<h3>rbenv 入れる</h3>

<pre class="code" data-lang="" data-unlink>git clone https://github.com/sstephenson/rbenv.git ~/.rbenv</pre>


<p>以下を <code>~/.bash_profile</code> に追記。</p>

<pre class="code" data-lang="" data-unlink># ~/.bash_profile
export PATH=&#34;$HOME/.rbenv/bin:$PATH&#34;
# ~/.bashrc
eval &#34;$(rbenv init -)&#34;</pre>




<pre class="code" data-lang="" data-unlink>$ . ~/.bashrc
$ type rbenv
rbenv is a function</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/ruby">ruby</a>-build 入れる</h3>

<pre class="code" data-lang="" data-unlink>git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a> をインストールする</h3>

<pre class="code" data-lang="" data-unlink>$ rbenv install --list
  2.0.0-p645
  2.1.0-dev
  2.1.0-preview1
  2.1.0-preview2
  2.1.0-rc1
  2.1.0
  2.1.1
  2.1.2
  2.1.3
  2.1.4
  2.1.5
  2.1.6
  2.2.0-dev
  2.2.0-preview1
  2.2.0-preview2
  2.2.0-rc1
  2.2.0
  2.2.1
  2.2.2
  2.3.0-dev</pre>


<p>2.2.2 入れるか。</p>

<pre class="code" data-lang="" data-unlink>$ rbenv install 2.2.2
$ rbenv global 2.2.2
$ ruby -v
ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]
$ rbenv rehash
$ rbenv exec gem install bundler --no-ri --no-rdoc
Fetching: bundler-1.10.6.gem (100%)
Successfully installed bundler-1.10.6
1 gem installed

$ bundle --version
Bundler version 1.10.6</pre>


<h2>References</h2>

<ol>
<li><a href="https://github.com/sstephenson/rbenv">sstephenson/rbenv</a></li>
<li><a href="https://github.com/sstephenson/ruby-build#readme">sstephenson/ruby-build</a></li>
<li><a href="https://gist.github.com/wnoguchi/7099085">rbenv and rails environement one shot install script.</a></li>
<li><a href="http://qiita.com/wnoguchi/items/f7358a227dfe2640cce3">Linux - Gitをインストールしたら真っ先にやっておくべき初期設定 - Qiita</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: otto dev コマンドを使ってみた
BASENAME: 2016/01/01/133601
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/01/2016 13:36:01
CATEGORY: Otto
CATEGORY: Vagrant
CATEGORY: HashiCorp
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160101/20160101132031.png
-----
BODY:
<p>新年一発目。
HashiCorp の集大成とも言えるべき Otto をインストールしてみた。</p>

<h2>Otto とは</h2>

<p>若干ググラビリティが低いのが難点。<br/>
これはすごく乱暴に言ってしまえば <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> の後継となるソフトウェアである。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> やら Consul やら Vault やら <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> やら <a class="keyword" href="http://d.hatena.ne.jp/keyword/GCP">GCP</a> といったいろいろなものをシームレスに連携して統一世界を作るためのものらしい。<br/>
Mitchell Hashimoto 氏がここまで予見して Consul や Vault といったプロダクトをリリースしていたとしたら脱帽せざるを得ない。</p>

<p>otto 全般について触ってみた結果を載せられたらいいんだけど、何分時間も頭も足りないので全部は解説できない。<br/>
なので otto dev サブコマンドで起動、停止するだけの簡単なものを記録として残す。</p>

<p>さて、 otto dev サブコマンドは結論からいうと今のところ <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> なしには動かない。<br/>
バックエンドで <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> を使っている。<br/>
今後は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> 自身も必要なくなって otto だけで動くようになってくれるのかな。<br/>
そうすると <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> の遅さを考えなくて良くなるのだろうか。</p>

<h2>プロジェクトの作成</h2>

<p>otto のプロジェクトを立ち上げるためには既存のソースだけ使うか、それとも Appfile という <a class="keyword" href="http://d.hatena.ne.jp/keyword/JSON">JSON</a> 形式のファイルでどのような言語を使うかを指定してやることになる。<br/>
私はものぐさなので前者。<br/>
おそらく Vagrantfile に記述していたような<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>を構成したり、秘伝のタレめいたシェルプロビジョニングを使いたい場合は Appfile に記述したのだろう。</p>

<h3>ソースの用意</h3>

<p>私は次のようなソースを用意した。</p>

<pre class="code lang-php" data-lang="php" data-unlink><span class="synSpecial">&lt;?php</span>
<span class="synIdentifier">phpinfo</span><span class="synSpecial">()</span>;
</pre>


<h3>otto compile</h3>

<p>そしてそのディレクトリで otto compile する。<br/>
Appfile が見つからなければソースの内容をみてどの言語のプロジェクトか判断してくれるようだ。<br/>
この場合、リリースするインフラストラクチャは <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> が選択された。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ otto compile
==&gt; Loading Appfile...
==&gt; No Appfile found! Detecting project information...
    No Appfile was found. If there is no Appfile, Otto will do its best
    to detect the type of application this is and set reasonable defaults.
    This is a good way to get started with Otto, but over time we recommend
    writing a real Appfile since this will allow more complex customizations,
    the ability to reference dependencies, versioning, and more.
==&gt; Fetching all Appfile dependencies...
==&gt; Compiling...
    Application:    otto-php (php)
    Project:        otto-php
    Infrastructure: aws (simple)

    Compiling infra...
    Compiling foundation: consul
==&gt; Compiling main application...
==&gt; Compilation success!
    This means that Otto is now ready to start a development environment,
    deploy this application, build the supporting infrastructure, and
    more. See the help for more information.

    Supporting files to enable Otto to manage your application from
    development to deployment have been placed in the output directory.
    These files can be manually inspected to determine what Otto will do.</pre>


<h2>ローカル開発環境の立ち上げ</h2>

<h3>otto dev</h3>

<p>満を持して <code>vagrant up</code> に相当するコマンドを叩く。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ otto dev
Would you like Otto to install Vagrant?
  Otto requires vagrant to be installed, but it couldn&#39;t be found on your
  system. Otto can install the latest version of vagrant for you. vagrant
  will be installed system-wide since it uses system-specific installers.
  Would you like Otto to install vagrant for you? Alternatively, you may install
  this on your own.

  If you answer yes, Otto will install vagrant version 1.8.1.

  Please enter &#39;yes&#39; to continue. Any other value will exit.

  Enter a value:

Error building dev environment: Installation cancelled</pre>


<p>otto dev は <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> がインストールされていないと動かないらしい、もしくは otto 全体でそうなんだろうか。<br/>
あなたがお望みなら自動でシステムワイドでインストールしてやるぜ？といっているが、ここは yes 以外の適当なキーを押して抜けて自力で <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> をインストールする。</p>

<p>また <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> を Web サイトからいちいちダウンロードするのは果てしなくだるいので、 otto にまかせてしまってもいいのかもしれない。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> の場合は Homebrew Cask がインストールされていればコマンド一発でインストールできる。<br/>
まあ、 sudo 権限が必要なのでパスワードは要求されるが・・・。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ brew cask install vagrant
==&gt; Downloading https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1.dmg
######################################################################## 100.0%
==&gt; Verifying checksum for Cask vagrant
==&gt; Running installer for vagrant; your password may be necessary.
==&gt; Package installers may write to any location; options such as --appdir are i
Password:
==&gt; installer: Package name is Vagrant
==&gt; installer: Installing at base path /
==&gt; installer: The install was successful.
🍺  vagrant staged at &#39;/opt/homebrew-cask/Caskroom/vagrant/1.8.1&#39; (6 files, 85M)</pre>


<p>仕切り直して改めて <code>otto dev</code> 。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ otto dev
==&gt; Creating local development environment with Vagrant if it doesn&#39;t exist...
    Raw Vagrant output will begin streaming in below. Otto does
    not create this output. It is mirrored directly from Vagrant
    while the development environment is being created.

Bringing machine &#39;default&#39; up with &#39;virtualbox&#39; provider...
==&gt; default: Box &#39;hashicorp/precise64&#39; could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: &gt;= 0
==&gt; default: Loading metadata for box &#39;hashicorp/precise64&#39;
    default: URL: https://atlas.hashicorp.com/hashicorp/precise64
==&gt; default: Adding box &#39;hashicorp/precise64&#39; (v1.1.0) for provider: virtualbox
    default: Downloading: https://vagrantcloud.com/hashicorp/boxes/precise64/versions/1.1.0/providers/virtualbox.box
==&gt; default: Successfully added box &#39;hashicorp/precise64&#39; (v1.1.0) for &#39;virtualbox&#39;!
==&gt; default: Importing base box &#39;hashicorp/precise64&#39;...
==&gt; default: Matching MAC address for NAT networking...
==&gt; default: Checking if box &#39;hashicorp/precise64&#39; is up to date...
==&gt; default: Setting the name of the VM: dev_default_1451618455051_6865
==&gt; default: Clearing any previously set network interfaces...
==&gt; default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==&gt; default: Forwarding ports...
    default: 22 (guest) =&gt; 2222 (host) (adapter 1)
==&gt; default: Booting VM...
==&gt; default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it&#39;s present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==&gt; default: Machine booted and ready!
==&gt; default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 4.2.0
    default: VirtualBox Version: 5.0
==&gt; default: Configuring and enabling network interfaces...
==&gt; default: Mounting shared folders...
    default: /vagrant =&gt; /Users/wnoguchi/Documents/pjt/otto/otto-php
    default: /otto/foundation-1 =&gt; /Users/wnoguchi/Documents/pjt/otto/otto-php/.otto/compiled/app/foundation-consul/app-dev
==&gt; default: Running provisioner: shell...
    default: Running: inline script
==&gt; default: stdin: is not a tty
==&gt; default: [otto] Installing Consul...
==&gt; default: [otto] Installing dnsmasq for Consul...
==&gt; default: [otto] Configuring consul service: otto-php
==&gt; default: Running provisioner: shell...
    default: Running: inline script
==&gt; default: stdin: is not a tty
==&gt; default: [otto] Adding apt repositories and updating...
==&gt; default: [otto] Installing PHP and supporting packages...
==&gt; default: [otto] Installing Composer...
==&gt; default: #!/usr/bin/env php
==&gt; default: All settings correct for using Composer
==&gt; default: Downloading...
==&gt; default:
==&gt; default: Composer successfully installed to: /tmp/composer.phar
==&gt; default:
==&gt; default: Use it: php composer.phar

==&gt; Caching SSH credentials from Vagrant...
==&gt; Development environment successfully created!
    IP address: 100.79.109.82

    A development environment has been created for writing a PHP app.

    Edit files locally on your machine, the file changes will be synced
    to the development environment automatically.

    To run and view your application, run &#39;otto dev ssh&#39; to enter the
    development environment. You&#39;ll be placed directly into the working
    directory where you can run &#34;composer&#34;, &#34;php&#34;, etc.

    You can access the environment from this machine using the IP address above.
    For example, if you start your app with &#39;php -S 0.0.0.0:5000&#39;, then you can
    access it using the above IP at port 5000.</pre>


<p>このログメッセージを見ればわかるが、 Consul もインストールされ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> ではもはや必須となった Composer までよろしくインストールしてくれている。<br/>
composer.<a class="keyword" href="http://d.hatena.ne.jp/keyword/json">json</a> まで入れたらいい感じにインストールしてくれるんだろうか。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a> の precise64 が選択されている。<br/>
ここも詳細に指定したいな。</p>

<p>開発環境として <code>100.79.109.82</code> という IP が与えられたので、さっそくホスト OS からブラウザでアクセスしてみる。<br/>
「データを受信していません」となった。どうも環境の AP サーバは自力で開発環境に入り、立ち上げてやる必要があるらしい。</p>

<p>いつものくせで <code>vagrant ssh</code> としてしまったら</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ vagrant ssh
A Vagrant environment or target machine is required to run this
command. Run `vagrant init` to create a new Vagrant environment. Or,
get an ID of a target machine from `vagrant global-status` to run
this command on. A final option is to change to a directory with a
Vagrantfile and to try again.</pre>


<p><code>vagrant init</code> せえよアホンダラア！！って怒られてしまった。
およそ <code>otto dev ssh</code> とでもするんだろう。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ otto dev ssh
==&gt; Executing SSH. This may take a few seconds...
Welcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
New release &#39;14.04.3 LTS&#39; available.
Run &#39;do-release-upgrade&#39; to upgrade to it.

Welcome to your Vagrant-built virtual machine.
Last login: Fri Sep 14 06:23:18 2012 from 10.0.2.2
vagrant@precise64:/vagrant$ cd /vagrant/
vagrant@precise64:/vagrant$ ls
phpinfo.php</pre>


<p>入れた。</p>

<pre class="code" data-lang="" data-unlink>vagrant@precise64:/vagrant$ php -S 0.0.0.0:5000
PHP 5.6.16-2+deb.sury.org~precise+1 Development Server started at Fri Jan  1 03:27:21 2016
Listening on http://0.0.0.0:5000
Document root is /vagrant
Press Ctrl-C to quit.
[Fri Jan  1 03:27:40 2016] 100.79.109.1:51305 [200]: /phpinfo.php
[Fri Jan  1 03:27:41 2016] 100.79.109.1:51306 [404]: /favicon.ico - No such file or directory</pre>


<p>そしてブラウザから 5000 番ポートを叩く。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160101/20160101132031.png" alt="f:id:wnoguchi0727:20160101132031p:plain" title="f:id:wnoguchi0727:20160101132031p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>見れた。</p>

<p>さらにアクセス元のリモート<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>を取得するサンプルも書いてみた。<br/>
開発環境にはすぐに同期される。</p>

<pre class="code lang-php" data-lang="php" data-unlink><span class="synSpecial">&lt;?php</span>
<span class="synPreProc">echo</span> <span class="synStatement">$</span><span class="synIdentifier">_SERVER</span><span class="synSpecial">[</span>'<span class="synConstant">REMOTE_ADDR</span>'<span class="synSpecial">]</span>;
</pre>


<p>そしてブラウザで見る。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20160101/20160101133202.png" alt="f:id:wnoguchi0727:20160101133202p:plain" title="f:id:wnoguchi0727:20160101133202p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>見れた。</p>

<p>じゃあシャットダウン。これもサブコマンドで <code>otto dev halt</code> だろうと予想がつく。</p>

<pre class="code" data-lang="" data-unlink>noguchiwataru-no-MacBook-Air:otto-php wnoguchi$ otto dev halt
==&gt; Halting the the local development environment...
==&gt; default: Attempting graceful shutdown of VM...

==&gt; Development environment halted!</pre>


<p>シャットダウンできた。</p>

<h2>知らない IP アドレスだ...</h2>

<p>ipduh によるとこの IP アドレスは</p>

<p><a href="http://ipduh.com/ip/?100.79.109.82">http://ipduh.com/ip/?100.79.109.82</a></p>

<blockquote><p>100.79.109.82 is in the 100.64.0.0/10 block which is reserved to be used as Shared Address Space to accomodate the need of Carrier-Grade NAT (CGN) devices. It is anticipated that Service Providers will use this Shared Address Space to number the interfaces that connect CGN devices to Customer Premises Equipment (<a class="keyword" href="http://d.hatena.ne.jp/keyword/CPE">CPE</a>). [ <a class="keyword" href="http://d.hatena.ne.jp/keyword/RFC">RFC</a> 6598 ]</p>

<p>Integer: 1682926930</p></blockquote>

<p>のように Carrier-Grade NAT デバイスが Customer Premises Equipment(<a class="keyword" href="http://d.hatena.ne.jp/keyword/CPE">CPE</a>) に接続するための共有<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%C9%A5%EC%A5%B9%B6%F5%B4%D6">アドレス空間</a>として <code>100.64.0.0/10</code> は予約されているらしい。<br/>
グローバル IP <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%C9%A5%EC%A5%B9%B6%F5%B4%D6">アドレス空間</a>をむやみに汚染しているわけではないらしい。</p>

<ul>
<li><a href="https://ja.wikipedia.org/wiki/%E3%82%AD%E3%83%A3%E3%83%AA%E3%82%A2%E3%82%B0%E3%83%AC%E3%83%BC%E3%83%89NAT">キャリアグレードNAT - Wikipedia</a></li>
</ul>


<p>これを見る限り CGN はグローバル <a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv4">IPv4</a> アドレス枯渇問題をとりあえず回避するために <a class="keyword" href="http://d.hatena.ne.jp/keyword/ISP">ISP</a> が共有NAT<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%C9%A5%EC%A5%B9%B6%F5%B4%D6">アドレス空間</a>を定義したことがことの始まりであり、この <a class="keyword" href="http://d.hatena.ne.jp/keyword/RFC">RFC</a> 定義空間をよろしく使っているのが otto dev になるようだ。</p>

<h2>References</h2>

<ol>
<li><a href="http://deeeet.com/writing/2015/10/04/otto/">Hashicorp Ottoを読む | SOTA</a></li>
<li><a href="http://dev.classmethod.jp/tool/nomad-otto-ataglance/">HashiCorpの新プロダクトNomadとOttoを触ってみた ｜ Developers.IO</a></li>
<li><a href="http://msyksphinz.hatenablog.com/entry/2015/10/01/030000">Hashicorp社の新しい仮想開発環境"Otto"でAppfileを記述してみた - FPGA開発日記</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 
BASENAME: 2015/12/31/011713
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/31/2015 01:17:13
-----
BODY:
<p><a href="https://aws.amazon.com/forms/ec2-email-limit-rdns-request?catalog=true&amp;isauthcode=true">Request to Remove Email Sending Limitations</a>
<a href="http://blog.cloudpack.jp/2015/03/23/prepare-to-send-mails-from-amazon-ec2-instance/">EC2インスタンスからメール送信のための準備 | cloudpack技術情報サイト</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: ニコニコ動画費用感
BASENAME: 2015/12/29/171605
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/29/2015 17:16:05
CATEGORY: ニコニコ動画
CATEGORY: チャンネル
CATEGORY: お金
-----
BODY:
<p>ニコニコチャンネルはだいたい公開されて1週間は最新話と1話が無料なところが多いが、それを過ぎると1話以外は有料となる。
ポイントという<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%A5%DE%A5%CD%A1%BC">電子マネー</a>に似た<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%EA%A5%DA%A5%A4%A5%C9">プリペイド</a>で購入するもので視聴することができる。（だいたい1週間。ものによってばらつきがある）
1 話あたり 216 pt（ポイント）とすると、アニメクールで換算すると</p>

<ul>
<li>1クール = 216 * 12 = 2,592 pt</li>
<li>2クール = 216 * 24 = 5,184 pt</li>
</ul>


<p>過去作を見るときはできるだけ全話パックか、ニコニコアニメ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DA%A5%B7%A5%E3">スペシャ</a>ルで一気見するのがおすすめ。
<strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%C8%A5%C1%A5%E3%A1%BC%A5%B8">オートチャージ</a>機能は便利だが、ついつい見すぎてしまったということがないように気をつけよう。</strong></p>

<ul>
<li><a href="http://ch.nicovideo.jp/anime-sp">ニコニコアニメスペシャル - ニコニコチャンネル:アニメ</a></li>
</ul>


<p>ちなみにプレミアム会員はだいたい 540 円だ。</p>

<ul>
<li><a href="http://ch.nicovideo.jp/portal/anime">アニメ - ニコニコチャンネル</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Amazon Linux で Let&#39;s Encrypt を使ってみた
BASENAME: 2015/12/28/191827
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/28/2015 19:18:27
CATEGORY: AWS
CATEGORY: SSL
CATEGORY: Let&#39;s Encrypt
CATEGORY: Amazon Linux
CATEGORY: オレオレ証明書
CATEGORY: 自己署名証明書
CATEGORY: Start SSL
-----
BODY:
<p>最近巷ではサイト全体の <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> 化が流行っています。<br/>
個人で運営しているサイトの管理画面を<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>化したい、だけど<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A5%EC%A5%AA%A5%EC%BE%DA%CC%C0%BD%F1">オレオレ証明書</a>（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%AB%B8%CA%BD%F0%CC%BE%BE%DA%CC%C0%BD%F1">自己署名証明書</a>）は正直怖い。<br/>
仕方がない、<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL%BE%DA%CC%C0%BD%F1">SSL証明書</a>買うか・・・となっていましたが、CA に <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL%BE%DA%CC%C0%BD%F1">SSL証明書</a>を新規、更新問わずに発行してもらうことのめんどくささは2, 3回やったことのある人はわかると思います。<br/>
Common Name を間違って <a class="keyword" href="http://d.hatena.ne.jp/keyword/CSR">CSR</a> を発行しないといけないし、何より Approve までの過程がめんどくさい。<br/>
何より個人サイトの<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>ごときに金を払うのがより自分の変態性を引き立たせています。<br/>
Start <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> があるじゃなーいという意見がありますが、 Revoke するのにお金がかかり、手続きも結構面倒という点においては真の意味で無料で簡単というわけではありませんでした。</p>

<ul>
<li><a href="http://ya.maya.st/d/201404b.html#s20140413_1">どさにっき</a></li>
</ul>


<p>最近はサイト全体<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>化の動きを推進するため Let's Encrypt というプロジェクトが立ち上がり、最近 Public Beta になりました。<br/>
Let's Encrypt は暗号で守られた統一世界を構築するためのシステムです。<br/>
というのは冗談で、 Let's Encrypt は手続きも面倒で有料な <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> 証明書のDV証明書発行を無料で、かつ簡単に自動化するためのエコシステム全体を指します。</p>

<h2>やってみる</h2>

<h3>前提条件</h3>

<ol>
<li>Git, <a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> は対象サーバにインストール済み</li>
</ol>


<h3>Let's Encrypt をインストール</h3>

<pre class="code" data-lang="" data-unlink>git clone https://github.com/letsencrypt/letsencrypt
cd letsencrypt/</pre>


<p>ではガイドに従って letsencrypt-auto コマンドを使ってみようとした。</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-3-79 letsencrypt]$ ./letsencrypt-auto --help
WARNING: Amazon Linux support is very experimental at present...
if you would like to work on improving it, please ensure you have backups
and then run this script again with the --debug flag!</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> サポートは実験的だよ！バックアップしてから使ってね！ということが書いてある。
そんなの関係ねぇーーーーーーーーーーー！！！！！！
大丈夫、壊してもいい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>なんで。</p>

<p>いざ、</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-6-219 letsencrypt]$ ./letsencrypt-auto --debug --help
Bootstrapping dependencies for Amazon Linux...
yum は /usr/bin/yum です
読み込んだプラグイン:priorities, update-motd, upgrade-helper
amzn-main/latest                                                                                             | 2.1 kB     00:00
amzn-updates/latest                                                                                          | 2.3 kB     00:00
依存性の解決をしています
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ python26.x86_64 0:2.6.9-2.84.amzn1 を インストール
--&gt; 依存性の処理をしています: libpython2.6.so.1.0()(64bit) のパッケージ: python26-2.6.9-2.84.amzn1.x86_64
---&gt; パッケージ python26-devel.x86_64 0:2.6.9-2.84.amzn1 を インストール
---&gt; パッケージ python26-virtualenv.noarch 0:12.0.7-1.10.amzn1 を インストール
--&gt; 依存性の処理をしています: python26-setuptools のパッケージ: python26-virtualenv-12.0.7-1.10.amzn1.noarch
--&gt; 依存性の処理をしています: python26-pip のパッケージ: python26-virtualenv-12.0.7-1.10.amzn1.noarch
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ python26-libs.x86_64 0:2.6.9-2.84.amzn1 を インストール
---&gt; パッケージ python26-pip.noarch 0:6.1.1-1.21.amzn1 を インストール
--&gt; 依存性の処理をしています: python26-backports-ssl_match_hostname のパッケージ: python26-pip-6.1.1-1.21.amzn1.noarch
---&gt; パッケージ python26-setuptools.noarch 0:12.2-1.30.amzn1 を インストール
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ python26-backports-ssl_match_hostname.noarch 0:3.4.0.2-1.12.amzn1 を インストール
--&gt; 依存性の処理をしています: python26-backports のパッケージ: python26-backports-ssl_match_hostname-3.4.0.2-1.12.amzn1.noarch
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ python26-backports.x86_64 0:1.0-3.14.amzn1 を インストール
--&gt; 依存性解決を終了しました。

依存性を解決しました

====================================================================================================================================
 Package                                           アーキテクチャー   バージョン                     リポジトリー              容量
====================================================================================================================================
インストール中:
 python26                                          x86_64             2.6.9-2.84.amzn1               amzn-updates             5.8 M
 python26-devel                                    x86_64             2.6.9-2.84.amzn1               amzn-updates             184 k
 python26-virtualenv                               noarch             12.0.7-1.10.amzn1              amzn-main                2.0 M
依存性関連でのインストールをします:
 python26-backports                                x86_64             1.0-3.14.amzn1                 amzn-main                5.2 k
 python26-backports-ssl_match_hostname             noarch             3.4.0.2-1.12.amzn1             amzn-main                 12 k
 python26-libs                                     x86_64             2.6.9-2.84.amzn1               amzn-updates             696 k
 python26-pip                                      noarch             6.1.1-1.21.amzn1               amzn-main                1.9 M
 python26-setuptools                               noarch             12.2-1.30.amzn1                amzn-main                582 k

トランザクションの要約
====================================================================================================================================
インストール  3 パッケージ (+5 個の依存関係のパッケージ)

総ダウンロード容量: 11 M
インストール容量: 32 M
Downloading packages:
(1/8): python26-2.6.9-2.84.amzn1.x86_64.rpm                                                                  | 5.8 MB     00:00
(2/8): python26-backports-1.0-3.14.amzn1.x86_64.rpm                                                          | 5.2 kB     00:00
(3/8): python26-backports-ssl_match_hostname-3.4.0.2-1.12.amzn1.noarch.rpm                                   |  12 kB     00:00
(4/8): python26-devel-2.6.9-2.84.amzn1.x86_64.rpm                                                            | 184 kB     00:00
(5/8): python26-libs-2.6.9-2.84.amzn1.x86_64.rpm                                                             | 696 kB     00:00
(6/8): python26-pip-6.1.1-1.21.amzn1.noarch.rpm                                                              | 1.9 MB     00:00
(7/8): python26-setuptools-12.2-1.30.amzn1.noarch.rpm                                                        | 582 kB     00:00
(8/8): python26-virtualenv-12.0.7-1.10.amzn1.noarch.rpm                                                      | 2.0 MB     00:00
------------------------------------------------------------------------------------------------------------------------------------
合計                                                                                                 22 MB/s |  11 MB  00:00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  インストール中          : python26-libs-2.6.9-2.84.amzn1.x86_64                                                               1/8
  インストール中          : python26-2.6.9-2.84.amzn1.x86_64                                                                    2/8
  インストール中          : python26-devel-2.6.9-2.84.amzn1.x86_64                                                              3/8
  インストール中          : python26-backports-1.0-3.14.amzn1.x86_64                                                            4/8
  インストール中          : python26-backports-ssl_match_hostname-3.4.0.2-1.12.amzn1.noarch                                     5/8
  インストール中          : python26-setuptools-12.2-1.30.amzn1.noarch                                                          6/8
  インストール中          : python26-pip-6.1.1-1.21.amzn1.noarch                                                                7/8
  インストール中          : python26-virtualenv-12.0.7-1.10.amzn1.noarch                                                        8/8
  検証中                  : python26-2.6.9-2.84.amzn1.x86_64                                                                    1/8
  検証中                  : python26-setuptools-12.2-1.30.amzn1.noarch                                                          2/8
  検証中                  : python26-libs-2.6.9-2.84.amzn1.x86_64                                                               3/8
  検証中                  : python26-virtualenv-12.0.7-1.10.amzn1.noarch                                                        4/8
  検証中                  : python26-pip-6.1.1-1.21.amzn1.noarch                                                                5/8
  検証中                  : python26-devel-2.6.9-2.84.amzn1.x86_64                                                              6/8
  検証中                  : python26-backports-1.0-3.14.amzn1.x86_64                                                            7/8
  検証中                  : python26-backports-ssl_match_hostname-3.4.0.2-1.12.amzn1.noarch                                     8/8

インストール:
  python26.x86_64 0:2.6.9-2.84.amzn1   python26-devel.x86_64 0:2.6.9-2.84.amzn1   python26-virtualenv.noarch 0:12.0.7-1.10.amzn1

依存性関連をインストールしました:
  python26-backports.x86_64 0:1.0-3.14.amzn1             python26-backports-ssl_match_hostname.noarch 0:3.4.0.2-1.12.amzn1
  python26-libs.x86_64 0:2.6.9-2.84.amzn1                python26-pip.noarch 0:6.1.1-1.21.amzn1
  python26-setuptools.noarch 0:12.2-1.30.amzn1

完了しました!
読み込んだプラグイン:priorities, update-motd, upgrade-helper
ロックファイル /var/run/yum.pid が存在します: PID 2625 として別に実行されています。
Another app is currently holding the yum lock; waiting for it to exit...
 他のアプリケーション: yum
   メモリー:  49 M RSS (259 MB VSZ)
    開始   : Mon Dec 28 09:57:49 2015 - 00:01 秒経過
    状態   : 実行中、PID: 2625
パッケージ ca-certificates-2015.2.4-65.0.1.14.amzn1.noarch はインストール済みか最新バージョンです
依存性の解決をしています
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ augeas-libs.x86_64 0:1.0.0-5.7.amzn1 を インストール
---&gt; パッケージ dialog.x86_64 0:1.1-9.20080819.1.5.amzn1 を インストール
---&gt; パッケージ gcc.noarch 0:4.8.3-3.20.amzn1 を インストール
--&gt; 依存性の処理をしています: gcc48 = 4.8.3 のパッケージ: gcc-4.8.3-3.20.amzn1.noarch
---&gt; パッケージ libffi-devel.x86_64 0:3.0.13-11.4.amzn1 を インストール
---&gt; パッケージ openssl-devel.x86_64 1:1.0.1k-13.88.amzn1 を インストール
--&gt; 依存性の処理をしています: openssl(x86-64) = 1:1.0.1k-13.88.amzn1 のパッケージ: 1:openssl-devel-1.0.1k-13.88.amzn1.x86_64
--&gt; 依存性の処理をしています: zlib-devel(x86-64) のパッケージ: 1:openssl-devel-1.0.1k-13.88.amzn1.x86_64
--&gt; 依存性の処理をしています: krb5-devel(x86-64) のパッケージ: 1:openssl-devel-1.0.1k-13.88.amzn1.x86_64
---&gt; パッケージ system-rpm-config.noarch 0:9.0.3-42.27.amzn1 を インストール
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ gcc48.x86_64 0:4.8.3-9.109.amzn1 を インストール
--&gt; 依存性の処理をしています: cpp48(x86-64) = 4.8.3-9.109.amzn1 のパッケージ: gcc48-4.8.3-9.109.amzn1.x86_64
--&gt; 依存性の処理をしています: libgomp(x86-64) &gt;= 4.8.3-9.109.amzn1 のパッケージ: gcc48-4.8.3-9.109.amzn1.x86_64
--&gt; 依存性の処理をしています: glibc-devel(x86-64) &gt;= 2.2.90-12 のパッケージ: gcc48-4.8.3-9.109.amzn1.x86_64
--&gt; 依存性の処理をしています: libmpc.so.3()(64bit) のパッケージ: gcc48-4.8.3-9.109.amzn1.x86_64
--&gt; 依存性の処理をしています: libmpfr.so.4()(64bit) のパッケージ: gcc48-4.8.3-9.109.amzn1.x86_64
---&gt; パッケージ krb5-devel.x86_64 0:1.13.2-10.39.amzn1 を インストール
--&gt; 依存性の処理をしています: krb5-libs(x86-64) = 1.13.2-10.39.amzn1 のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
--&gt; 依存性の処理をしています: libverto-devel のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
--&gt; 依存性の処理をしています: libcom_err-devel のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
--&gt; 依存性の処理をしています: keyutils-libs-devel のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
--&gt; 依存性の処理をしています: libselinux-devel のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
--&gt; 依存性の処理をしています: libkdb5.so.8()(64bit) のパッケージ: krb5-devel-1.13.2-10.39.amzn1.x86_64
---&gt; パッケージ openssl.x86_64 1:1.0.1k-10.87.amzn1 を 更新
---&gt; パッケージ openssl.x86_64 1:1.0.1k-13.88.amzn1 を アップデート
---&gt; パッケージ zlib-devel.x86_64 0:1.2.8-7.18.amzn1 を インストール
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ cpp48.x86_64 0:4.8.3-9.109.amzn1 を インストール
---&gt; パッケージ glibc-devel.x86_64 0:2.17-106.163.amzn1 を インストール
--&gt; 依存性の処理をしています: glibc-headers = 2.17-106.163.amzn1 のパッケージ: glibc-devel-2.17-106.163.amzn1.x86_64
--&gt; 依存性の処理をしています: glibc-headers のパッケージ: glibc-devel-2.17-106.163.amzn1.x86_64
---&gt; パッケージ keyutils-libs-devel.x86_64 0:1.5.8-3.12.amzn1 を インストール
---&gt; パッケージ krb5-libs.x86_64 0:1.12.2-14.43.amzn1 を 更新
---&gt; パッケージ krb5-libs.x86_64 0:1.13.2-10.39.amzn1 を アップデート
---&gt; パッケージ libcom_err-devel.x86_64 0:1.42.12-4.40.amzn1 を インストール
---&gt; パッケージ libgomp.x86_64 0:4.8.3-9.109.amzn1 を インストール
---&gt; パッケージ libmpc.x86_64 0:1.0.1-3.3.amzn1 を インストール
---&gt; パッケージ libselinux-devel.x86_64 0:2.1.10-3.22.amzn1 を インストール
--&gt; 依存性の処理をしています: libsepol-devel &gt;= 2.1.5-1 のパッケージ: libselinux-devel-2.1.10-3.22.amzn1.x86_64
--&gt; 依存性の処理をしています: pkgconfig(libsepol) のパッケージ: libselinux-devel-2.1.10-3.22.amzn1.x86_64
---&gt; パッケージ libverto-devel.x86_64 0:0.2.5-4.9.amzn1 を インストール
---&gt; パッケージ mpfr.x86_64 0:3.1.1-4.14.amzn1 を インストール
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ glibc-headers.x86_64 0:2.17-106.163.amzn1 を インストール
--&gt; 依存性の処理をしています: kernel-headers &gt;= 2.2.1 のパッケージ: glibc-headers-2.17-106.163.amzn1.x86_64
--&gt; 依存性の処理をしています: kernel-headers のパッケージ: glibc-headers-2.17-106.163.amzn1.x86_64
---&gt; パッケージ libsepol-devel.x86_64 0:2.1.7-3.12.amzn1 を インストール
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ kernel-headers.x86_64 0:4.1.13-19.30.amzn1 を インストール
--&gt; 依存性解決を終了しました。

依存性を解決しました

====================================================================================================================================
 Package                            アーキテクチャー      バージョン                              リポジトリー                 容量
====================================================================================================================================
インストール中:
 augeas-libs                        x86_64                1.0.0-5.7.amzn1                         amzn-main                   345 k
 dialog                             x86_64                1.1-9.20080819.1.5.amzn1                amzn-main                   205 k
 gcc                                noarch                4.8.3-3.20.amzn1                        amzn-main                   3.9 k
 libffi-devel                       x86_64                3.0.13-11.4.amzn1                       amzn-main                    23 k
 openssl-devel                      x86_64                1:1.0.1k-13.88.amzn1                    amzn-updates                1.5 M
 system-rpm-config                  noarch                9.0.3-42.27.amzn1                       amzn-main                    63 k
依存性関連でのインストールをします:
 cpp48                              x86_64                4.8.3-9.109.amzn1                       amzn-main                   6.7 M
 gcc48                              x86_64                4.8.3-9.109.amzn1                       amzn-main                    17 M
 glibc-devel                        x86_64                2.17-106.163.amzn1                      amzn-updates                1.1 M
 glibc-headers                      x86_64                2.17-106.163.amzn1                      amzn-updates                734 k
 kernel-headers                     x86_64                4.1.13-19.30.amzn1                      amzn-updates                1.0 M
 keyutils-libs-devel                x86_64                1.5.8-3.12.amzn1                        amzn-main                    37 k
 krb5-devel                         x86_64                1.13.2-10.39.amzn1                      amzn-updates                700 k
 libcom_err-devel                   x86_64                1.42.12-4.40.amzn1                      amzn-main                    35 k
 libgomp                            x86_64                4.8.3-9.109.amzn1                       amzn-main                   175 k
 libmpc                             x86_64                1.0.1-3.3.amzn1                         amzn-main                    53 k
 libselinux-devel                   x86_64                2.1.10-3.22.amzn1                       amzn-main                   157 k
 libsepol-devel                     x86_64                2.1.7-3.12.amzn1                        amzn-main                    70 k
 libverto-devel                     x86_64                0.2.5-4.9.amzn1                         amzn-main                    11 k
 mpfr                               x86_64                3.1.1-4.14.amzn1                        amzn-main                   237 k
 zlib-devel                         x86_64                1.2.8-7.18.amzn1                        amzn-main                    53 k
依存性関連での更新をします:
 krb5-libs                          x86_64                1.13.2-10.39.amzn1                      amzn-updates                975 k
 openssl                            x86_64                1:1.0.1k-13.88.amzn1                    amzn-updates                1.6 M

トランザクションの要約
====================================================================================================================================
インストール  6 パッケージ (+15 個の依存関係のパッケージ)
更新                       (  2 個の依存関係のパッケージ)

総ダウンロード容量: 33 M
Downloading packages:
(1/23): augeas-libs-1.0.0-5.7.amzn1.x86_64.rpm                                                               | 345 kB     00:00
(2/23): cpp48-4.8.3-9.109.amzn1.x86_64.rpm                                                                   | 6.7 MB     00:00
(3/23): dialog-1.1-9.20080819.1.5.amzn1.x86_64.rpm                                                           | 205 kB     00:00
(4/23): gcc-4.8.3-3.20.amzn1.noarch.rpm                                                                      | 3.9 kB     00:00
(5/23): gcc48-4.8.3-9.109.amzn1.x86_64.rpm                                                                   |  17 MB     00:00
(6/23): glibc-devel-2.17-106.163.amzn1.x86_64.rpm                                                            | 1.1 MB     00:00
(7/23): glibc-headers-2.17-106.163.amzn1.x86_64.rpm                                                          | 734 kB     00:00
(8/23): kernel-headers-4.1.13-19.30.amzn1.x86_64.rpm                                                         | 1.0 MB     00:00
(9/23): keyutils-libs-devel-1.5.8-3.12.amzn1.x86_64.rpm                                                      |  37 kB     00:00
(10/23): krb5-devel-1.13.2-10.39.amzn1.x86_64.rpm                                                            | 700 kB     00:00
(11/23): krb5-libs-1.13.2-10.39.amzn1.x86_64.rpm                                                             | 975 kB     00:00
(12/23): libcom_err-devel-1.42.12-4.40.amzn1.x86_64.rpm                                                      |  35 kB     00:00
(13/23): libffi-devel-3.0.13-11.4.amzn1.x86_64.rpm                                                           |  23 kB     00:00
(14/23): libgomp-4.8.3-9.109.amzn1.x86_64.rpm                                                                | 175 kB     00:00
(15/23): libmpc-1.0.1-3.3.amzn1.x86_64.rpm                                                                   |  53 kB     00:00
(16/23): libselinux-devel-2.1.10-3.22.amzn1.x86_64.rpm                                                       | 157 kB     00:00
(17/23): libsepol-devel-2.1.7-3.12.amzn1.x86_64.rpm                                                          |  70 kB     00:00
(18/23): libverto-devel-0.2.5-4.9.amzn1.x86_64.rpm                                                           |  11 kB     00:00
(19/23): mpfr-3.1.1-4.14.amzn1.x86_64.rpm                                                                    | 237 kB     00:00
(20/23): openssl-1.0.1k-13.88.amzn1.x86_64.rpm                                                               | 1.6 MB     00:00
(21/23): openssl-devel-1.0.1k-13.88.amzn1.x86_64.rpm                                                         | 1.5 MB     00:00
(22/23): system-rpm-config-9.0.3-42.27.amzn1.noarch.rpm                                                      |  63 kB     00:00
(23/23): zlib-devel-1.2.8-7.18.amzn1.x86_64.rpm                                                              |  53 kB     00:00
------------------------------------------------------------------------------------------------------------------------------------
合計                                                                                                 15 MB/s |  33 MB  00:00:02
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  インストール中          : mpfr-3.1.1-4.14.amzn1.x86_64                                                                       1/25
  インストール中          : libmpc-1.0.1-3.3.amzn1.x86_64                                                                      2/25
  更新します              : 1:openssl-1.0.1k-13.88.amzn1.x86_64                                                                3/25
  更新します              : krb5-libs-1.13.2-10.39.amzn1.x86_64                                                                4/25
  インストール中          : cpp48-4.8.3-9.109.amzn1.x86_64                                                                     5/25
  インストール中          : libcom_err-devel-1.42.12-4.40.amzn1.x86_64                                                         6/25
  インストール中          : libverto-devel-0.2.5-4.9.amzn1.x86_64                                                              7/25
  インストール中          : kernel-headers-4.1.13-19.30.amzn1.x86_64                                                           8/25
  インストール中          : glibc-headers-2.17-106.163.amzn1.x86_64                                                            9/25
  インストール中          : glibc-devel-2.17-106.163.amzn1.x86_64                                                             10/25
  インストール中          : zlib-devel-1.2.8-7.18.amzn1.x86_64                                                                11/25
  インストール中          : keyutils-libs-devel-1.5.8-3.12.amzn1.x86_64                                                       12/25
  インストール中          : libgomp-4.8.3-9.109.amzn1.x86_64                                                                  13/25
  インストール中          : gcc48-4.8.3-9.109.amzn1.x86_64                                                                    14/25
  インストール中          : libsepol-devel-2.1.7-3.12.amzn1.x86_64                                                            15/25
  インストール中          : libselinux-devel-2.1.10-3.22.amzn1.x86_64                                                         16/25
  インストール中          : krb5-devel-1.13.2-10.39.amzn1.x86_64                                                              17/25
  インストール中          : 1:openssl-devel-1.0.1k-13.88.amzn1.x86_64                                                         18/25
  インストール中          : gcc-4.8.3-3.20.amzn1.noarch                                                                       19/25
  インストール中          : system-rpm-config-9.0.3-42.27.amzn1.noarch                                                        20/25
  インストール中          : libffi-devel-3.0.13-11.4.amzn1.x86_64                                                             21/25
  インストール中          : dialog-1.1-9.20080819.1.5.amzn1.x86_64                                                            22/25
  インストール中          : augeas-libs-1.0.0-5.7.amzn1.x86_64                                                                23/25
  整理中                  : 1:openssl-1.0.1k-10.87.amzn1.x86_64                                                               24/25
  整理中                  : krb5-libs-1.12.2-14.43.amzn1.x86_64                                                               25/25
  検証中                  : 1:openssl-devel-1.0.1k-13.88.amzn1.x86_64                                                          1/25
  検証中                  : augeas-libs-1.0.0-5.7.amzn1.x86_64                                                                 2/25
  検証中                  : libsepol-devel-2.1.7-3.12.amzn1.x86_64                                                             3/25
  検証中                  : mpfr-3.1.1-4.14.amzn1.x86_64                                                                       4/25
  検証中                  : libselinux-devel-2.1.10-3.22.amzn1.x86_64                                                          5/25
  検証中                  : libgomp-4.8.3-9.109.amzn1.x86_64                                                                   6/25
  検証中                  : krb5-libs-1.13.2-10.39.amzn1.x86_64                                                                7/25
  検証中                  : keyutils-libs-devel-1.5.8-3.12.amzn1.x86_64                                                        8/25
  検証中                  : zlib-devel-1.2.8-7.18.amzn1.x86_64                                                                 9/25
  検証中                  : dialog-1.1-9.20080819.1.5.amzn1.x86_64                                                            10/25
  検証中                  : kernel-headers-4.1.13-19.30.amzn1.x86_64                                                          11/25
  検証中                  : 1:openssl-1.0.1k-13.88.amzn1.x86_64                                                               12/25
  検証中                  : libmpc-1.0.1-3.3.amzn1.x86_64                                                                     13/25
  検証中                  : krb5-devel-1.13.2-10.39.amzn1.x86_64                                                              14/25
  検証中                  : libffi-devel-3.0.13-11.4.amzn1.x86_64                                                             15/25
  検証中                  : system-rpm-config-9.0.3-42.27.amzn1.noarch                                                        16/25
  検証中                  : glibc-headers-2.17-106.163.amzn1.x86_64                                                           17/25
  検証中                  : cpp48-4.8.3-9.109.amzn1.x86_64                                                                    18/25
  検証中                  : libverto-devel-0.2.5-4.9.amzn1.x86_64                                                             19/25
  検証中                  : gcc48-4.8.3-9.109.amzn1.x86_64                                                                    20/25
  検証中                  : libcom_err-devel-1.42.12-4.40.amzn1.x86_64                                                        21/25
  検証中                  : gcc-4.8.3-3.20.amzn1.noarch                                                                       22/25
  検証中                  : glibc-devel-2.17-106.163.amzn1.x86_64                                                             23/25
  検証中                  : 1:openssl-1.0.1k-10.87.amzn1.x86_64                                                               24/25
  検証中                  : krb5-libs-1.12.2-14.43.amzn1.x86_64                                                               25/25

インストール:
  augeas-libs.x86_64 0:1.0.0-5.7.amzn1     dialog.x86_64 0:1.1-9.20080819.1.5.amzn1   gcc.noarch 0:4.8.3-3.20.amzn1
  libffi-devel.x86_64 0:3.0.13-11.4.amzn1  openssl-devel.x86_64 1:1.0.1k-13.88.amzn1  system-rpm-config.noarch 0:9.0.3-42.27.amzn1

依存性関連をインストールしました:
  cpp48.x86_64 0:4.8.3-9.109.amzn1                                gcc48.x86_64 0:4.8.3-9.109.amzn1
  glibc-devel.x86_64 0:2.17-106.163.amzn1                         glibc-headers.x86_64 0:2.17-106.163.amzn1
  kernel-headers.x86_64 0:4.1.13-19.30.amzn1                      keyutils-libs-devel.x86_64 0:1.5.8-3.12.amzn1
  krb5-devel.x86_64 0:1.13.2-10.39.amzn1                          libcom_err-devel.x86_64 0:1.42.12-4.40.amzn1
  libgomp.x86_64 0:4.8.3-9.109.amzn1                              libmpc.x86_64 0:1.0.1-3.3.amzn1
  libselinux-devel.x86_64 0:2.1.10-3.22.amzn1                     libsepol-devel.x86_64 0:2.1.7-3.12.amzn1
  libverto-devel.x86_64 0:0.2.5-4.9.amzn1                         mpfr.x86_64 0:3.1.1-4.14.amzn1
  zlib-devel.x86_64 0:1.2.8-7.18.amzn1

依存性を更新しました:
  krb5-libs.x86_64 0:1.13.2-10.39.amzn1                             openssl.x86_64 1:1.0.1k-13.88.amzn1

完了しました!
読み込んだプラグイン:priorities, update-motd, upgrade-helper
依存性の解決をしています
--&gt; トランザクションの確認を実行しています。
---&gt; パッケージ mod_ssl.x86_64 1:2.2.31-1.6.amzn1 を インストール
--&gt; 依存性解決を終了しました。

依存性を解決しました

====================================================================================================================================
 Package                     アーキテクチャー           バージョン                              リポジトリー                   容量
====================================================================================================================================
インストール中:
 mod_ssl                     x86_64                     1:2.2.31-1.6.amzn1                      amzn-main                     106 k

トランザクションの要約
====================================================================================================================================
インストール  1 パッケージ

総ダウンロード容量: 106 k
インストール容量: 195 k
Downloading packages:
mod_ssl-2.2.31-1.6.amzn1.x86_64.rpm                                                                          | 106 kB     00:00
Running transaction check
Running transaction test
Transaction test succeeded
Running transaction
  インストール中          : 1:mod_ssl-2.2.31-1.6.amzn1.x86_64                                                                   1/1
  検証中                  : 1:mod_ssl-2.2.31-1.6.amzn1.x86_64                                                                   1/1

インストール:
  mod_ssl.x86_64 1:2.2.31-1.6.amzn1

完了しました!
Creating virtual environment...
Updating letsencrypt and virtual environment dependencies......
Requesting root privileges to run with virtualenv: sudo /home/ec2-user/.local/share/letsencrypt/bin/letsencrypt --debug --help

  letsencrypt [SUBCOMMAND] [options] [-d domain] [-d domain] ...

The Let&#39;s Encrypt agent can obtain and install HTTPS/TLS/SSL certificates.  By
default, it will attempt to use a webserver both for obtaining and installing
the cert. Major SUBCOMMANDS are:

  (default) run        Obtain &amp; install a cert in your current webserver
  certonly             Obtain cert, but do not install it (aka &#34;auth&#34;)
  install              Install a previously obtained cert in a server
  revoke               Revoke a previously obtained certificate
  rollback             Rollback server configuration changes made during install
  config_changes       Show changes made to server config during installation
  plugins              Display information about installed plugins

Choice of server plugins for obtaining and installing cert:

  --apache          Use the Apache plugin for authentication &amp; installation
  --standalone      Run a standalone webserver for authentication
  (nginx support is experimental, buggy, and not installed by default)
  --webroot         Place files in a server&#39;s webroot folder for authentication

OR use different plugins to obtain (authenticate) the cert and then install it:

  --authenticator standalone --installer apache

More detailed help:

  -h, --help [topic]    print this message, or detailed help on a topic;
                        the available topics are:

   all, automation, paths, security, testing, or any of the subcommands or
   plugins (certonly, install, nginx, apache, standalone, webroot, etc)</pre>


<p>うお、いきなり <a class="keyword" href="http://d.hatena.ne.jp/keyword/yum">yum</a> のインストールが始まってびっくりした。
俺は help を表示したかっただけなのに、 sudo 権限の必要な動作までよろしく始めてくれて結構びっくりした。
ほんと実験用だな・・・。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> 用に実行する。
設定ファイルが既に存在しているから <a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>は正しく動作していないと言っている。</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-6-219 letsencrypt]$ ./letsencrypt-auto --debug --apache
Updating letsencrypt and virtual environment dependencies......
Requesting root privileges to run with virtualenv: sudo /home/ec2-user/.local/share/letsencrypt/bin/letsencrypt --debug --apache
Version: 1.1-20080819
Version: 1.1-20080819
The apache plugin is not working; there may be problems with your existing configuration.
The error was: NoInstallationError()</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> をアンインストール。</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-6-219 letsencrypt]$ sudo yum -y remove httpd</pre>


<p>まだエラーになる。そういう問題ではないらしい。</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-6-219 letsencrypt]$ rm -rf /home/ec2-user/.local/</pre>


<p>こういう問題でもないらしい。</p>

<p><a href="https://community.letsencrypt.org/t/apache-config-parsing-errors/2617">Apache Config Parsing Errors - Server - Let's Encrypt Community Support</a>
<a href="https://github.com/letsencrypt/letsencrypt/issues/1294#issuecomment-153581276">LetsEncrypt fails to parse an Apache config file · Issue #1294 · letsencrypt/letsencrypt · GitHub</a></p>

<h2>References</h2>

<ol>
<li><a href="https://letsencrypt.org/">Let's Encrypt - Free SSL/TLS Certificates</a></li>
<li><a href="https://letsencrypt.org/howitworks/">How It Works - Let's Encrypt - Free SSL/TLS Certificates</a></li>
<li><a href="http://dev.classmethod.jp/server-side/lets-encrypt-beta/">Let’s EncryptでValidなSSL/TLS証明書を取得する ｜ Developers.IO</a></li>
<li><a href="http://jxck.hatenablog.com/entry/web-over-https">HTTPS 化する Web をどう考えるか - Block Rockin’ Codes</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac の初期設定
BASENAME: 2015/12/28/155811
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/28/2015 15:58:11
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> El Capitan で Homebrew を入れるのはだるかったということを聞いていたがすでにもうやってしまったので覚えていない。<br/>
iTerm2 を入れたかったのでとりあえず Homberew Cask をインストール。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/brew">brew</a> install caskroom/cask/<a class="keyword" href="http://d.hatena.ne.jp/keyword/brew">brew</a>-cask</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: IT ENGINEER ZERO 文字起こし
BASENAME: 2015/12/21/063947
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/21/2015 06:39:47
-----
BODY:
<p><a href="http://www.nicovideo.jp/watch/sm4564428">【エースコンバット】 ITエンジニア・ゼロ ―THE FAILED PROJECT― - ニコニコ動画:GINZA</a></p>

<p>あいつのことか
あぁ 知っている
話せば長い
そう よくある話だ
知ってるか？</p>

<p>プロジェクトは3つに分けられる</p>

<p>納期が短い奴
予算が少ない奴
人が足りない奴</p>

<p>この3つだ</p>

<p>あいつは――</p>

<p>彼は『バイナリの妖精』と呼ばれた<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DE">プログラマ</a>
『彼』が参加していた仕事</p>

<p>よう同僚</p>

<p>いい眺めだ</p>

<p>バイナリで見ればどのコードも大して変わらん</p>

<p>私は『彼』を追っている</p>

<p>あれは本稼働を控えた夜だった</p>

<p>『<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%C3%A5%C1%BD%E8%CD%FD">バッチ処理</a>』で大規模なエラー！</p>

<p>バグか？どこの処理だ！</p>

<p>ガルム隊へ</p>

<p>帰宅は許可できない</p>

<p>だろうな</p>

<p>残業上乗せだ</p>

<p>こちら<a class="keyword" href="http://d.hatena.ne.jp/keyword/OJT">OJT</a>中の新人</p>

<p>可能な限り手伝います</p>

<p>手を入れるなら
俺の担当していないところで頼む</p>

<p>ラジャーバック</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%B3%AB%C8%AF">システム開発</a>には謎が多い</p>

<p>何もが要件となり</p>

<p>何もが機能となる</p>

<p>そして何が必要で</p>

<p>何が不要なのか</p>

<p>一体『仕様』とは何か</p>

<p>顧客側責任者接近</p>

<p>平謝りしつつ 責任は回避しろ</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/IDC">IDC</a>でお出迎えだ</p>

<p>人海戦術だ</p>

<p>『<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%E2%A5%EA%A5%EA%A1%BC%A5%AF">メモリリーク</a>』だ！油断すんな</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C7%D3%C2%BE%C0%A9%B8%E6">排他制御</a>がなんだ 俺がやってやる！</p>

<p>コーディングルールはない</p>

<p>ただキーを叩くだけ</p>

<p>このプロジェクトは安定稼働するまで終わらない</p>

<p>受け入れろ テスター</p>

<p>これが仕様だ</p>

<p>上長の犬が！</p>

<p>動けよ オンボロマシン！</p>

<p>COMEOOOOOOOOOOOOOOOOOOOOOOONNN!!!!!!!!!（動けええええええええええええええええええ！！！！！！！）</p>

<p>――職務規定はただ一つ――</p>

<p>”生き残れ”</p>

<p>生き残るぞ！ガルム1</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: /etc/sudoers.d に放り込むファイル名にドット &quot;.&quot; を含めてはならない 
BASENAME: 2015/11/14/170753
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 11/14/2015 17:07:53
CATEGORY: Linux
CATEGORY: sudo
CATEGORY: TIps
-----
BODY:
<p>パス無し sudo をできるように <code>/etc/sudoers.d</code> に記述したらドット入りのユーザ名でファイル <code>/etc/sudoers.d/w.noguchi</code> とか作るとうまく sudo が効かないようです。
なのでドット抜きで入れないといけないです。
ハマりどころなので注意です。ちなみにファイル名にハイフン "-" は使えます。</p>

<pre class="code" data-lang="" data-unlink>cat &lt;&lt;EOF &gt;/etc/sudoers.d/wnoguchi
w.noguchi ALL=(ALL) NOPASSWD: ALL
EOF</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: マイナンバーの通知が来たので個人番号カード通知申請をPCからしてみた
BASENAME: 2015/11/02/135230
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 11/02/2015 13:52:30
CATEGORY: マイナンバー
CATEGORY: IT
CATEGORY: セキュリティ
CATEGORY: やってみた
CATEGORY: 国税調査
CATEGORY: インターネット
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102125128.png
-----
BODY:
<p>本日<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B9%F1%CA%DD">国保</a>と<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B9%F1%CC%B1%C7%AF%B6%E2">国民年金</a>、住民税という年貢を納付してきました。<br/>
占めて1.5MBA。<br/>
お財布が・・・。</p>

<h2>ついに我が家（独身）にも<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%CA%A5%F3">マイナン</a>バーが</h2>

<p>そしてついに土曜日に郵便で来ました。<br/>
簡易書留で来ました。</p>

<p>とりあえず「通知カード」で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%A4%A5%CA%A5%F3">マイナン</a>バーが届いてこれで終わりかなって思っていたら「個人番号カード交付申請書」なるものが同封されていた。<br/>
なにこれ？って見てみると、個人を証明する個人番号カードと<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BE%DA%CC%C0%BD%F1">電子証明書</a>の交付を申請する書類を追加で書く必要があるらしい。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102125636.jpg" alt="f:id:wnoguchi0727:20151102125636j:plain" title="f:id:wnoguchi0727:20151102125636j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>私は車を持っていない地方の交通弱者なので、はがき一本出すのも結構大変。<br/>
とりあえず最近撮影した履歴書用の写真があったなと思ったらサイズが合っていない・・・。<br/>
写真撮影からかーと妙なだるさを覚えて案内書を繰っていくと「こんな申請方法も」という節が。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102125659.jpg" alt="f:id:wnoguchi0727:20151102125659j:plain" title="f:id:wnoguchi0727:20151102125659j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>なるほど、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB">スマホ</a>、PC、証明写真機から申請できるらしい。<br/>
証明写真データなら<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>に保存してある。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B9%F1%C0%C7">国税</a>調査のときのインターネットでの調査といい、便利な世の中になったなー。</p>

<h2>さっそく手続きしてしまう</h2>

<p>「<a href="https://www.google.co.jp/search?client=ubuntu&amp;channel=fs&amp;q=%E5%80%8B%E4%BA%BA%E7%95%AA%E5%8F%B7%E3%82%AB%E3%83%BC%E3%83%89+%E7%94%B3%E8%AB%8B&amp;ie=utf-8&amp;oe=utf-8&amp;hl=ja">個人番号カード 申請</a>」で検索して出てくる以下のページにアクセスする。</p>

<p>個人番号カード総合サイト <a href="https://www.kojinbango-card.go.jp/kojinbango/">https://www.kojinbango-card.go.jp/kojinbango/</a></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102125128.png" alt="f:id:wnoguchi0727:20151102125128p:plain" title="f:id:wnoguchi0727:20151102125128p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a></h3>

<p>さすがにかなり機密性の高い個人情報を扱うだけあって <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> 証明書はしっかりしているようだ。
サイト全体も <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> 化されている。</p>

<ol>
<li>どうやら最新の TLS1.2 を使っているらしい。</li>
<li>SHA-256 で発行されいるようなので <a class="keyword" href="http://d.hatena.ne.jp/keyword/Chrome">Chrome</a> で見ても問題ない。</li>
<li>「接続は古い暗号スイートにより暗号化されています」というのは微妙に気になった。</li>
</ol>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102131419.png" alt="f:id:wnoguchi0727:20151102131419p:plain" title="f:id:wnoguchi0727:20151102131419p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102131424.png" alt="f:id:wnoguchi0727:20151102131424p:plain" title="f:id:wnoguchi0727:20151102131424p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102132504.png" alt="f:id:wnoguchi0727:20151102132504p:plain" title="f:id:wnoguchi0727:20151102132504p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h3>中身解析</h3>

<p>ソースとレスポンスヘッダを見ると <a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a> を採用しているよう。
なんと <a class="keyword" href="http://d.hatena.ne.jp/keyword/Shift_JIS">Shift_JIS</a>(CP932) 。
かつ <a class="keyword" href="http://d.hatena.ne.jp/keyword/HTML5">HTML5</a> というアグレッシブなコーディング。</p>

<pre class="code" data-lang="" data-unlink>Content-Type:text/html;charset=windows-31j</pre>


<p>画面遷移のURLを見ると <code>*.do</code> になっていたので <a class="keyword" href="http://d.hatena.ne.jp/keyword/Struts">Struts</a> 臭がするが、 Struts1 は使っていないはずと信じてそこは気にしない。</p>

<h3>使い勝手</h3>

<p>僕の画像は横になっちゃってる。アップロードしたらうまいことやってくれないかなーと思っていたけど、
アップロードした画像を右回転できるところ。<br/>
便利だなーと思った。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102134207.png" alt="f:id:wnoguchi0727:20151102134207p:plain" title="f:id:wnoguchi0727:20151102134207p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h3>最後に</h3>

<p>もろもろの申請を終わらせてふぅと一息をつく。
最後に見ると交付通知書がきたら取りに行くステップがあるらしい。うーむ。まあしょうがないかな。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151102/20151102125547.jpg" alt="f:id:wnoguchi0727:20151102125547j:plain" title="f:id:wnoguchi0727:20151102125547j:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h2>参考リンク</h2>

<ol>
<li><a href="http://qiita.com/kuni-nakaji/items/5118b23bf2ea44fed96e">nginx - httpsだからというだけで安全？調べたら怖くなってきたSSLの話!？ - Qiita</a></li>
<li><a href="https://www.geotrust.co.jp/news/2014/20140918.html">Google ChromeにおけるSHA-1版SSLサーバ証明書に対する警告表示等について｜お知らせ｜SSLサーバ証明書 ジオトラスト</a></li>
<li><a href="https://ja.wikipedia.org/wiki/Extended_Validation_%E8%A8%BC%E6%98%8E%E6%9B%B8">Extended Validation 証明書 - Wikipedia</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Go 言語を使う
BASENAME: 2015/11/01/142439
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 11/01/2015 14:23:29
CATEGORY: プログラミング言語
CATEGORY: Go
-----
BODY:
<p><a href="http://golang-jp.org/doc/install">インストール - The Go Programming Language</a>
<a href="http://golang-jp.org/">The Go Programming Language</a>
<a href="https://ja.wikipedia.org/wiki/Go_(%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E8%A8%80%E8%AA%9E">Go (プログラミング言語) - Wikipedia</a>)</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: RedHat 系 Linux のホスト名を設定する
BASENAME: 2015/10/31/235730
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 23:57:30
CATEGORY: CentOS
CATEGORY: Linux
CATEGORY: シェルスクリプト
CATEGORY: コマンド
CATEGORY: RHEL
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> とかでたくさん <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a> 立ち上げるときホスト名設定しないと何が何だかわからなくなるのでシェルプロビジョニングには以下の様なコマンドセットを紛れ込ませています。</p>

<h2>7 系</h2>

<pre class="code" data-lang="" data-unlink>HOSTNAME=from
sudo hostname $HOSTNAME
echo $HOSTNAME | sudo tee /etc/hostname</pre>


<h2>6 系</h2>

<pre class="code" data-lang="" data-unlink>HOSTNAME=from
sudo hostname $HOSTNAME
sudo sed -i -e &#34;s/\\(HOSTNAME=\\).*$/\\1$HOSTNAME/g&#34; /etc/sysconfig/network</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: システムのリカバリイメージを作成する
BASENAME: 2015/10/31/234754
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 23:47:54
-----
BODY:
<p><a href="http://www.howtogeek.com/167984/how-to-create-and-restore-system-image-backups-on-windows-8.1/">How to Create and Restore System Image Backups on Windows 8.1</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: vagrant teraterm が便利すぎてしょうがない件
BASENAME: 2015/10/31/233246
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 23:32:46
CATEGORY: Vagrant
CATEGORY: Tera Term
CATEGORY: プラグイン
CATEGORY: RubyGems
CATEGORY: Gem
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> 使っていると <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> up したあとに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>にアクセスするのに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%D7%A5%ED%A5%F3%A5%D7%A5%C8">コマンドプロンプト</a>のログに流れた <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a> のフォワーディングポートを読んで、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> が自動生成した<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>を指定して Tera Term で接続して・・・っていう流れをやっていたんだけど、さすがに馬鹿らしくなってしまった。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> じゃないから<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%D7%A5%ED%A5%F3%A5%D7%A5%C8">コマンドプロンプト</a>で <code>vagrant ssh</code> するのも微妙だし・・・。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>に接続する <a class="keyword" href="http://d.hatena.ne.jp/keyword/TeraTerm">TeraTerm</a> マクロを吐き出す<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>(Gem) を書いたわけです。<br/>
<code>vagrant ssh-config</code> の <a class="keyword" href="http://d.hatena.ne.jp/keyword/TeraTerm">TeraTerm</a> 版 <code>vagrant-ssh-config-ttl</code> 初の Gem 製作。</p>

<ul>
<li><a href="https://github.com/wnoguchi/vagrant-ssh-config-ttl">wnoguchi/vagrant-ssh-config-ttl</a></li>
</ul>


<p>しかしながらそれでも<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>取り扱ったりするとやっぱり大変。<br/>
と思っていたら <code>vagrant-teraterm</code> という素晴らしい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>が開発されていました。</p>

<ol>
<li><a href="https://github.com/tiibun/vagrant-teraterm">tiibun/vagrant-teraterm</a></li>
<li> <a href="http://qiita.com/tiibun/items/61c64c6b261887d455ee">Windows - VagrantにTeratermマクロで接続する - Qiita</a></li>
<li> <a href="http://qiita.com/tiibun/items/b1f1d47040660892067d">Vagrant Teraterm pluginを作ってみた - Qiita</a></li>
</ol>


<h2>インストール</h2>

<p>いたって簡単、</p>

<pre class="code" data-lang="" data-unlink>vagrant plugin install vagrant-teraterm</pre>


<h2>設定</h2>

<p>デフォルトのインストールパスに Tera Term がインストールされていればとくに設定はいりません。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/teraterm">teraterm</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>がよしなにやってくれます。</p>

<h2>使い方</h2>

<p><code>vagrant up</code> したら以下のようにすると自動的に <a class="keyword" href="http://d.hatena.ne.jp/keyword/TeraTerm">TeraTerm</a> が対象の <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a> に繋いでくれます。</p>

<pre class="code" data-lang="" data-unlink>vagrant teraterm</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>の <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a> を立ち上げている場合</h3>

<p>以下のように <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a> 名を指定してあげればいいです。</p>

<pre class="code" data-lang="" data-unlink>vagrant teraterm vm1</pre>


<p>ちなみに、最初は <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/teraterm">teraterm</a> する際にフィンガープリントの検証で引っかかっていたので、 <code>StrictHostKeyChecking no</code> に相当する <code>/nosecuritywarning</code> を孵化するPR 投げて取り込んでもらいました。嬉しい。</p>

<ul>
<li><a href="https://github.com/tiibun/vagrant-teraterm/pull/3">Skip host key verification. by wnoguchi · Pull Request #3 · tiibun/vagrant-teraterm</a></li>
</ul>


<h2>蛇足</h2>

<p>最近 HashiCorp から Otto という <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> の後継となるソフトウェアがリリースされました。<br/>
以前は Chef をよく使っていたのですが、 Vagrantfile のシェルプロビジョニングがお手軽すぎてダメ人間になってしまっています。<br/>
そしてこれも秘伝のタレ化すると。<br/>
その秘伝のタレ化する Vagrantfile をなんとかしてくれるのが Otto らしいです。<br/>
これも早めにいじってみたいなあ。</p>

<ol>
<li><a href="https://ottoproject.io/">Otto by HashiCorp</a></li>
<li><a href="https://hashicorp.com/blog/otto.html">Otto - HashiCorp</a></li>
<li><a href="http://deeeet.com/writing/2015/10/04/otto/">Hashicorp Ottoを読む | SOTA</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Linux カーネルを読もうとするこれからの自分へのまとめ
BASENAME: 2015/10/31/230701
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 23:07:01
CATEGORY: WIP
CATEGORY: Linux
CATEGORY: カーネル
CATEGORY: まとめ
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151031/20151031214758.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>読むぞーって思ってたけどとりあえずクローンしたはいいけどこれどうしたらええんやろって思って 3 日坊主になってしまっていたので、最近<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の話をよく聞くようになったからまた性懲りもなく <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>をクローンしました。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の入手方法</h2>

<p>まず Git 入れてます。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install git
sudo yum -y install git</pre>


<p>おもむろに <a href="https://www.kernel.org/">The Linux Kernel Archives</a> を訪れます。
おぉ、サイト全体 <a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a> 化されてるんだな。
こういうサイト最近増えたよね。
PROTOCOL のリンクを踏むと HTTP だったら <a class="keyword" href="http://d.hatena.ne.jp/keyword/RFC">RFC</a> に飛ばされたりします。うーん感慨深い。</p>

<ol>
<li><a href="http://www.ietf.org/rfc/rfc2616.txt">www.ietf.org/rfc/rfc2616.txt</a></li>
</ol>


<p>なんか前はトップにある Git の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>の URL を指定してクローンすればよかったんだけど、</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151031/20151031214758.png" alt="f:id:wnoguchi0727:20151031214758p:plain" title="f:id:wnoguchi0727:20151031214758p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>なんにも考えずに</p>

<pre class="code" data-lang="" data-unlink>git clone https://git.kernel.org/</pre>


<p>ってやったらそんなもんねーよ！って言われてしまった。</p>

<pre class="code" data-lang="" data-unlink>Cloning into &#39;git.kernel.org&#39;...
fatal: repository &#39;https://git.kernel.org/&#39; not found</pre>


<p>このリンク <a href="https://git.kernel.org/">https://git.kernel.org/</a> を素直に踏んでみると <a href="https://git.kernel.org/cgit/">https://git.kernel.org/cgit/</a> に飛ばされました。
うお、めっちゃ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>たくさんある・・・。
いつの間にこんなに分裂したんだ・・・。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151031/20151031222610.png" alt="f:id:wnoguchi0727:20151031222610p:plain" title="f:id:wnoguchi0727:20151031222610p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>分裂したわけではないのか、 以前は <a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a> にミラーされてる<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>をクローンしたのかな。</p>

<ul>
<li><a href="https://github.com/torvalds/linux">torvalds/linux</a></li>
</ul>


<p>ちなみにここに PR 送ると怒られます。
Git 開発自体の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>も PR 送るとパッチの送り方読めって怒られて速攻クローズされます。</p>

<ul>
<li><a href="https://github.com/git/git">git/git</a></li>
</ul>


<p>何はともあれ stable 版の <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>をクローンするには以下のようにします。</p>

<pre class="code" data-lang="" data-unlink>git clone git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git</pre>


<h2>ビルド環境の整備</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Debian">Debian</a> 系</h3>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install libncurses5-dev gcc make git exuberant-ctags bc</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/RedHat">RedHat</a> 系</h3>

<pre class="code" data-lang="" data-unlink>sudo yum -y install gcc make git ctags ncurses-devel</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のビルドは以下が詳しい。</p>

<ul>
<li><a href="http://kernelnewbies.org/KernelBuild">KernelBuild - Linux Kernel Newbies</a></li>
</ul>


<h2>その他</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A1%BC%A5%EA%A5%F3%A5%B0%A5%EA%A5%B9%A5%C8">メーリングリスト</a></h3>

<ol>
<li><a href="http://vger.kernel.org/">VGER.KERNEL.ORG</a></li>
<li><a href="http://vger.kernel.org/majordomo-info.html">VGER.KERNEL.ORG - Majordomo info</a></li>
</ol>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A1%BC%A5%EA%A5%F3%A5%B0%A5%EA%A5%B9%A5%C8">メーリングリスト</a>はいっぱいあるが、ここでは <code>linux-kernel</code> に登録するようにしてみよう。<br/>
ちなみに登録するとめっちゃメールが届くので注意。</p>

<h4>登録</h4>

<p><code>majordomo@vger.kernel.org</code> 宛に件名を空で以下のプレーンテキスト本文でメールを送信する。
配送遅延があることがあるので返事を気長に待とう。</p>

<pre class="code" data-lang="" data-unlink>subscribe linux-kernel</pre>


<p>"Confirmation for subscribe <a class="keyword" href="http://d.hatena.ne.jp/keyword/linux">linux</a>-kernel" というタイトルの確認メールが来るので、
同様の宛先で、件名空の以下の様な本文の認証メールを送ればよい。</p>

<pre class="code" data-lang="" data-unlink>auth ******** subscribe linux-kernel あなたのメールアドレス@example.com</pre>


<p>ちょっとして <code>Welcome to linux-kernel</code> という件名のメールが来れば晴れて登録完了である。
おめでとう。</p>

<h4>解除</h4>

<p><code>majordomo@vger.kernel.org</code> 宛に件名を空で以下のプレーンテキスト本文でメールを送信する。<br/>
こっちに認証コードはない。 <code>Suceeded.</code> のメールが来ればこれで完了となる。</p>

<pre class="code" data-lang="" data-unlink>unsubscribe linux-kernel</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/RSS">RSS</a></h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Feedly">Feedly</a> あたりに以下を登録しておきましょう。</p>

<ol>
<li><a href="https://www.kernel.org/feeds/all.atom.xml">https://www.kernel.org/feeds/all.atom.xml</a></li>
<li><a href="https://www.kernel.org/feeds/kdist.xml">https://www.kernel.org/feeds/kdist.xml</a></li>
</ol>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のトレーニングプログラム</h3>

<ol>
<li><a href="https://training.linuxfoundation.org/">Linux Foundation Training - Home</a></li>
</ol>


<h2>蛇足</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a> V6 の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のコードリーディングの勉強会に参加してたんだけど、これも中途半端になってしまっていたので、プロフェッショナルといえるような <a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a> 系<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の理解は深めておきたいな・・・。</p>

<h2>参考リンク集</h2>

<ol>
<li><a href="https://www.kernel.org/">The Linux Kernel Archives</a></li>
<li><a href="http://kernelnewbies.org/KernelBuild">KernelBuild - Linux Kernel Newbies</a></li>
<li><a href="http://d.hatena.ne.jp/oraccha/20141111/1415719606">gitから任意のバージョンのLinuxカーネルのソースコードをチェックアウトするメモ - Plan9日記</a></li>
</ol>


<h3>書籍</h3>

<ul>
<li>今読んでいる <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>コードリーディングの本です。</li>
</ul>


<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/487311313X/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/418I6s7Eq-L._SL160_.jpg" class="hatena-asin-detail-image" alt="詳解 Linuxカーネル 第3版" title="詳解 Linuxカーネル 第3版"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/487311313X/blogpg1xcom01-22/">詳解 Linuxカーネル 第3版</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> Daniel P. Bovet,Marco Cesati,高橋浩和,杉田由美子,<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%B6%BF%E5%C0%B5">清水正</a>明,高杉昌督,平松雅巳,安井隆宏</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A5%E9%A5%A4%A5%EA%A1%BC%A1%A6%A5%B8%A5%E3%A5%D1%A5%F3">オライリー・ジャパン</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2007/02/26</li><li><span class="hatena-asin-detail-label">メディア:</span> 大型本</li><li><span class="hatena-asin-detail-label">購入</span>: 9人 <span class="hatena-asin-detail-label">クリック</span>: 269回</li><li><a href="http://d.hatena.ne.jp/asin/487311313X/blogpg1xcom01-22" target="_blank">この商品を含むブログ (70件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a> V6 <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のコードリーディング本です。</li>
</ul>


<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774154644/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/519D-9b0bfL._SL160_.jpg" class="hatena-asin-detail-image" alt="はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)" title="はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774154644/blogpg1xcom01-22/">はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 青柳隆宏</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%BB%BD%D1%C9%BE%CF%C0%BC%D2">技術評論社</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/01/09</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><span class="hatena-asin-detail-label">購入</span>: 56人 <span class="hatena-asin-detail-label">クリック</span>: 1,959回</li><li><a href="http://d.hatena.ne.jp/asin/4774154644/blogpg1xcom01-22" target="_blank">この商品を含むブログ (29件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 目標体重 50 kg 台
BASENAME: 2015/10/31/212900
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 21:29:00
-----
BODY:
<p>最近太った？って多くの人から聞かれることが多くなった。
やはりわかってしまうらしい。
70 kg の大台を記録してしまったので、ダイエットせねば。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: xz 形式で圧縮展開する（tar 使う版）
BASENAME: 2015/10/31/212643
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 21:26:43
CATEGORY: Linux
CATEGORY: GNU tar
CATEGORY: tar
CATEGORY: xz
CATEGORY: 7z
CATEGORY: コマンド
CATEGORY: 圧縮方式
-----
BODY:
<p>最近この<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%C8%C4%A5%BB%D2">拡張子</a>なんだこれと思ってたんだけど 7z で使われている <a class="keyword" href="http://d.hatena.ne.jp/keyword/LZMA">LZMA</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>が <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> に採用されたものが xz 形式らしい。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/GNU">GNU</a> tar を使う場合 1.22 以降で使うことができる。
圧縮率も優秀で、展開もそれなりに高速らしい。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/gzip">gzip</a> と bzip2 のいいとこどりした感じっぽい。</p>

<h2>圧縮</h2>

<pre class="code" data-lang="" data-unlink>tar cvJf linux-stable.tar.xz linux-stable/</pre>


<h2>展開</h2>

<pre class="code" data-lang="" data-unlink>tar xvJf linux-stable.tar.xz</pre>


<h2>参考リンク</h2>

<ol>
<li><a href="http://linux.just4fun.biz/%E9%80%86%E5%BC%95%E3%81%8DUNIX%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/tar.xz%E5%BD%A2%E5%BC%8F%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E5%B1%95%E9%96%8B%E3%81%99%E3%82%8B.html">逆引きUNIXコマンド/tar.xz形式ファイルを展開する - Linuxと過ごす</a></li>
<li><a href="https://ja.wikipedia.org/wiki/Xz_(%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88">xz (ファイルフォーマット) - Wikipedia</a>)</li>
<li><a href="https://oku.edu.mie-u.ac.jp/~okumura/blog/node/2409">gzipの代わりにxzを使おう | Okumura's Blog</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ConoHa からクーポンが届いてうれしい
BASENAME: 2015/10/31/195339
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/31/2015 19:53:39
-----
BODY:
<p>わーい。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20151031/20151031195331.png" alt="f:id:wnoguchi0727:20151031195331p:plain" title="f:id:wnoguchi0727:20151031195331p:plain" class="hatena-fotolife" itemprop="image"></span></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: のどかな日
BASENAME: 2015/10/18/125530
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/18/2015 12:55:30
-----
BODY:
<p>今日はのどかな一日だなあ。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: SSH公開鍵配置ディレクトリ作成ワンライナー
BASENAME: 2015/09/22/100848
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 09/22/2015 10:08:48
-----
BODY:
<h2>公開鍵を置く</h2>

<p>公開鍵置くとき毎度めんどくさいのでメモ。</p>

<pre class="code" data-lang="" data-unlink>([ ! -e ~/.ssh ] &amp;&amp; mkdir ~/.ssh &amp;&amp; chmod 700 ~/.ssh ) ; cat &lt;&lt;EOF &gt;~/.ssh/authorized_keys &amp;&amp; chmod 600 ~/.ssh/authorized_keys
ssh-rsa blahblahblah rsa-key-20150608-comment
EOF</pre>


<h2>.<a class="keyword" href="http://d.hatena.ne.jp/keyword/ssh">ssh</a> ディレクトリだけできてりゃいい</h2>

<pre class="code" data-lang="" data-unlink>[ ! -e ~/.ssh ] &amp;&amp; mkdir ~/.ssh &amp;&amp; chmod 700 ~/.ssh</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ソフマップのスマホ買取時の SIM ロック解除は不要
BASENAME: 2015/08/23/122452
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/23/2015 12:24:52
CATEGORY: 買取
CATEGORY: ソフマップ
CATEGORY: スマホ
CATEGORY: docomo
CATEGORY: SIMロック
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/docomo">docomo</a> の <a class="keyword" href="http://d.hatena.ne.jp/keyword/Xperia">Xperia</a> Z SO-02E (K) Black 買い取ってもらおうと思ったんだけど、 SIM ロックって解除しなきゃダメなんかなって思って問合せたら、 SIM ロック解除不要だって。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/docomo">docomo</a> の端末契約解除したら 3 ヶ月経つと SIM ロック永久に解除できなくなるらしいので焦った。
しかも SIM ロック解除に手数料 3000 円取られるらしいので、結構つらみ。</p>

<ol>
<li><a href="http://smhn.info/201504-docomo-sim-unlock-deteriorate">悲報…ドコモの新しいSIMロック解除は購入した本人のみ利用可、中古などは不可に – すまほん!!</a></li>
<li><a href="http://www.appps.jp/176268/">ドコモ「SIMロック解除」が購入日から可能に！現iPhoneユーザーはどうなるのか問合せた結果… | iPhoneひとすじ！ かみあぷ速報</a></li>
<li><a href="http://smhn.info/201504-unlock-docomo-android-smartphone">ドコモ、本人購入端末でも解約3ヶ月経過後はSIMロック解除を拒否することが明らかに。 – すまほん!!</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: iTunes のアフィリエイトに登録してからスパムが増えた気がする
BASENAME: 2015/08/22/092754
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/22/2015 09:27:54
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150822/20150822090915.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/iTunes">iTunes</a> の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%D5%A5%A3%A5%EA%A5%A8%A5%A4%A5%C8">アフィリエイト</a>に登録してからというもの、 Gamil の迷惑メールフォルダに飛躍的に迷惑メールが届くようになった気がする。<br/>
もしかしたらいろんなところに私のメールアドレスを公開しているからそこから拾われたのかもしれないけど。  <br/>
たまに迷惑メールを見るのも退屈しなくていいね。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150822/20150822090915.png" alt="f:id:wnoguchi0727:20150822090915p:plain" title="f:id:wnoguchi0727:20150822090915p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<blockquote><p>このメッセージにはご注意ください。多数のユーザーが同様のメッセージを<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A3%A5%C3%A5%B7%A5%F3%A5%B0%BA%BE%B5%BD">フィッシング詐欺</a>として報告しているため、このメッセージには危険なコンテンツが含まれている可能性があります。</p></blockquote>

<p>という具合だ。真っ赤だ。ここまで赤いと不安になる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150822/20150822090713.png" alt="f:id:wnoguchi0727:20150822090713p:plain" title="f:id:wnoguchi0727:20150822090713p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><a href="http://affiliate.itunes.apple.com/jp/signin">http://affiliate.itunes.apple.com/jp/signin</a></p>

<p>をブラウザのアドレスバーに入力すると以下のページにリダイレクトされる。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/apple">apple</a>.com の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>名は跡形も無い。</p>

<p><a href="https://itunes.phgconsole.performancehorizon.com/login/itunes/jp">https://itunes.phgconsole.performancehorizon.com/login/itunes/jp</a></p>

<p>画面のスクリーンキャプチャを見ると以下の様な感じ。こりゃフィッシングサイトと言われてもしょうがないわ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150822/20150822091532.png" alt="f:id:wnoguchi0727:20150822091532p:plain" title="f:id:wnoguchi0727:20150822091532p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>まあ、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/Apple">Apple</a> が第三者機関に丸投げしてるからこういう形になって問題はないのかもしれないが、あまり気持ちのよいものではない。
実際 <a class="keyword" href="http://d.hatena.ne.jp/keyword/Apple">Apple</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%D5%A5%A3%A5%EA%A5%A8%A5%A4%A5%C8">アフィリエイト</a>プログラムを装った<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A3%A5%C3%A5%B7%A5%F3%A5%B0%BA%BE%B5%BD">フィッシング詐欺</a>も観測されているようだ。</p>

<p><a href="http://www.amamoba.com/pc/itunes-fishingmail.html">やられた！iTunesアフィリエイト（PHG）を装ったフィッシング詐欺メール | Webと人のアマモ場</a></p>

<h2>References</h2>

<ol>
<li><a href="http://shirose.jp/2013/08/itunes-affiliate-phg/">iTunes アフィリエイトの提携先が PHG へ変更、登録と設定、リンク生成の流れ | Simple Living</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Lenovo のファームウェアがWindowsのシステムファイルを改ざんしていた件について
BASENAME: 2015/08/16/204428
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/16/2015 20:44:28
-----
BODY:
<p>私も好きで <a class="keyword" href="http://d.hatena.ne.jp/keyword/Lenovo">Lenovo</a> を使っているわけではないが、ここまで手癖が悪いと思わなかった。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Lenovo">Lenovo</a> のPCが暴走して社内ネットワーク麻痺させたことがあったというような話も・・・。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A1%A1%BC%A5%E0%A5%A6%A5%A7%A5%A2">ファームウェア</a>レベルで細工するとはさすがだね。</p>

<p>先日、ファンクションキーのホットキー入れ替えたくて G500 の <a class="keyword" href="http://d.hatena.ne.jp/keyword/BIOS">BIOS</a> 更新したばっかなんだけど・・・。<br/>
念のため調べてみたけど該当のファイルは幸い存在してなかった。</p>

<p>別件では変な顔文字が入力できる <a class="keyword" href="http://d.hatena.ne.jp/keyword/Baidu%20IME">Baidu IME</a> が無断で送信してた件もそうだけど、こういう現場を見ると<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%C6%A5%E9%A5%B7%A1%BC">リテラシー</a>の低さが拭い切れない。</p>

<p>これからは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Lenovo">Lenovo</a> 使っているなんてお天道様に顔向けできない。</p>

<p><a href="http://cpplover.blogspot.jp/2015/08/lenovo.html">本の虫: Lenovoのファームウェアがファイルシステムを改ざんするクソ仕様なので絶対に使ってはいけない</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Locate32 の初期設定
BASENAME: 2015/08/16/132325
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/16/2015 13:23:25
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150816/20150816132115.png
-----
BODY:
<p>ファイル名を高速に検索してくれる定番のソフトウェア。</p>

<p>Locate32 は独自のデータベースを持っており、ドライブ全体をスキャンしてデータベース化したものを検索します。<br/>
インストールした初回は必ずデータベースをアップデート（新規作成）しなければなりません。<br/>
このデータベース作成作業も数分かからずに終わるのでとても高速です。</p>

<p>その初期設定のメモです。</p>

<h2>ログイン時に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%AB%C6%B0%B5%AF%C6%B0">自動起動</a>するように設定</h2>

<p>Locate32 は使いたいときにすぐに開いて検索できないと意味が無いので、ログインした時に自動で起動するようにします。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150816/20150816132115.png" alt="f:id:wnoguchi0727:20150816132115p:plain" title="f:id:wnoguchi0727:20150816132115p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>以下のように、スタートアップフォルダに起動用のショートカットが作成されていることが確認できました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150816/20150816132144.png" alt="f:id:wnoguchi0727:20150816132144p:plain" title="f:id:wnoguchi0727:20150816132144p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h2>定期的にデータベースを更新する設定をする</h2>

<p>このデータベースの更新処理自体は初期設定では定期的に実行されるわけではないので、<br/>
そのままだと古いデータベースのまま検索するので、ファイルが増えたり減ったりしたときにそれが検索対象とならず、あまり意味がありません。</p>

<p>ここでは 30 分ごとにファイル一覧データベースの更新処理が行われるように設定しました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150816/20150816132315.png" alt="f:id:wnoguchi0727:20150816132315p:plain" title="f:id:wnoguchi0727:20150816132315p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<h2>余談</h2>

<p>ちなみにこの Locate32 、 32 と言っておきながら 64 ビットバージョンのバイナリも配布されています。</p>

<h2>References</h2>

<ol>
<li><a href="http://locate32.cogit.net/">Locate32</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: スタートアップフォルダーの場所（Windows Vista以降）
BASENAME: 2015/08/16/130106
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/16/2015 13:01:06
-----
BODY:
<p>よく忘れるのでメモ。</p>

<pre class="code" data-lang="" data-unlink>C:\Users\wnoguchi\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</pre>


<h2>References</h2>

<ol>
<li><a href="http://tooljp.com/windows/doc/Windows7/startup/startup.html">スタートアップの設定方法/フォルダ (Windows 7)</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ねむい
BASENAME: 2015/08/16/083500
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/16/2015 08:35:00
-----
BODY:
<p>ねむい</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 氷菓: 「古典部」シリーズ 原作のありかと、まとめ
BASENAME: 2015/08/22/114116
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/01/2015 00:27:32
CATEGORY: 氷菓
CATEGORY: 古典部シリーズ
CATEGORY: 原作
CATEGORY: アニメ
CATEGORY: まとめ
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> 版</p>

<ol>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0D0/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51%2Bhk62YF2L._SL160_.jpg" class="hatena-asin-detail-image" alt="氷菓<「古典部」シリーズ> (角川文庫)" title="氷菓<「古典部」シリーズ> (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0D0/blogpg1xcom01-22/">氷菓<「古典部」シリーズ> (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/KADOKAWA">KADOKAWA</a> / <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9">角川書店</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/10/01</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><span class="hatena-asin-detail-label">購入</span>: 2人 <span class="hatena-asin-detail-label">クリック</span>: 7回</li><li><a href="http://d.hatena.ne.jp/asin/B009PKN0D0/blogpg1xcom01-22" target="_blank">この商品を含むブログ (10件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0EE/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51jz7Gjmp3L._SL160_.jpg" class="hatena-asin-detail-image" alt="愚者のエンドロール<「古典部」シリーズ> (角川文庫)" title="愚者のエンドロール<「古典部」シリーズ> (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0EE/blogpg1xcom01-22/">愚者のエンドロール<「古典部」シリーズ> (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/KADOKAWA">KADOKAWA</a> / <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9">角川書店</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/10/01</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><span class="hatena-asin-detail-label">購入</span>: 1人 <span class="hatena-asin-detail-label">クリック</span>: 1回</li><li><a href="http://d.hatena.ne.jp/asin/B009PKN0EE/blogpg1xcom01-22" target="_blank">この商品を含むブログ (4件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0DA/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/5138-ObSliL._SL160_.jpg" class="hatena-asin-detail-image" alt="クドリャフカの順番<「古典部」シリーズ> (角川文庫)" title="クドリャフカの順番<「古典部」シリーズ> (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0DA/blogpg1xcom01-22/">クドリャフカの順番<「古典部」シリーズ> (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/KADOKAWA">KADOKAWA</a> / <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9">角川書店</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/10/01</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><a href="http://d.hatena.ne.jp/asin/B009PKN0DA/blogpg1xcom01-22" target="_blank">この商品を含むブログ (4件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0DK/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51ehYsEmoAL._SL160_.jpg" class="hatena-asin-detail-image" alt="遠まわりする雛<「古典部」シリーズ> (角川文庫)" title="遠まわりする雛<「古典部」シリーズ> (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009PKN0DK/blogpg1xcom01-22/">遠まわりする雛<「古典部」シリーズ> (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/KADOKAWA">KADOKAWA</a> / <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9">角川書店</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/10/01</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><a href="http://d.hatena.ne.jp/asin/B009PKN0DK/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009TNT02I/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51wBBRIfPLL._SL160_.jpg" class="hatena-asin-detail-image" alt="ふたりの距離の概算<「古典部」シリーズ> (角川文庫)" title="ふたりの距離の概算<「古典部」シリーズ> (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B009TNT02I/blogpg1xcom01-22/">ふたりの距離の概算<「古典部」シリーズ> (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/KADOKAWA">KADOKAWA</a> / <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9">角川書店</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/10/17</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><a href="http://d.hatena.ne.jp/asin/B009TNT02I/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
</ol>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C9%B9%B2%DB">氷菓</a>&lt;「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>」シリーズ> (角川文庫) <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>: 米澤 穂信, 上杉 久代, 清水 厚: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>ストア
<a href="http://www.amazon.co.jp/ebook/dp/B009PKN0D0/ref=tmm_kin_swatch_0?_encoding=UTF8&qid=&sr=">http://www.amazon.co.jp/ebook/dp/B009PKN0D0/ref=tmm_kin_swatch_0?_encoding=UTF8&qid=&sr=</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%F2%BC%D4%A4%CE%A5%A8%A5%F3%A5%C9%A5%ED%A1%BC%A5%EB">愚者のエンドロール</a>&lt;「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>」シリーズ> (角川文庫) <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>: 米澤 穂信, 高野 音彦, 清水 厚: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>ストア
<a href="http://www.amazon.co.jp/ebook/dp/B009PKN0EE">http://www.amazon.co.jp/ebook/dp/B009PKN0EE</a></p>

<p>/ref=tmm_kin_<a class="keyword" href="http://d.hatena.ne.jp/keyword/swatch">swatch</a>_0?<em>encoding=UTF8&amp;qid=&amp;sr=
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%C9%A5%EA%A5%E3%A5%D5%A5%AB%A4%CE%BD%E7%C8%D6">クドリャフカの順番</a>&lt;「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>」シリーズ> (角川文庫) <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>: 米澤 穂信: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>ストア
<a href="http://www.amazon.co.jp/ebook/dp/B009PKN0DA/ref=tmm_kin_swatch_0?">http://www.amazon.co.jp/ebook/dp/B009PKN0DA/ref=tmm_kin_swatch_0?</a></em>encoding=UTF8&amp;qid=&amp;sr=
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B1%F3%A4%DE%A4%EF%A4%EA%A4%B9%A4%EB%BF%F7">遠まわりする雛</a>&lt;「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>」シリーズ> (角川文庫) <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>: 米澤 穂信: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>ストア
<a href="http://www.amazon.co.jp/ebook/dp/B009PKN0DK/ref=tmm_kin_swatch_0?">http://www.amazon.co.jp/ebook/dp/B009PKN0DK/ref=tmm_kin_swatch_0?</a><em>encoding=UTF8&amp;qid=&amp;sr=
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%D5%A4%BF%A4%EA%A4%CE%B5%F7%CE%A5%A4%CE%B3%B5%BB%BB">ふたりの距離の概算</a>&lt;「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>」シリーズ> (角川文庫) <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>: 米澤 穂信: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>ストア
<a href="http://www.amazon.co.jp/ebook/dp/B009TNT02I/ref=tmm_kin_swatch_0?">http://www.amazon.co.jp/ebook/dp/B009TNT02I/ref=tmm_kin_swatch_0?</a></em>encoding=UTF8&amp;qid=&amp;sr=</p>

<p>文庫版</p>

<ol>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271011/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51NIr%2BwaJzL._SL160_.jpg" class="hatena-asin-detail-image" alt="氷菓 (角川文庫)" title="氷菓 (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271011/blogpg1xcom01-22/">氷菓 (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a>,上杉久代,清水厚</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2001/10/31</li><li><span class="hatena-asin-detail-label">メディア:</span> 文庫</li><li><span class="hatena-asin-detail-label">購入</span>: 17人 <span class="hatena-asin-detail-label">クリック</span>: 956回</li><li><a href="http://d.hatena.ne.jp/asin/4044271011/blogpg1xcom01-22" target="_blank">この商品を含むブログ (576件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/404427102X/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/513sIHDk0BL._SL160_.jpg" class="hatena-asin-detail-image" alt="愚者のエンドロール (角川文庫)" title="愚者のエンドロール (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/404427102X/blogpg1xcom01-22/">愚者のエンドロール (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a>,<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B9%E2%CC%EE%B2%BB%C9%A7">高野音彦</a>,清水厚</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2002/07/31</li><li><span class="hatena-asin-detail-label">メディア:</span> 文庫</li><li><span class="hatena-asin-detail-label">購入</span>: 17人 <span class="hatena-asin-detail-label">クリック</span>: 228回</li><li><a href="http://d.hatena.ne.jp/asin/404427102X/blogpg1xcom01-22" target="_blank">この商品を含むブログ (444件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271038/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51-lKAtTvqL._SL160_.jpg" class="hatena-asin-detail-image" alt="クドリャフカの順番 (角川文庫)" title="クドリャフカの順番 (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271038/blogpg1xcom01-22/">クドリャフカの順番 (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2008/05/24</li><li><span class="hatena-asin-detail-label">メディア:</span> 文庫</li><li><span class="hatena-asin-detail-label">購入</span>: 12人 <span class="hatena-asin-detail-label">クリック</span>: 184回</li><li><a href="http://d.hatena.ne.jp/asin/4044271038/blogpg1xcom01-22" target="_blank">この商品を含むブログ (212件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271046/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51Qxx1gXbGL._SL160_.jpg" class="hatena-asin-detail-image" alt="遠まわりする雛 (角川文庫)" title="遠まわりする雛 (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4044271046/blogpg1xcom01-22/">遠まわりする雛 (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2010/07/24</li><li><span class="hatena-asin-detail-label">メディア:</span> 文庫</li><li><span class="hatena-asin-detail-label">購入</span>: 11人 <span class="hatena-asin-detail-label">クリック</span>: 146回</li><li><a href="http://d.hatena.ne.jp/asin/4044271046/blogpg1xcom01-22" target="_blank">この商品を含むブログ (148件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
<li><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4041003253/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51q3sZqcpLL._SL160_.jpg" class="hatena-asin-detail-image" alt="ふたりの距離の概算 (角川文庫)" title="ふたりの距離の概算 (角川文庫)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4041003253/blogpg1xcom01-22/">ふたりの距離の概算 (角川文庫)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%C6%DF%B7%CA%E6%BF%AE">米澤穂信</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2012/06/22</li><li><span class="hatena-asin-detail-label">メディア:</span> 文庫</li><li><span class="hatena-asin-detail-label">購入</span>: 7人 <span class="hatena-asin-detail-label">クリック</span>: 203回</li><li><a href="http://d.hatena.ne.jp/asin/4041003253/blogpg1xcom01-22" target="_blank">この商品を含むブログ (88件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></li>
</ol>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>： <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C9%B9%B2%DB">氷菓</a> (角川文庫): 米澤 穂信, 上杉 久代, 清水 厚: 本
<a href="http://www.amazon.co.jp/%E6%B0%B7%E8%8F%93-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4044271011/ref=tmm_pap_title_0">http://www.amazon.co.jp/%E6%B0%B7%E8%8F%93-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4044271011/ref=tmm_pap_title_0</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>： <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%F2%BC%D4%A4%CE%A5%A8%A5%F3%A5%C9%A5%ED%A1%BC%A5%EB">愚者のエンドロール</a> (角川文庫): 米澤 穂信, 高野 音彦, 清水 厚: 本
<a href="http://www.amazon.co.jp/%E6%84%9A%E8%80%85%E3%81%AE%E3%82%A8%E3%83%B3%E3%83%89%E3%83%AD%E3%83%BC%E3%83%AB-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/404427102X/ref=tmm_pap_title_0">http://www.amazon.co.jp/%E6%84%9A%E8%80%85%E3%81%AE%E3%82%A8%E3%83%B3%E3%83%89%E3%83%AD%E3%83%BC%E3%83%AB-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/404427102X/ref=tmm_pap_title_0</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>： <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%C9%A5%EA%A5%E3%A5%D5%A5%AB%A4%CE%BD%E7%C8%D6">クドリャフカの順番</a> (角川文庫): 米澤 穂信: 本
<a href="http://www.amazon.co.jp/%E6%9C%AC/dp/4044271038/ref=tmm_pap_title_0">http://www.amazon.co.jp/%E6%9C%AC/dp/4044271038/ref=tmm_pap_title_0</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>： <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B1%F3%A4%DE%A4%EF%A4%EA%A4%B9%A4%EB%BF%F7">遠まわりする雛</a> (角川文庫): 米澤 穂信: 本
<a href="http://www.amazon.co.jp/%E9%81%A0%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%99%E3%82%8B%E9%9B%9B-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4044271046/ref=tmm_pap_title_0">http://www.amazon.co.jp/%E9%81%A0%E3%81%BE%E3%82%8F%E3%82%8A%E3%81%99%E3%82%8B%E9%9B%9B-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4044271046/ref=tmm_pap_title_0</a>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon.co.jp">Amazon.co.jp</a>： <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%D5%A4%BF%A4%EA%A4%CE%B5%F7%CE%A5%A4%CE%B3%B5%BB%BB">ふたりの距離の概算</a> (角川文庫): 米澤 穂信: 本
<a href="http://www.amazon.co.jp/%E3%81%B5%E3%81%9F%E3%82%8A%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%81%AE%E6%A6%82%E7%AE%97-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4041003253/ref=tmm_pap_title_0">http://www.amazon.co.jp/%E3%81%B5%E3%81%9F%E3%82%8A%E3%81%AE%E8%B7%9D%E9%9B%A2%E3%81%AE%E6%A6%82%E7%AE%97-%E8%A7%92%E5%B7%9D%E6%96%87%E5%BA%AB-%E7%B1%B3%E6%BE%A4-%E7%A9%82%E4%BF%A1/dp/4041003253/ref=tmm_pap_title_0</a></p>

<p><a href="http://www.kotenbu.com/">ＴＶアニメ「氷菓」オフィシャルサイト</a>
<a href="http://www.amazon.co.jp/%E3%80%8C%E6%B0%B7%E8%8F%93%E3%80%8DBD-BOX-Blu-ray-%E4%B8%AD%E6%9D%91%E6%82%A0%E4%B8%80/dp/B00OZC2IWC">Amazon.co.jp | 「氷菓」BD-BOX [Blu-ray] DVD・ブルーレイ - 中村悠一, 佐藤聡美, 阪口大助, 茅野愛衣, 雪野五月, 置鮎龍太郎, ゆかな, 小山茉美, 早見沙織, 悠木碧, 武本康弘</a>
<a href="http://www.amazon.co.jp/%E5%84%AA%E3%81%97%E3%81%95%E3%81%AE%E7%90%86%E7%94%B1-ChouCho/dp/B007BC64BO/ref=pd_sim_74_8?ie=UTF8&amp;refRID=09AN9TP88J1ZP1PQ3K4X">Amazon.co.jp: ChouCho : 優しさの理由 - 音楽</a></p>

<p>これから<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%C5%C5%B5%C9%F4">古典部</a>シリーズを読みはじめる方へ</p>

<p>1作目：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C9%B9%B2%DB">氷菓</a>
2作目：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%F2%BC%D4%A4%CE%A5%A8%A5%F3%A5%C9%A5%ED%A1%BC%A5%EB">愚者のエンドロール</a>
3作目：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%C9%A5%EA%A5%E3%A5%D5%A5%AB%A4%CE%BD%E7%C8%D6">クドリャフカの順番</a>
4作目：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B1%F3%A4%DE%A4%EF%A4%EA%A4%B9%A4%EB%BF%F7">遠まわりする雛</a>
5作目：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%D5%A4%BF%A4%EA%A4%CE%B5%F7%CE%A5%A4%CE%B3%B5%BB%BB">ふたりの距離の概算</a></p>

<p>アニメは本当に原作に忠実だったのだな、と思わせられるほどの内容です。 2014/8/24
投稿者 まさや
形式:文庫
アニメから入りました。</p>

<p>アニメは原作ミステリーを多少希釈して放送しているのだろう的な予想をしていましたが、</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C9%B9%B2%DB">氷菓</a>1巻だけをとってみれば、本当に原作に忠実にアニメが作られたのだな、と思います。</p>

<p>主人公たちは平凡な高校生ですから、だいそれた事件もなく。</p>

<p>かつてあった、子供向け小説の「ズッコケ3人組」の思春期ver’、という形容が当てはまりそうな、ライトな内容です。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: ディスプレイが特定の色だけちらつく(HDMI)
BASENAME: 2015/07/05/125830
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/05/2015 12:58:30
CATEGORY: PC
CATEGORY: HDMI
CATEGORY: ディスプレイ
CATEGORY: グラボ
-----
BODY:
<p>見づらい、なんなのかなって思ってたら、PCへの<a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>ケーブルの刺さりが甘かっただけだった。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: TPM の有効でないシステムで BitLocker を使って Windows のドライブを暗号化する
BASENAME: 2015/06/22/231923
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 06/22/2015 23:19:23
CATEGORY: BitLocker
CATEGORY: Windows
-----
BODY:
<p>[Window Title]
BitLocker ドライブ暗号化</p>

<p>[Content]
オペレーティング システム ドライブは BitLocker ドライブ暗号化で保護されていません。</p>

<p>[OK]</p>

<p>[お知らせ：【特集】<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows%208">Windows 8</a>の設定と新機能の利用（2） ～記憶域機能や<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%E2%A1%BC%A5%C8%A5%C7%A5%B9%A5%AF%A5%C8%A5%C3%A5%D7">リモートデスクトップ</a>、BitLockerを使う～ [V8]|<a href="http://win8app.vector.co.jp/index.php?M=99991&amp;I=31">http://win8app.vector.co.jp/index.php?M=99991&amp;I=31</a>]
<a href="http://win8app.vector.co.jp/index.php?M=99991&amp;I=31" target="_blank">お知らせ：【特集】Windows 8の設定と新機能の利用（2） ～記憶域機能やリモートデスクトップ、BitLockerを使う～ [V8]</a></p>

<p>Win+Q</p>

<p><a href="https://technet.microsoft.com/ja-jp/library/hh831412.aspx" target="_blank">BitLocker の新機能</a></p>

<p>[スタートアップ時に追加の認証を要求する] グループ ポリシー</p>

<p><a href="http://windows.microsoft.com/ja-jp/windows7/how-can-i-tell-if-my-bios-supports-bitlocker-drive-encryption" target="_blank">BIOS が BitLocker ドライブ暗号化をサポートしているかどうかを知る方法</a>
<a href="https://technet.microsoft.com/ja-jp/library/ee424299(v=ws.10).aspx" target="_blank">シナリオ 1: オペレーティング システム ドライブで BitLocker ドライブ暗号化を有効にする (Windows 7)</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 自宅用 DNS サーバを導入した
BASENAME: 2015/05/06/220811
STATUS: Draft
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 05/06/2015 22:08:11
CATEGORY: DNS
CATEGORY: BIND
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>サーバには 2 種類ある</p>

<ol>
<li>権威サーバ</li>
<li>リゾルバ</li>
</ol>


<p>BIND は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>がよく見つかってどうしようもなくなってしまったらしい。
前者は <a href="http://www.nlnetlabs.nl/projects/nsd/">NSD</a> 、 後者は <a href="https://www.unbound.net/">Unbound</a> が最近のトレンドである。
オープンリゾルバが問題となっている。
BIND は権威サーバ、リゾルバとしての機能をどちらも持ち合わせている。</p>

<p>それでも僕は BIND を自宅内に使った。</p>

<p><code>.local</code> は <a class="keyword" href="http://d.hatena.ne.jp/keyword/iOS">iOS</a> の名前解決の内部処理で使用されているみたいなので、今回は <code>.internal</code> を使うことにしました。</p>

<p>検索<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>は</p>

<pre class="code" data-lang="" data-unlink>pg1x.internal</pre>


<p><iframe src="http://blog.pg1x.com/embed/2014/07/13/183107" title="「夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～」に行ってきました - 戦場のプログラマー" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"><a href="http://blog.pg1x.com/entry/2014/07/13/183107">「夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～」に行ってきました - 戦場のプログラマー</a></iframe><cite class="hatena-citation"><a href="http://blog.pg1x.com/entry/2014/07/13/183107">blog.pg1x.com</a></cite></p>

<p><a href="http://www.nlnetlabs.nl/projects/nsd/">nlnetlabs.nl :: Name Server Daemon (NSD) ::</a>
<a href="https://www.unbound.net/">Unbound</a>
<a href="http://ufuso.jp/wp/?p=13325">自宅用内部DNSサーバー構築（CentOS6.5 x86_64）</a></p>

<p><a href="http://blog.pg1x.com/entry/2014/07/13/183107">「夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～」に行ってきました - 戦場のプログラマー</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: ブログがきれいにインデックスされるようになって嬉しいなって
BASENAME: 2015/05/06/144422
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 05/06/2015 14:44:22
CATEGORY: ブログ
CATEGORY: 駄文
CATEGORY: 感想
CATEGORY: ポエム
-----
BODY:
<p>なんかいい感じにインデックスされてる。<br/>
たまんないすね。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150506/20150506144351.png" alt="f:id:wnoguchi0727:20150506144351p:plain" title="f:id:wnoguchi0727:20150506144351p:plain" class="hatena-fotolife" itemprop="image"></span></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: いつの間にか Kindle for Mac が日本語版に対応していたらしいのでインストールしてみた
BASENAME: 2015/04/12/210027
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 04/12/2015 21:00:27
CATEGORY: Kindle
CATEGORY: Amazon
CATEGORY: Mac
CATEGORY: Windows
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205356.png
-----
BODY:
<p>2015年1月21日に <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> for PC が日本語の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%BB%D2%BD%F1%C0%D2">電子書籍</a>を取り扱えるようになってからというものの、</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/feature.html?ie=UTF8&amp;docId=3078592246">Amazon.co.jp: Kindle for PC</a></li>
<li><a href="http://pc.watch.impress.co.jp/docs/news/20150121_684625.html">Kindle for PC日本語版が公開 ～Windowsタブレットでも数百万冊の読書が可能に - PC Watch</a></li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> は依然として和書が取り扱えないので半分諦めていた。</p>

<p>が、つい先程調べてみたら <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> も2015年2月13日に和書にも対応していたようです。<br/>
半分諦めていたのでキャッチアップが遅れた・・・。</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/feature.html?docId=3077089416">Amazon.co.jp: Kindle for Mac</a></li>
<li><a href="http://www.itmedia.co.jp/news/articles/1502/13/news078.html">Mac上でKindle本を読める専用アプリ「Kindle for Mac」、Amazonが公開 - ITmedia ニュース</a></li>
<li><a href="http://pc.watch.impress.co.jp/docs/news/20150213_688164.html">「Kindle for Mac」日本語版がリリース ～320万冊以上のKindleコンテンツをMacで - PC Watch</a></li>
</ul>


<p>喜び勇んで <a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> にインストールした <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> を開いてみたがこんな感じ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412204642.png" alt="f:id:wnoguchi0727:20150412204642p:plain" title="f:id:wnoguchi0727:20150412204642p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>空っぽですよ。。。
何だよ嘘かよーと思い、ここで脱力してシャットダウンしそうになりましたが、<br/>
もしかしたら公式で <a class="keyword" href="http://d.hatena.ne.jp/keyword/dmg">dmg</a> ファイルで配布されているとかいうオチなんじゃないかと思って調べてみました。</p>

<p>ビンゴでした。どうやら <a class="keyword" href="http://d.hatena.ne.jp/keyword/App%20Store">App Store</a> で提供されているやつは古いらしい。2014年8月31日 で更新が止まってる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412204828.png" alt="f:id:wnoguchi0727:20150412204828p:plain" title="f:id:wnoguchi0727:20150412204828p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>以下から <a class="keyword" href="http://d.hatena.ne.jp/keyword/dmg">dmg</a> ファイルをダウンロードしてきてインストール</p>

<ul>
<li><a href="http://www.amazon.co.jp/gp/feature.html?docId=3077089416">Amazon.co.jp: Kindle for Mac</a></li>
</ul>


<p>下図のダウンロードボタンをクリック。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205045.png" alt="f:id:wnoguchi0727:20150412205045p:plain" title="f:id:wnoguchi0727:20150412205045p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/dmg">dmg</a> ファイルを開く。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205147.png" alt="f:id:wnoguchi0727:20150412205147p:plain" title="f:id:wnoguchi0727:20150412205147p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>Applications フォルダに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E9%A5%C3%A5%B0%A5%A2%A5%F3%A5%C9%A5%C9%A5%ED%A5%C3%A5%D7">ドラッグアンドドロップ</a>する。<br/>
上書きの警告が出たら迷いなく上書きする。<br/>
洋書しか読めない <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> に用はない。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a> を立ち上げる。<br/>
ログイン情報入力して、</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205325.png" alt="f:id:wnoguchi0727:20150412205325p:plain" title="f:id:wnoguchi0727:20150412205325p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>ログインすると</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205356.png" alt="f:id:wnoguchi0727:20150412205356p:plain" title="f:id:wnoguchi0727:20150412205356p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>これですよ。やばいですね。<br/>
では、書籍をどれか開いてみましょう。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412205512.png" alt="f:id:wnoguchi0727:20150412205512p:plain" title="f:id:wnoguchi0727:20150412205512p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>鼻血でそうです。<br/>
いやー、いい時代になりましたね。<br/>
たまりません。</p>

<p>以上、自己満足レポートでした。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac のスクリーンショット保存先を Dropbox のフォルダにした
BASENAME: 2015/04/12/203757
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 04/12/2015 20:37:57
CATEGORY: Mac
CATEGORY: スクリーンショット
CATEGORY: Dropbox
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412203739.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>はデフォルトでデスクトップに保存されます。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> を使っていると、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>撮ったら <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> フォルダに保存して即座にバックアップしたいと思うわけです。
しかしみなさん、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> の標準機能の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>共有機能は使ってはいけません。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20150412/20150412203739.png" alt="f:id:wnoguchi0727:20150412203739p:plain" title="f:id:wnoguchi0727:20150412203739p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>これは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> に保存してはくれますが、勝手に全世界から見えるようにまでしてくれる余計な機能を搭載しています。</p>

<p><iframe src="http://blog.pg1x.com/embed/2014/09/15/213002" title="Dropboxのスクリーンショット共有機能はファイルを全世界に公開する（Mac編） - 戦場のプログラマー" class="embed-card embed-blogcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 190px; max-width: 500px; margin: 10px 0px;"><a href="http://blog.pg1x.com/entry/2014/09/15/213002">Dropboxのスクリーンショット共有機能はファイルを全世界に公開する（Mac編） - 戦場のプログラマー</a></iframe><cite class="hatena-citation"><a href="http://blog.pg1x.com/entry/2014/09/15/213002">blog.pg1x.com</a></cite></p>

<p>なので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> 側で <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> のフォルダを指定してそこに保存するやり方がないか調べました。
<code>~/Dropbox/Screenshot/Mac/</code> に保存したいとした時はターミナルを開いて</p>

<pre class="code" data-lang="" data-unlink>defaults write com.apple.screencapture location ~/Dropbox/Screenshot/Mac/</pre>


<p>と叩きます。そして UIサーバ再起動。</p>

<pre class="code" data-lang="" data-unlink>killall SystemUIServer</pre>


<p>これで勝手に共有されることなく <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> に同期することができました。
めでたしめでたし。</p>

<h2>References</h2>

<ol>
<li><a href="http://inforati.jp/apple/mac-tips-techniques/system-hints/how-to-change-macos-screen-capture-save-folder-location.html">Macのスクリーンキャプチャ機能で撮影した画像の保存場所を変更する裏技 / Inforati</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 湿布始めました
BASENAME: 2015/04/12/200833
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 04/12/2015 20:08:33
CATEGORY: 湿布
CATEGORY: トクホン
IMAGE: http://ecx.images-amazon.com/images/I/51ZMnpsiCJL.jpg
-----
BODY:
<p>まことに久しぶりな投稿でございます。<br/>
最近肩こり、背中のこり、腰痛がひどくて湿布を貼り始めた次第です。<br/>
職場でたまたま湿布を恵んでいただいたのがきっかけです。</p>

<p>最初はシールがなんの役に立つぐらいに思ってましたが、効き目はやばいぐらいでした。<br/>
今まで自分の手で揉んでいたのが馬鹿みたいです。はやく使えばよかった・・・。</p>

<p>今度引っ越すときは湯船につかれるお部屋にしよう。<br/>
気持ちよすぎて溶けちゃうんじゃないか。</p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00FS9OMHA/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51ZMnpsiCJL._SL160_.jpg" class="hatena-asin-detail-image" alt="【第3類医薬品】トクホン 140枚" title="【第3類医薬品】トクホン 140枚"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00FS9OMHA/blogpg1xcom01-22/">【第3類医薬品】トクホン 140枚</a></p><ul><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C2%E7%C0%B5%C0%BD%CC%F4">大正製薬</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/10/01</li><li><span class="hatena-asin-detail-label">メディア:</span> ヘルスケア&ケア用品</li><li><a href="http://d.hatena.ne.jp/asin/B00FS9OMHA/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: TrueCrypt がだめなら 7z + AES-256 を使えばいいじゃない
BASENAME: 2014/12/23/232312
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/23/2014 23:23:12
CATEGORY: TrueCrypt
CATEGORY: 7-Zip
CATEGORY: 7z
CATEGORY: AES-256
CATEGORY: セキュリティ
-----
BODY:
<p>なんとも釣り気味なタイトルです。
まあ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>と連携する簡易ボリュームとして使う文にはこれでいいんじゃないかなと思ったので、こんな方法もあるんじゃない？
という提案です。
効果の程は知りませんが</p>

<p>今まで安全な暗号化ソリューションとして名を馳せていたTrueCryptは死にました。<br/>
もう使えなくなりました。</p>

<p><a href="http://truecrypt.sourceforge.net/">http://truecrypt.sourceforge.net/</a></p>

<p>公式ページを見ても</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223215609.png" alt="f:id:wnoguchi0727:20141223215609p:plain" title="f:id:wnoguchi0727:20141223215609p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>TrueCrypt はセキュアではありません！BitLocker を使ってください！</p>

<p>と書いてあって、BitLocker への移行手順が懇切丁寧に書いてあります。</p>

<p>それでもダウンロードしようとすると</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223215624.png" alt="f:id:wnoguchi0727:20141223215624p:plain" title="f:id:wnoguchi0727:20141223215624p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>TrueCryptはセキュアじゃないよ？！そこんとこわかってる？！既存のボリューム復元する目的のみで使ってね？！的なノリで最終警告が促されます。</p>

<h2>TrueCrypt は死んだのか？</h2>

<p>死んだわけではないようですが、いまいち盛り上がりに欠けます。<br/>
ほんとに大丈夫なのかなあ。。。</p>

<ul>
<li><a href="http://gigazine.net/news/20140603-truecrypt-not-die/">開発が停止したと思われていた暗号化ソフトTrueCryptが復活に向けて動きだす - GIGAZINE</a></li>
</ul>


<h2>じゃあ何があるのさ？</h2>

<p>じゃあ他に何があるか、BitLocker とかじゃなくて、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> にも手軽に放り込める暗号化イメージファイルは作ることはできないのかというところで
妥協策をさぐってみたところ、よく <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> 間のファイルやりとりで使用するファイル暗号化の常識として私は <a class="keyword" href="http://d.hatena.ne.jp/keyword/7-Zip">7-Zip</a> の自己解凍形式の書庫ファイルにして、中身はパスワードつけてAES-256<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>で暗号化して送るということをよくやっているのですが、これが応用できないかと考えてみました。
何のことはなくて、無圧縮の書庫を作って <a class="keyword" href="http://d.hatena.ne.jp/keyword/7-Zip">7-Zip</a> の 7z + AES-256 暗号化<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>が適用されるようにすればいいだけの話です。</p>

<p>ZIP にすればいいじゃん？馬鹿言っちゃいけません。 ZIP のパス付き書庫の暗号化<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a> ZipCrypto の暗号強度は飾りみたいなもんです。<br/>
社交辞令的にとりあえずパスワード付けましたと言ってるようなものです。</p>

<p>現時点では AES-256 は最強の暗号強度を持つ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>と言われています。</p>

<ol>
<li><a href="http://www.robata.org/arcive/doc-openssl.html">OpenSSLによる電子証明書の入手</a></li>
<li><a href="http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q10129896045">GPG4winでAES256を使いたいGPG4winを使って下記の動画（... - Yahoo!知恵袋</a></li>
</ol>


<h2>やり方</h2>

<p>既に <a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> に <a class="keyword" href="http://d.hatena.ne.jp/keyword/7-Zip">7-Zip</a> がインストールしてあるものとして話を進めます。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> ほしい・・・。</p>

<h3>暗号化したいものを集める</h3>

<p><code>CONFIDENTIAL</code> というディレクトリに大事そうなファイルを置きます。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231538.png" alt="f:id:wnoguchi0727:20141223231538p:plain" title="f:id:wnoguchi0727:20141223231538p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>ファイル圧縮ダイアログを開く</h3>

<p><code>CONFIDENTIAL</code> ディレクトリを右クリックして<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%C6%A5%AD%A5%B9%A5%C8%A5%E1%A5%CB%A5%E5%A1%BC">コンテキストメニュー</a>を出して [<a class="keyword" href="http://d.hatena.ne.jp/keyword/7-Zip">7-Zip</a>] -> [圧縮] を選択します。<br/>
インストールした物によっては日本語化されていないバージョンがインストールされているかもしれません。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231551.png" alt="f:id:wnoguchi0727:20141223231551p:plain" title="f:id:wnoguchi0727:20141223231551p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>暗号化の設定をする</h3>

<p>ファイル圧縮 ダイアログが開くので、以下の設定値を使用します。</p>

<ol>
<li>書庫形式: 7z</li>
<li>圧縮レベル: 無圧縮（圧縮かけて容量節約してもいいですが、今回の目的は暗号化だけが主なミッションなので、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/ZFS">ZFS</a> みたいに容量圧縮したいみたいな理由が特にない限りはインフレート(inflate)、デフレート(deflate)にかかる計算コストを抑えたいと思います）</li>
<li>パスワード: なるべくわかりにくいものにしましょう</li>
<li>暗号化<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%BD%A5%C3%A5%C9">メソッド</a>: AES-256</li>
<li>ファイル名を暗号化: チェックを入れる（ファイル名すら暴露したくない場合はこれにもチェックを入れるべきかと思います）</li>
</ol>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231609.png" alt="f:id:wnoguchi0727:20141223231609p:plain" title="f:id:wnoguchi0727:20141223231609p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>7z ファイルができました</h3>

<p>これで暗号化された 7z ファイルができました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231622.png" alt="f:id:wnoguchi0727:20141223231622p:plain" title="f:id:wnoguchi0727:20141223231622p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>実際に暗号解除して中身を見てみる</h3>

<p>パスワードを入力すると・・・</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231634.png" alt="f:id:wnoguchi0727:20141223231634p:plain" title="f:id:wnoguchi0727:20141223231634p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>開けました！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141223/20141223231652.png" alt="f:id:wnoguchi0727:20141223231652p:plain" title="f:id:wnoguchi0727:20141223231652p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>で、これを<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>の同期フォルダに放り込めば暗号化したボリュームのバックアップのできあがりーという寸法です。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/USB%A5%E1%A5%E2%A5%EA">USBメモリ</a>でも同じことができますね。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> なら最初から暗号化ボリュームを作ることができるので、こんなややこしいことはしなくて済むのですが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> だったらこんなやり方もありますかね・・・。<br/>
<strong>まあ、でも共通して言えることは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D1%A5%B9%A5%D5%A5%EC%A1%BC%A5%BA">パスフレーズ</a>の長さが短かったり安易なものだったら全く意味のないということでしょうか。。。</strong><br/>
こればっかりはどんな強力な暗号化<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>を使用しているといえど突破されてしまいます。</p>

<p>というひとりごとでした。ひとりごと。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 応用情報技術者試験(AP)に合格しました
BASENAME: 2014/12/21/055358
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/21/2014 05:53:58
CATEGORY: IPA
CATEGORY: 資格
CATEGORY: 情報処理技術者試験
CATEGORY: 応用情報技術者試験
-----
BODY:
<p>やったー！！</p>

<p>私の目に狂いがなければ、合格者受験番号の一覧に私の番号があったはずです。<br/>
28歳になって今更かよｗｗｗって鼻で笑われそうですが、ようやく取れました。<br/>
今度は高度試験の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A1%BC%A5%BF%A5%D9%A1%BC%A5%B9%A5%B9%A5%DA%A5%B7%A5%E3%A5%EA%A5%B9%A5%C8">データベーススペシャリスト</a>試験に挑戦しようか、それとも、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/CCNA">CCNA</a> を取得しようか。</p>

<p>いずれにしてもソフトウェアだけでなく、ネットワーク系の資格もとってみたい。<br/>
最近はストラテジ系にも興味が湧いてきました。</p>

<p>合格証書が届くのが待ち遠しい。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Devise と Bootstrap の併用について
BASENAME: 2014/12/18/234616
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/18/2014 23:46:16
CATEGORY: Ruby on Rails
CATEGORY: Ruby
CATEGORY: Devise
CATEGORY: Bootstrap
-----
BODY:
<p>以下がとても参考になる。</p>

<ul>
<li><a href="http://railsgirls.jp/devise/">Rails Girls - Japanese</a></li>
</ul>


<p>Bootstrap は頭から抜けかけてるので以下で復習する。</p>

<ul>
<li><a href="http://getbootstrap.com/components/#navbar-forms">Components ﾂｷ Bootstrap</a></li>
</ul>


<p>そうすると Devise の準備ができた時のナビゲーションバーは以下の様な記述になる。</p>

<p>見た目は</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141218/20141218234456.png" alt="f:id:wnoguchi0727:20141218234456p:plain" title="f:id:wnoguchi0727:20141218234456p:plain" class="hatena-fotolife" itemprop="image"></span></p>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141218/20141218234508.png" alt="f:id:wnoguchi0727:20141218234508p:plain" title="f:id:wnoguchi0727:20141218234508p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>な感じ。</p>

<pre class="code lang-eruby" data-lang="eruby" data-unlink>      <span class="synIdentifier">&lt;</span><span class="synStatement">ul</span><span class="synIdentifier"> </span><span class="synType">class</span><span class="synIdentifier">=</span><span class="synConstant">&quot;nav navbar-nav navbar-right&quot;</span><span class="synIdentifier">&gt;</span>
        <span class="synPreProc">&lt;%</span> <span class="synStatement">if</span> user_signed_in? <span class="synPreProc">-%&gt;</span>
          <span class="synIdentifier">&lt;</span><span class="synStatement">li</span><span class="synIdentifier"> </span><span class="synType">class</span><span class="synIdentifier">=</span><span class="synConstant">&quot;dropdown&quot;</span><span class="synIdentifier">&gt;</span>
            <span class="synIdentifier">&lt;</span><span class="synStatement">a</span><span class="synIdentifier"> </span><span class="synType">href</span><span class="synIdentifier">=</span><span class="synConstant">&quot;#&quot;</span><span class="synIdentifier"> </span><span class="synType">class</span><span class="synIdentifier">=</span><span class="synConstant">&quot;dropdown-toggle&quot;</span><span class="synIdentifier"> </span><span class="synType">data</span><span class="synIdentifier">-toggle=</span><span class="synConstant">&quot;dropdown&quot;</span><span class="synIdentifier"> role=</span><span class="synConstant">&quot;button&quot;</span><span class="synIdentifier"> aria-expanded=</span><span class="synConstant">&quot;false&quot;</span><span class="synIdentifier">&gt;</span><span class="synPreProc">&lt;%=</span> current_user.email <span class="synPreProc">%&gt;</span><span class="synUnderlined"> </span><span class="synIdentifier">&lt;</span><span class="synStatement">span</span><span class="synIdentifier"> </span><span class="synType">class</span><span class="synIdentifier">=</span><span class="synConstant">&quot;caret&quot;</span><span class="synIdentifier">&gt;&lt;/</span><span class="synStatement">span</span><span class="synIdentifier">&gt;&lt;/</span><span class="synStatement">a</span><span class="synIdentifier">&gt;</span>
            <span class="synIdentifier">&lt;</span><span class="synStatement">ul</span><span class="synIdentifier"> </span><span class="synType">class</span><span class="synIdentifier">=</span><span class="synConstant">&quot;dropdown-menu&quot;</span><span class="synIdentifier"> role=</span><span class="synConstant">&quot;menu&quot;</span><span class="synIdentifier">&gt;</span>
              <span class="synIdentifier">&lt;</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span><span class="synPreProc">&lt;%=</span> link_to <span class="synSpecial">'</span><span class="synConstant">Edit profile</span><span class="synSpecial">'</span>, edit_user_registration_path <span class="synPreProc">%&gt;</span><span class="synIdentifier">&lt;/</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span>
              <span class="synIdentifier">&lt;</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span><span class="synPreProc">&lt;%=</span> link_to <span class="synSpecial">'</span><span class="synConstant">Logout</span><span class="synSpecial">'</span>, destroy_user_session_path, <span class="synConstant">method</span>: <span class="synConstant">:delete</span> <span class="synPreProc">%&gt;</span><span class="synIdentifier">&lt;/</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span>
            <span class="synIdentifier">&lt;/</span><span class="synStatement">ul</span><span class="synIdentifier">&gt;</span>
          <span class="synIdentifier">&lt;/</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span>
        <span class="synPreProc">&lt;%</span> <span class="synStatement">else</span> <span class="synPreProc">-%&gt;</span>
          <span class="synIdentifier">&lt;</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span><span class="synPreProc">&lt;%=</span> link_to <span class="synSpecial">'</span><span class="synConstant">Sign up</span><span class="synSpecial">'</span>, new_user_registration_path <span class="synPreProc">%&gt;</span><span class="synIdentifier">&lt;/</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span>
          <span class="synIdentifier">&lt;</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span><span class="synPreProc">&lt;%=</span> link_to <span class="synSpecial">'</span><span class="synConstant">Login</span><span class="synSpecial">'</span>, new_user_session_path <span class="synPreProc">%&gt;</span><span class="synIdentifier">&lt;/</span><span class="synStatement">li</span><span class="synIdentifier">&gt;</span>
        <span class="synPreProc">&lt;%</span> <span class="synStatement">end</span> <span class="synPreProc">-%&gt;</span>
      <span class="synIdentifier">&lt;/</span><span class="synStatement">ul</span><span class="synIdentifier">&gt;</span>
</pre>


<p>便利！！</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Raspberry Pi(Raspbian) に jq コマンドをインストールしてみた
BASENAME: 2014/11/09/232916
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 11/09/2014 23:29:16
CATEGORY: jq
CATEGORY: JSON
CATEGORY: Raspberry Pi
CATEGORY: Raspbian
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141109/20141109232617.png
-----
BODY:
<p>こんな特殊な人はいないと思うけど、一応メモ。
プロセッサの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A1%BC%A5%AD%A5%C6%A5%AF%A5%C1%A5%E3">アーキテクチャ</a>が異なるため、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> 用のバイナリを落としてきても以下の様なメッセージが表示されて動作しない。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~ $ jq
-bash: /usr/local/bin/jq: cannot execute binary file</pre>


<p>恐れる必要はありません、ポータブル C で書かれているので jq のソースをクローンしてきてビルドすればOKです。</p>

<h2>TL;DR</h2>

<p>ものすごい辛い道のりでした。Raspbian に jq 入れるべきではありません。
ビルドした Raspbian 用のバイナリはあるので、 jq 使いたいだけの人はこれを入れたほうがいいかもです。</p>

<p><a href="http://wnoguchi-public.s3.amazonaws.com/bin/raspbian/jq">http://wnoguchi-public.s3.amazonaws.com/bin/raspbian/jq</a></p>

<h2>長い道のりの始まり</h2>

<pre class="code" data-lang="" data-unlink>git clone https://github.com/stedolan/jq.git</pre>


<p>まずは AutoTools のインストールが必要となる。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install autoconf</pre>


<p>しかし</p>

<pre class="code" data-lang="" data-unlink>autoreconf -i</pre>


<p>としても以下のようなエラーで怒られてしまう。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ autoreconf -i
configure.ac:14: installing `config/ar-lib&#39;
configure.ac:22: installing `config/compile&#39;
configure.ac:12: installing `config/install-sh&#39;
configure.ac:12: installing `config/missing&#39;
Makefile.am:35: Libtool library used but `LIBTOOL&#39; is undefined
Makefile.am:35:   The usual way to define `LIBTOOL&#39; is to add `LT_INIT&#39;
Makefile.am:35:   to `configure.ac&#39; and run `aclocal&#39; and `autoconf&#39; again.
Makefile.am:35:   If `LT_INIT&#39; is in `configure.ac&#39;, make sure
Makefile.am:35:   its definition is in aclocal&#39;s search path.
Makefile.am: installing `config/depcomp&#39;
configure.ac: installing `config/ylwrap&#39;
autoreconf: automake failed with exit status: 1</pre>


<p>Libtool を入れる。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install libtool</pre>


<p>再度トライ。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ autoreconf -i
libtoolize: putting auxiliary files in AC_CONFIG_AUX_DIR, `config&#39;.
libtoolize: copying file `config/ltmain.sh&#39;
libtoolize: putting macros in AC_CONFIG_MACRO_DIR, `config/m4&#39;.
libtoolize: copying file `config/m4/libtool.m4&#39;
libtoolize: copying file `config/m4/ltoptions.m4&#39;
libtoolize: copying file `config/m4/ltsugar.m4&#39;
libtoolize: copying file `config/m4/ltversion.m4&#39;
libtoolize: copying file `config/m4/lt~obsolete.m4&#39;
configure.ac:14: installing `config/ar-lib&#39;
configure.ac:22: installing `config/compile&#39;
configure.ac:21: installing `config/config.guess&#39;
configure.ac:21: installing `config/config.sub&#39;
configure.ac:12: installing `config/install-sh&#39;
configure.ac:12: installing `config/missing&#39;
Makefile.am: installing `config/depcomp&#39;
configure.ac: installing `config/ylwrap&#39;</pre>


<p>OKみたい。お次は configure 。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ ./configure
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p
checking for gawk... no
checking for mawk... mawk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for style of include used by make... GNU
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables...
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking dependency style of gcc... gcc3
checking for ar... ar
checking the archiver (ar) interface... ar
checking for gcc... (cached) gcc
checking whether we are using the GNU C compiler... (cached) yes
checking whether gcc accepts -g... (cached) yes
checking for gcc option to accept ISO C89... (cached) none needed
checking dependency style of gcc... (cached) gcc3
checking for gcc option to accept ISO C99... -std=gnu99
checking for gcc -std=gnu99 option to accept ISO Standard C... (cached) -std=gnu99
checking how to run the C preprocessor... gcc -std=gnu99 -E
checking for bison... no
checking for byacc... no
checking build system type... armv6l-unknown-linux-gnueabihf
checking host system type... armv6l-unknown-linux-gnueabihf
checking how to print strings... printf
checking for a sed that does not truncate output... /bin/sed
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for fgrep... /bin/grep -F
checking for ld used by gcc -std=gnu99... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 1572864
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands &#34;+=&#34;... yes
checking how to convert armv6l-unknown-linux-gnueabihf file names to armv6l-unknown-linux-gnueabihf format... func_convert_
op
checking how to convert armv6l-unknown-linux-gnueabihf file names to toolchain format... func_convert_file_noop
checking for /usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for archiver @FILE support... @
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc -std=gnu99 object... ok
checking for sysroot... no
checking for mt... mt
checking if mt is a manifest tool... no
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc -std=gnu99 supports -fno-rtti -fno-exceptions... no
checking for gcc -std=gnu99 option to produce PIC... -fPIC -DPIC
checking if gcc -std=gnu99 PIC flag -fPIC -DPIC works... yes
checking if gcc -std=gnu99 static flag -static works... yes
checking if gcc -std=gnu99 supports -c -o file.o... yes
checking if gcc -std=gnu99 supports -c -o file.o... (cached) yes
checking whether the gcc -std=gnu99 linker (/usr/bin/ld) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking whether gcc -std=gnu99 and cc understand -c and -o together... yes
checking bison version... not bison
checking for flex... no
checking for lex... no
checking oniguruma.h usability... no
checking oniguruma.h presence... no
checking for oniguruma.h... no
checking for valgrind... no
configure: WARNING: valgrind is required to test jq.
checking for memmem... yes
checking for bundle... no
checking for Ruby dependencies... configure: WARNING:
*****************************************************************
*  Ruby dependencies for building jq documentation not found.   *
*  You can still build, install and hack on jq, but the manpage *
*  will not be rebuilt and some of the tests won&#39;t run.         *
*  See docs/README.md for how to install the docs dependencies. *
*****************************************************************
no
checking for isatty... yes
checking for _isatty... no
checking for thread-local storage... yes
checking whether byte ordering is bigendian... no
configure: creating ./config.status
config.status: creating Makefile
config.status: executing depfiles commands
config.status: executing libtool commands</pre>


<p>man ページが作られないよみたいな警告が出ているが気にしない。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ make -j8
  LEX    lexer.c
/bin/bash: flex: command not found
  YACC   parser.c
Makefile:1275: recipe for target &#39;lexer.c&#39; failed
make: *** [lexer.c] Error 127
make: *** Waiting for unfinished jobs....
./config/ylwrap: line 113: yacc: command not found
Makefile:664: recipe for target &#39;parser.c&#39; failed
make: *** [parser.c] Error 1</pre>


<p>いろんなものが足りてない。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Debian">Debian</a> 系はあまり慣れてないからかいろいろ躓く。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install bison</pre>


<p>改めて</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ make -j8
  YACC   parser.c
  LEX    lexer.c
/bin/bash: flex: command not found
Makefile:1275: recipe for target &#39;lexer.c&#39; failed
make: *** [lexer.c] Error 127
make: *** Waiting for unfinished jobs....
/home/pi/jq/parser.y:100.1-11: invalid directive: `%precedence&#39;
/home/pi/jq/parser.y:101.1-11: invalid directive: `%precedence&#39;
/home/pi/jq/parser.y:102.1-11: invalid directive: `%precedence&#39;
/home/pi/jq/parser.y:274.1-6: invalid directive: `%empty&#39;
/home/pi/jq/parser.y:288.1-6: invalid directive: `%empty&#39;
/home/pi/jq/parser.y:296.1-6: invalid directive: `%empty&#39;
/home/pi/jq/parser.y:535.1-6: invalid directive: `%empty&#39;
/home/pi/jq/parser.y:702.1-6: invalid directive: `%empty&#39;
Makefile:664: recipe for target &#39;parser.c&#39; failed
make: *** [parser.c] Error 1</pre>


<p>またエラー。</p>

<p><a href="https://github.com/stedolan/jq/issues/488">jq no longer builds on Ubuntu 12.04 · Issue #488 · stedolan/jq</a></p>

<p>を見ると俺は bison 3.x を使ってビルドしてるんだけど、どうよ？ 的なコメントが書いてあり、<br/>
bison をソースからビルドして解決したみたいなことが書いてある。<br/>
バージョンを確認してみる。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ bison --version
bison (GNU Bison) 2.5
Written by Robert Corbett and Richard Stallman.

Copyright (C) 2011 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</pre>


<p>本当にありがとうございました。
だんだん jq を Raspbian で無理して使う必要性を感じなくなってくる。<br/>
正直 Raspberry Pi でこういうのをソースから<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>するのは負荷が大きい。めっちゃ遅い。</p>

<h3>Bison のインストール</h3>

<p>まずさっきパッケージで入れた Bison を消す。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y remove bison</pre>


<p>そして以下から Bison のソースを落としてくる。</p>

<p><a href="http://ftp.gnu.org/gnu/bison/">GNU Project Archives</a></p>

<pre class="code" data-lang="" data-unlink>wget http://ftp.gnu.org/gnu/bison/bison-3.0.1.tar.gz
tar xvzf bison-3.0.1.tar.gz</pre>


<p>INSTALL を読む。そしてビルド、インストール。<br/>
このぐらい低レベルなな<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%E9">インストーラ</a>になると依存性のエラーもあまりなくてよさげ。</p>

<pre class="code" data-lang="" data-unlink>./configure
make
make check</pre>


<p>が、</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/bison-3.0.1 $ make check
  GEN      public-submodule-commit
make  check-recursive
make[1]: Entering directory &#39;/home/pi/bison-3.0.1&#39;
Making check in po
make[2]: Entering directory &#39;/home/pi/bison-3.0.1/po&#39;
make[2]: Nothing to be done for &#39;check&#39;.
make[2]: Leaving directory &#39;/home/pi/bison-3.0.1/po&#39;
Making check in runtime-po
make[2]: Entering directory &#39;/home/pi/bison-3.0.1/runtime-po&#39;
make[2]: Nothing to be done for &#39;check&#39;.
make[2]: Leaving directory &#39;/home/pi/bison-3.0.1/runtime-po&#39;
Making check in .
make[2]: Entering directory &#39;/home/pi/bison-3.0.1&#39;
  GEN      doc/bison.help
make  examples/calc++/calc++ examples/mfcalc/mfcalc examples/rpcalc/rpcalc ./tests/bison tests/atconfig tests/atlocal
make[3]: Entering directory &#39;/home/pi/bison-3.0.1&#39;
  YACC     examples/calc++/calc++-parser.stamp
  CXX      examples/calc++/examples_calc___calc__-calc++-driver.o
  LEX      examples/calc++/calc++-scanner.cc
  CXX      examples/calc++/examples_calc___calc__-calc++-scanner.o
g++: error: ./examples/calc++/calc++-scanner.cc: No such file or directory
g++: fatal error: no input files
compilation terminated.
Makefile:4023: recipe for target &#39;examples/calc++/examples_calc___calc__-calc++-scanner.o&#39; failed
make[3]: *** [examples/calc++/examples_calc___calc__-calc++-scanner.o] Error 4
make[3]: Leaving directory &#39;/home/pi/bison-3.0.1&#39;
Makefile:4830: recipe for target &#39;check-am&#39; failed
make[2]: *** [check-am] Error 2
make[2]: Leaving directory &#39;/home/pi/bison-3.0.1&#39;
Makefile:4379: recipe for target &#39;check-recursive&#39; failed
make[1]: *** [check-recursive] Error 1
make[1]: Leaving directory &#39;/home/pi/bison-3.0.1&#39;
Makefile:4833: recipe for target &#39;check&#39; failed
make: *** [check] Error 2</pre>


<p>華麗にスルー。気にしてたら長生きできない。
たぶん Bison 使ってコアなことやろうとするとエラーはいて死ぬだろうけど・・・。</p>

<pre class="code" data-lang="" data-unlink>sudo -i
cd ~pi/bison-3.0.1
make install</pre>


<p>そしてバージョン確認。</p>

<pre class="code" data-lang="" data-unlink>root@raspberrypi:/home/pi/bison-3.0.1# bison --version
bison (GNU Bison) 3.0.1
Written by Robert Corbett and Richard Stallman.

Copyright (C) 2013 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</pre>


<p>OK。一般ユーザーに戻る。</p>

<h3>jq <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>再開</h3>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ make -j8
  LEX    lexer.c
/bin/bash: flex: command not found
Makefile:1275: recipe for target &#39;lexer.c&#39; failed
make: *** [lexer.c] Error 127
make: *** Waiting for unfinished jobs....</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/flex">flex</a> 入れる。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install flex</pre>




<pre class="code" data-lang="" data-unlink>builtin.c:4:23: fatal error: oniguruma.h: No such file or directory
compilation terminated.
Makefile:654: recipe for target &#39;builtin.lo&#39; failed
make[1]: *** [builtin.lo] Error 1
make[1]: *** Waiting for unfinished jobs....
make[1]: Leaving directory &#39;/home/pi/jq&#39;
Makefile:488: recipe for target &#39;all&#39; failed
make: *** [all] Error 2</pre>


<p>鬼車の開発ヘッダ入れる。</p>

<pre class="code" data-lang="" data-unlink>sudo apt-get -y install libonig-dev</pre>


<p>もう一回</p>

<pre class="code" data-lang="" data-unlink>./.libs/libjq.a(builtin.o): In function `f_match&#39;:
/home/pi/jq/builtin.c:613: undefined reference to `onig_new&#39;
/home/pi/jq/builtin.c:630: undefined reference to `onig_region_new&#39;
/home/pi/jq/builtin.c:632: undefined reference to `onig_search&#39;
/home/pi/jq/builtin.c:707: undefined reference to `onig_foreach_name&#39;
/home/pi/jq/builtin.c:711: undefined reference to `onig_region_free&#39;
/home/pi/jq/builtin.c:725: undefined reference to `onig_region_free&#39;
/home/pi/jq/builtin.c:729: undefined reference to `onig_free&#39;
/home/pi/jq/builtin.c:608: undefined reference to `OnigEncodingUTF8&#39;
/home/pi/jq/builtin.c:608: undefined reference to `OnigSyntaxPerl_NG&#39;
/home/pi/jq/builtin.c:618: undefined reference to `onig_error_code_to_str&#39;
/home/pi/jq/builtin.c:718: undefined reference to `onig_error_code_to_str&#39;
collect2: ld returned 1 exit status
Makefile:610: recipe for target &#39;jq&#39; failed
make[1]: *** [jq] Error 1
make[1]: Leaving directory &#39;/home/pi/jq&#39;
Makefile:488: recipe for target &#39;all&#39; failed
make: *** [all] Error 2</pre>


<p>configure やり直してみる。</p>

<pre class="code" data-lang="" data-unlink>./configure
make -j8</pre>


<p>よさそう。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ make check
make  check-am
make[1]: Entering directory &#39;/home/pi/jq&#39;
make  check-TESTS
make[2]: Entering directory &#39;/home/pi/jq&#39;
make[3]: Entering directory &#39;/home/pi/jq&#39;
PASS: tests/all.test
=============
1 test passed
=============
make[3]: Leaving directory &#39;/home/pi/jq&#39;
make[2]: Leaving directory &#39;/home/pi/jq&#39;
make[1]: Leaving directory &#39;/home/pi/jq&#39;</pre>


<p>インストールする。</p>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ sudo make install
make  install-am
make[1]: Entering directory &#39;/home/pi/jq&#39;
make[2]: Entering directory &#39;/home/pi/jq&#39;
 /bin/mkdir -p &#39;/usr/local/lib&#39;
 /bin/bash ./libtool   --mode=install /usr/bin/install -c   libjq.la &#39;/usr/local/lib&#39;
libtool: install: /usr/bin/install -c .libs/libjq.so.1.0.4 /usr/local/lib/libjq.so.1.0.4
libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libjq.so.1.0.4 libjq.so.1 || { rm -f libjq.so.1 &amp;&amp; ln -s libjq.so.1.0.4 libjq.so.1; }; })
libtool: install: (cd /usr/local/lib &amp;&amp; { ln -s -f libjq.so.1.0.4 libjq.so || { rm -f libjq.so &amp;&amp; ln -s libjq.so.1.0.4 libjq.so; }; })
libtool: install: /usr/bin/install -c .libs/libjq.lai /usr/local/lib/libjq.la
libtool: install: /usr/bin/install -c .libs/libjq.a /usr/local/lib/libjq.a
libtool: install: chmod 644 /usr/local/lib/libjq.a
libtool: install: ranlib /usr/local/lib/libjq.a
libtool: finish: PATH=&#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/sbin&#34; ldconfig -n /usr/local/lib
----------------------------------------------------------------------
Libraries have been installed in:
   /usr/local/lib

If you ever happen to want to link against installed libraries
in a given directory, LIBDIR, you must either use libtool, and
specify the full pathname of the library, or use the `-LLIBDIR&#39;
flag during linking and do at least one of the following:
   - add LIBDIR to the `LD_LIBRARY_PATH&#39; environment variable
     during execution
   - add LIBDIR to the `LD_RUN_PATH&#39; environment variable
     during linking
   - use the `-Wl,-rpath -Wl,LIBDIR&#39; linker flag
   - have your system administrator add LIBDIR to `/etc/ld.so.conf&#39;

See any operating system documentation about shared libraries for
more information, such as the ld(1) and ld.so(8) manual pages.
----------------------------------------------------------------------
 /bin/mkdir -p &#39;/usr/local/bin&#39;
  /bin/bash ./libtool   --mode=install /usr/bin/install -c jq &#39;/usr/local/bin&#39;
libtool: install: /usr/bin/install -c jq /usr/local/bin/jq
 /bin/mkdir -p &#39;/usr/local/share/doc/jq&#39;
 /usr/bin/install -c -m 644 README.md COPYING AUTHORS README &#39;/usr/local/share/doc/jq&#39;
 /bin/mkdir -p &#39;/usr/local/include&#39;
 /usr/bin/install -c -m 644 jv.h jq.h &#39;/usr/local/include&#39;
 /bin/mkdir -p &#39;/usr/local/share/man/man1&#39;
 /usr/bin/install -c -m 644 jq.1 &#39;/usr/local/share/man/man1&#39;
make[2]: Leaving directory &#39;/home/pi/jq&#39;
make[1]: Leaving directory &#39;/home/pi/jq&#39;</pre>


<h3>バージョン確認する。</h3>

<pre class="code" data-lang="" data-unlink>pi@raspberrypi ~/jq $ which jq
/usr/local/bin/jq
pi@raspberrypi ~/jq $ jq --version
jq-1.4-148-g89791a0</pre>


<p>使ってみる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141109/20141109232617.png" alt="f:id:wnoguchi0727:20141109232617p:plain" title="f:id:wnoguchi0727:20141109232617p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>イェーイ。</p>

<h2>結論</h2>

<p>Raspbian に jq を入れるのは根性が必要。</p>

<p>後世のために Raspberry Pi の Raspbian 用の jq バイナリを置いておきました。
好きに使ってください。</p>

<p><a href="http://wnoguchi-public.s3.amazonaws.com/bin/raspbian/jq">http://wnoguchi-public.s3.amazonaws.com/bin/raspbian/jq</a></p>

<h2>References</h2>

<ol>
<li><a href="https://github.com/stedolan/jq">stedolan/jq</a></li>
<li><a href="http://stedolan.github.io/jq/download/">Download jq</a></li>
<li><a href="https://wiki.debian.org/AutoTools">AutoTools - Debian Wiki</a></li>
<li><a href="http://loto.sourceforge.net/feram/Autotools-memo.ja.html">Autotoolsについてのメモ</a></li>
<li><a href="http://www.howtoforge.com/forums/showthread.php?t=9264">make: yacc: Command not found building libpcap - HowtoForge Forums | HowtoForge - Linux Howtos and Tutorials</a></li>
<li><a href="https://github.com/stedolan/jq/issues/488">jq no longer builds on Ubuntu 12.04 · Issue #488 · stedolan/jq</a></li>
<li><a href="http://ftp.gnu.org/gnu/bison/">GNU Project Archives</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ブルースクリーンちゃん
BASENAME: 2014/11/08/010734
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 11/08/2014 01:07:34
CATEGORY: Windows
CATEGORY: ブルースクリーン
CATEGORY: イベントビューアー
-----
BODY:
<ul>
<li><code>IRQL_NOT_LESS_OR_EQUAL</code></li>
<li><code>BAD_POOL_HEADER</code></li>
<li><code>QUOTA_UNDERFLOW</code></li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B0%A5%E9%A5%DC">グラボ</a>かと思ったけど、違うのだろうか。
イベントビューアーみたけどよくわからんかった・・・。</p>

<p>外付けハード抜き取ったらエラーでなくなったから、それが原因だろうか。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Yosemiteにして直面した困ったことつらつら書いていく
BASENAME: 2014/10/21/210545
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/21/2014 21:05:45
CATEGORY: Mac
CATEGORY: Yosemite
CATEGORY: Homebrew
CATEGORY: Powerlime
CATEGORY: vim
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141021/20141021210932.png
-----
BODY:
<p>随時書き込んでいきます。<br/>
対策は暇があるときに考える。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/brew">brew</a> doctor が失敗する</h2>

<pre class="code" data-lang="" data-unlink>% brew doctor
Error: No such file or directory - /Library/Developer/CommandLineTools/usr/bin/clang</pre>


<ol>
<li><a href="https://github.com/Homebrew/homebrew/issues/29830">incorrect clang path on Yosemite · Issue #29830 · Homebrew/homebrew</a></li>
<li><a href="http://qiita.com/y_minowa/items/1e87a7c846816923174f">Yosemite(OS X 10.10)においてHomebrewが使えない問題を解決する - Qiita</a></li>
</ol>


<h2>Powerline の <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a> フォントが消滅してうまく表示されない</h2>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20141021/20141021210932.png" alt="f:id:wnoguchi0727:20141021210932p:plain" title="f:id:wnoguchi0727:20141021210932p:plain" class="hatena-fotolife" itemprop="image"></span></p>


-----
--------
AUTHOR: wnoguchi0727
TITLE: SNS・チャット系サービスの改行方法まとめ
BASENAME: 2014/10/18/012837
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/18/2014 01:28:37
CATEGORY: SNS
CATEGORY: チャット
CATEGORY: まとめ
CATEGORY: Facebook
CATEGORY: Twitter
CATEGORY: Janetter
CATEGORY: 夜フクロウ
CATEGORY: ChatWork
CATEGORY: HipChat
CATEGORY: Skype
CATEGORY: LINE
-----
BODY:
<p>すぐ忘れるからメモ。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Facebook">Facebook</a></h3>

<ul>
<li>Shift + Enter</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a></h3>

<h4>Web</h4>

<ul>
<li>Enter</li>
</ul>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%EB%A5%D5%A5%AF%A5%ED%A5%A6">夜フクロウ</a></h4>

<ul>
<li>option + Enter</li>
</ul>


<h4>Janetter</h4>

<ul>
<li>Shift + Enter</li>
</ul>


<h3>ChatWork</h3>

<ul>
<li>Enter</li>
</ul>


<h3>HipChat</h3>

<ul>
<li>Shift + Enter</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Skype">Skype</a></h3>

<p>友達少なくて試してません。</p>

<ul>
<li>Ctrl + Enter</li>
<li>Shift + Enter</li>
</ul>


<h3>LINE</h3>

<p>友達少なくて試してません。</p>

<ul>
<li>Alt + Enter</li>
<li>Command + Enter</li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 海外から2段階認証の SMS が届かなくて困っている docomo ユーザーへ
BASENAME: 2014/09/27/224710
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 09/27/2014 22:47:10
CATEGORY: docomo
CATEGORY: スマートフォン
CATEGORY: iPhone
CATEGORY: Android
CATEGORY: SMS
CATEGORY: 2段階認証
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Xperia">Xperia</a> Z のときも同様だったけど、<a class="keyword" href="http://d.hatena.ne.jp/keyword/iPhone">iPhone</a> 6 を新規に契約した時も同様の現象が発生したのでメモ。<br/>
最近はデフォルトで海外からの SMS を拒否するようになったらしい。<br/>
前は大丈夫だったのにひどい仕様だ。<br/>
該当の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3">スマートフォン</a>で以下をダイヤルします。</p>

<pre class="code" data-lang="" data-unlink>#141#</pre>


<p>これやらないと、知ってる限り以下のサービスは軒並み SMS を受け取ることができません。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Facebook">Facebook</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Tumblr">Tumblr</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Evernote">Evernote</a></li>
</ul>


<p>まあ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticator 等の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%BF%A5%A4%A5%E0%A5%D1%A5%B9%A5%EF%A1%BC%A5%C9">ワンタイムパスワード</a>生成アプリを使えば良い話なんですけどね。</p>

<h2>References</h2>

<ol>
<li><a href="http://goo.gl/uyDMDn">SMS（ショートメッセージサービス） | サービス・機能 | NTTドコモ</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 近いうちに AWS CLIコマンドで生成されるファイルは ~/.aws/config から ~/.aws/credentials に統合されるというお話
BASENAME: 2014/09/24/231245
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 09/24/2014 23:12:45
CATEGORY: AWS
CATEGORY: Route53
CATEGORY: Roadworker
CATEGORY: awscli
-----
BODY:
<p>Route53 を <a class="keyword" href="http://d.hatena.ne.jp/keyword/DSL">DSL</a> で管理する Roadworker は便利だからよく使っていたのですが、 <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/CLI">CLI</a> 生成した <code>~/.aws/config</code> を読み込んでくれなくてちょっと不便だなって思っていたのですが、 Roadworker で <code>~/.aws/config</code> 読み込まないのはなんで？って質問したら</p>

<p><a href="https://github.com/winebarrel/roadworker/issues/6">Want to read from AWS credentials from awscli generated config file · Issue #6 · winebarrel/roadworker</a></p>

<p>どうやら <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> では <code>~/.aws/credentials</code> を読み込むのが最近のトレンドのようだったのです。</p>

<p><a href="http://blogs.aws.amazon.com/security/post/Tx3D6U6WSFGOK2H/A-New-and-Standardized-Way-to-Manage-Credentials-in-the-AWS-SDKs">A New and Standardized Way to Manage Credentials in the AWS SDKs - AWS Security Blog</a></p>

<p>確かに <a class="keyword" href="http://d.hatena.ne.jp/keyword/aws">aws</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/cli">cli</a> のドキュメント調べたらまずはじめに <code>~/.aws/credentials</code> がないか調べますって書いてあって、だがしかし、 <code>aws configure</code> コマンドは <code>~/.aws/config</code> ファイルを生成して、なんでかなあって不思議に思ってたんですよね。</p>

<p><a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">Configuring the AWS Command Line Interface - AWS Command Line Interface</a></p>

<p>親切にも指定したクレデンシャルファイルを読み込むオプションをつけて実装してくださいました。<br/>
フィードバック速い！</p>

<p>で、肝心の <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/CLI">CLI</a> に質問したら即効で答え返ってきました。
もうその議論はなされていてレビュー通ったらマージされて、リリースされるよって教えてくれました。<br/>
僕のすごいへたくそな英語にも親切に答えてくれる。<br/>
それなりに通じてるんだろうか・・・。あなたがチュキだからーみたいな感じになってないといいな。</p>

<p><a href="https://github.com/aws/aws-cli/issues/918">aws configure may have to generate ~/.aws/credentials instead ~/.aws/config · Issue #918 · aws/aws-cli</a></p>

<p>楽しみだなあ。
issue を登録するだけで contribution graph に色が塗られるのは気持ちいいけど、コード的なコミットもしたいなあ。</p>

<p>いかにも貢献していますって感じでかっこいいじゃないですか。</p>

<p>ちなみに今の <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/CLI">CLI</a> のバージョンは 1.4.4 です。<br/>
リリースされたらアップグレードしましょう。</p>

<pre class="code" data-lang="" data-unlink>pip install --upgrade awscli</pre>


<p>あと、Roadworker はとってもオススメです。もっと Star ついてもいいと思う。<br/>
僕の尊敬している<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B0%CB%C6%A3%C4%BE%CC%E9">伊藤直也</a>さんも使ってるので最高です。<br/>
いつか直也さんみたいなすごいエンジニアになりたい。</p>

<p>以上、半分以上僕の日記帳でした。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Dropboxのスクリーンショット共有機能はファイルを全世界に公開する（Mac編）
BASENAME: 2014/09/15/213002
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 09/15/2014 21:30:02
CATEGORY: Dropbox
CATEGORY: Mac
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140915/20140915212532.png
-----
BODY:
<p>若干釣り気味なタイトルですが、正確には<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>共有機能を無効にして、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>の保存先を<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>フォルダに変更するまでの方法です。</p>

<p>すぐに<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>を同期してくれる結構便利なこの機能、実はよく読まないと落とし穴があります。
当たり前過ぎる事実に気付くのが遅れましたが、取得した<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>が<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>に同期されるのはいいのですが、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>はすべからく誰からでも見れるように共有URLを生成して共有してしまう機能なのです。</p>

<p><strong>同期してくれるだけではない。ダイナミックに全世界に公開してしまいます。</strong></p>

<p>こんなのは望んでいないので<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>フォルダに保存するだけの
オプションがないか確認しましたが、ないようです。</p>

<p>まず、問答無用で共有されるこの機能をオフにする。</p>

<p>下図のように基本設定を選ぶ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140915/20140915212532.png" alt="f:id:wnoguchi0727:20140915212532p:plain" title="f:id:wnoguchi0727:20140915212532p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>そして以下のチェックを外す。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140915/20140915212550.png" alt="f:id:wnoguchi0727:20140915212550p:plain" title="f:id:wnoguchi0727:20140915212550p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>当然<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>はデスクトップに保存されるようになります。<br/>
これを前のように<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>に同期されるフォルダに保存されるようにしたい。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac%20OS%20X">Mac OS X</a> 10.9.4 Mavericks で確認しました。</p>

<p>ターミナルを立ち上げて以下を入力します。</p>

<pre class="code" data-lang="" data-unlink>defaults write com.apple.screencapture location ~/Dropbox/スクリーンショット/
killall SystemUIServer</pre>


<p>そして、今までリンクが共有されっぱなしになってしまっているやつは以下からしこしこ消していきます。</p>

<p><a href="https://www.dropbox.com/links">リンク - Dropbox</a></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140915/20140915212704.png" alt="f:id:wnoguchi0727:20140915212704p:plain" title="f:id:wnoguchi0727:20140915212704p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>何百枚と知らずに共有してしまった人はひたすら消すしかありません。<br/>
なんか<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>ないのかなと調べてみたけど、見当たりませんでした。<br/>
あったら教えて下さい。。。</p>

<p>これで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A1%BC%A5%F3%A5%B7%A5%E7%A5%C3%A5%C8">スクリーンショット</a>の共有はなくなり、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a>への瞬時同期も実現されるようになりました。<br/>
消えて困る情報は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Dropbox">Dropbox</a> か <a class="keyword" href="http://d.hatena.ne.jp/keyword/Evernote">Evernote</a> を使うことが多くなりましたね。<br/>
今まで手動でDVDに焼いたり、USBに保存したり、<a class="keyword" href="http://d.hatena.ne.jp/keyword/NAS">NAS</a>に保存していたのが懐かしくなります。<br/>
まあでも、個人情報系は手元に置いておきたい心理もあるっちゃありますが・・・。</p>

<h2>References</h2>

<ol>
<li><a href="http://inforati.jp/apple/mac-tips-techniques/system-hints/how-to-change-macos-screen-capture-save-folder-location.html">Macのスクリーンキャプチャ機能で撮影した画像の保存場所を変更する裏技 / Inforati</a></li>
<li><a href="http://xn--r8jwa9ayb3301a972ahi6c.biz/?p=946">DropBoxのスクリーンショットの共有を停止する | 今日覚えたことの覚え書き</a></li>
<li><a href="https://www.dropbox.com/help/334">ファイルへのリンクを削除するには - Dropbox</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: ストレージ系のサービスへのアクセスを提供するIAMポリシー(S3, Glacier, CloudFront)
BASENAME: 2014/09/13/164132
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 09/13/2014 16:41:32
CATEGORY: AWS
CATEGORY: IAM
CATEGORY: インフラ
-----
BODY:

<pre class="code" data-lang="" data-unlink>{
  &#34;Version&#34;: &#34;2012-10-17&#34;,
  &#34;Statement&#34;: [
    {
      &#34;Action&#34;: [
        &#34;s3:ListAllMyBuckets&#34;
      ],
      &#34;Effect&#34;: &#34;Allow&#34;,
      &#34;Resource&#34;: &#34;arn:aws:s3:::*&#34;
    },
    {
      &#34;Action&#34;: [
        &#34;cloudfront:*&#34;,
        &#34;glacier:*&#34;,
        &#34;s3:*&#34;
      ],
      &#34;Effect&#34;: &#34;Allow&#34;,
      &#34;Resource&#34;: &#34;*&#34;
    }
  ]
}</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: vagrant-digitalocean provider の簡単な使い方
BASENAME: 2014/08/31/225351
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/31/2014 22:53:51
CATEGORY: Vagrant
CATEGORY: DigitalOcean
-----
BODY:
<p>次のような Vagrantfile を用意します。</p>

<pre class="code lang-ruby" data-lang="ruby" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synType">Vagrant</span>.configure(<span class="synSpecial">'</span><span class="synConstant">2</span><span class="synSpecial">'</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  config.vm.provider <span class="synConstant">:digital_ocean</span> <span class="synStatement">do</span> |<span class="synIdentifier">provider</span>, <span class="synIdentifier">override</span>|
    override.ssh.private_key_path = <span class="synSpecial">'</span><span class="synConstant">~/.ssh/digitalocean-vagrant</span><span class="synSpecial">'</span>
    override.vm.box = <span class="synSpecial">'</span><span class="synConstant">digital_ocean</span><span class="synSpecial">'</span>
    override.vm.box_url = <span class="synSpecial">&quot;</span><span class="synConstant">https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box</span><span class="synSpecial">&quot;</span>

    provider.token = <span class="synSpecial">''</span>
    provider.image = <span class="synSpecial">'</span><span class="synConstant">CentOS 6.5 x64</span><span class="synSpecial">'</span>
    <span class="synComment"># San Francisco 1</span>
    provider.region = <span class="synSpecial">'</span><span class="synConstant">sfo1</span><span class="synSpecial">'</span>
    provider.size = <span class="synSpecial">'</span><span class="synConstant">512mb</span><span class="synSpecial">'</span>
  <span class="synStatement">end</span>
<span class="synStatement">end</span>
</pre>


<p>前提条件としては</p>

<ul>
<li>Apps &amp; <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a> メニューで Personal <a class="keyword" href="http://d.hatena.ne.jp/keyword/Access">Access</a> Tokens を生成すること。Read, Write アクセス付与。</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> という名前の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>が登録されていること。</li>
<li><code>~/.ssh/digitalocean-vagrant</code> と対になる公開鍵 <code>~/.ssh/digitalocean-vagrant.pub</code> が存在すること。</li>
<li>選択されているリージョンは San Francisco 1 （slug名になっている）。</li>
</ul>


<p>ちなみに現在のリージョンとslug名の対応は以下のようになっている。</p>

<table>
<thead>
<tr>
<th style="text-align:left;"> slug </th>
<th style="text-align:left;"> Region Name     </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;"> nyc1 </td>
<td style="text-align:left;"> New York 1      </td>
</tr>
<tr>
<td style="text-align:left;"> ams1 </td>
<td style="text-align:left;"> Amsterdam 1     </td>
</tr>
<tr>
<td style="text-align:left;"> sfo1 </td>
<td style="text-align:left;"> San Francisco 1 </td>
</tr>
<tr>
<td style="text-align:left;"> nyc2 </td>
<td style="text-align:left;"> New York 2      </td>
</tr>
<tr>
<td style="text-align:left;"> ams2 </td>
<td style="text-align:left;"> Amsterdam 2     </td>
</tr>
<tr>
<td style="text-align:left;"> sgp1 </td>
<td style="text-align:left;"> Singapore 1     </td>
</tr>
<tr>
<td style="text-align:left;"> lon1 </td>
<td style="text-align:left;"> London 1        </td>
</tr>
<tr>
<td style="text-align:left;"> nyc3 </td>
<td style="text-align:left;"> New York 3      </td>
</tr>
</tbody>
</table>


<p>調べ方はさっきのパーソナルトークンを指定して以下の様な <a class="keyword" href="http://d.hatena.ne.jp/keyword/curl">curl</a> コマンドを発行すればいいです。<br/>
jq でフィルタリングしてます。</p>

<pre class="code" data-lang="" data-unlink>curl -X GET &#34;https://api.digitalocean.com/v2/regions&#34; \
     -H &#34;Authorization: Bearer $DIGITAL_OCEAN_TOKEN&#34; \
     2&gt;/dev/null | jq &#39;.regions [] | .slug,.name&#39;</pre>


<p>EC2 と違って Droplet が存在しているだけで課金対象になるので用が済んだらすぐに</p>

<pre class="code" data-lang="" data-unlink>vagrant destroy -f</pre>


<h2>References</h2>

<ol>
<li><a href="http://blog.glidenote.com/blog/2013/12/05/digital-ocean-with-vagrant/">VagrantとSSDなVPS(Digital Ocean)で1時間1円の使い捨て高速サーバ環境を構築する - Glide Note - グライドノート</a></li>
<li><a href="http://momijiame.tumblr.com/post/51299899637/jq">jq コマンドが強力すぎてヤバい件 | CUBE SUGAR STORAGE</a></li>
<li><a href="https://developers.digitalocean.com/#regions">DigitalOcean API</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: vagrant-digitalocean で vagrant up すると NoMethodError となる件
BASENAME: 2014/08/31/224102
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/31/2014 22:41:02
CATEGORY: Vagrant
CATEGORY: DigitalOcean
-----
BODY:
<p>以下の様なエラーとなります。</p>

<pre class="code" data-lang="" data-unlink>% vagrant up --provider=digital_ocean
Bringing machine &#39;default&#39; up with &#39;digital_ocean&#39; provider...
==&gt; default: Using existing SSH key: Vagrant
==&gt; default: Creating a new droplet...
/Users/wnoguchi/.vagrant.d/gems/gems/vagrant-digitalocean-0.6.2/lib/vagrant-digitalocean/actions/create.rb:37:in `call&#39;: undefined method `first&#39; for nil:NilClass (NoMethodError)
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Users/wnoguchi/.vagrant.d/gems/gems/vagrant-digitalocean-0.6.2/lib/vagrant-digitalocean/actions/setup_key.rb:33:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:95:in `block in finalize_action&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/builder.rb:116:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/runner.rb:66:in `block in run&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/util/busy.rb:19:in `busy&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/runner.rb:66:in `run&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/builtin/call.rb:53:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/builtin/config_validate.rb:25:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/warden.rb:34:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/builder.rb:116:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/runner.rb:66:in `block in run&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/util/busy.rb:19:in `busy&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/action/runner.rb:66:in `run&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/machine.rb:196:in `action_raw&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/machine.rb:173:in `block in action&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/environment.rb:434:in `lock&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/machine.rb:161:in `call&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/machine.rb:161:in `action&#39;
    from /Applications/Vagrant/embedded/gems/gems/vagrant-1.6.3/lib/vagrant/batch_action.rb:82:in `block (2 levels) in run&#39;</pre>


<p>DigitalOcean <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a> V2 は Public Beta なので仕様が変わったためのようです。</p>

<blockquote><p>Public Beta
Due to the large number of changes to <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a> v2 we have decided to release it as a beta to collect user feedback. Please note that >during this period based on user feedback we may make some large changes which may break compatibility.</p></blockquote>

<p><a href="https://developers.digitalocean.com/#introduction">DigitalOcean API</a></p>

<p>このあたりは以下の Issue とプルリクで修正方法が確立されているので早く本家にマージされてほしいです。</p>

<ul>
<li><a href="https://github.com/smdahlen/vagrant-digitalocean/issues/150">vagrant-digitalocean/actions/create.rb:37:in <code>call': undefined method</code>first' for nil:NilClass (NoMethodError) · Issue #150 · smdahlen/vagrant-digitalocean</a></li>
<li><a href="https://github.com/smdahlen/vagrant-digitalocean/pull/151">Update create.rb by nwertzberger · Pull Request #151 · smdahlen/vagrant-digitalocean</a></li>
</ul>


<p>とりあえずなんとかしたい方は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C2%D0%BD%E8%CE%C5%CB%A1">対処療法</a>的には</p>

<p><code>~/.vagrant.d/gems/gems/vagrant-digitalocean-0.6.2/lib/vagrant-digitalocean/actions/create.rb</code></p>

<p>の 37 行目を</p>

<pre class="code lang-ruby" data-lang="ruby" data-unlink>          <span class="synIdentifier">@client</span>.wait_for_event(env, result[<span class="synSpecial">'</span><span class="synConstant">droplet</span><span class="synSpecial">'</span>][<span class="synSpecial">'</span><span class="synConstant">action_ids</span><span class="synSpecial">'</span>].first)
<span class="synComment"># ↓</span>
          <span class="synIdentifier">@client</span>.wait_for_event(env, result[<span class="synSpecial">'</span><span class="synConstant">links</span><span class="synSpecial">'</span>][<span class="synSpecial">'</span><span class="synConstant">actions</span><span class="synSpecial">'</span>].first[<span class="synSpecial">'</span><span class="synConstant">id</span><span class="synSpecial">'</span>])
</pre>


<p>とすればいいです。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Vagrant AWS Provider を使ってみた
BASENAME: 2014/08/27/083426
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/27/2014 08:34:26
CATEGORY: Vagrant
CATEGORY: AWS
-----
BODY:
<p>まずはダミーの box イメージをインポートする。</p>

<pre class="code" data-lang="" data-unlink>vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box</pre>


<p>そして次のような Vagrantfile を書く。<br/>
前提条件は以下。</p>

<ul>
<li>IAMで予めEC2にアクセスを制限したユーザのクレデンシャルを払いだしておくこと</li>
<li>使用するキーペアの名前は <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a></li>
<li>起動する<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>タイプは t2.micro （デフォルトだと m3.medium で起動してしまう）</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> 用のセキュリティグループを定義してそれを使用</li>
<li>東京リージョンを指定(ap-northeast-1)</li>
<li>起動する AMI は <a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> AMI 2014.03.2 (HVM) (ami-29dc9228)</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a> ユーザ名は ec2-user</li>
<li>対応する<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>の場所を指定する。</li>
</ul>


<pre class="code lang-ruby" data-lang="ruby" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synType">Vagrant</span>.configure(<span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">dummy</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synConstant">:aws</span> <span class="synStatement">do</span> |<span class="synIdentifier">aws</span>, <span class="synIdentifier">override</span>|
    aws.access_key_id = <span class="synSpecial">&quot;&quot;</span>
    aws.secret_access_key = <span class="synSpecial">&quot;&quot;</span>
    aws.keypair_name = <span class="synSpecial">&quot;</span><span class="synConstant">vagrant</span><span class="synSpecial">&quot;</span>

    aws.instance_type = <span class="synSpecial">&quot;</span><span class="synConstant">t2.micro</span><span class="synSpecial">&quot;</span>
    aws.security_groups = [ <span class="synSpecial">&quot;</span><span class="synConstant">vagrant</span><span class="synSpecial">&quot;</span> ]

    aws.region = <span class="synSpecial">&quot;</span><span class="synConstant">ap-northeast-1</span><span class="synSpecial">&quot;</span>
    <span class="synComment"># Amazon Linux AMI 2014.03.2 (HVM)</span>
    aws.ami = <span class="synSpecial">&quot;</span><span class="synConstant">ami-29dc9228</span><span class="synSpecial">&quot;</span>

    override.ssh.username = <span class="synSpecial">&quot;</span><span class="synConstant">ec2-user</span><span class="synSpecial">&quot;</span>
    override.ssh.private_key_path = <span class="synSpecial">&quot;</span><span class="synConstant">~/.ssh/aws-ec2-vagrant.pem</span><span class="synSpecial">&quot;</span>
  <span class="synStatement">end</span>
<span class="synStatement">end</span>
</pre>


<p>そして</p>

<pre class="code" data-lang="" data-unlink>vagrant up --provider=aws</pre>


<p>以下の様なエラーが出るが、ここでは気にしない。</p>

<pre class="code" data-lang="" data-unlink>==&gt; default: Rsyncing folder: /Users/wnoguchi/Documents/tmp/vagrant-ec2/ =&gt; /vagrant
The following SSH command responded with a non-zero exit status.
Vagrant assumes that this means the command failed!

mkdir -p &#39;/vagrant&#39;

Stdout from the command:



Stderr from the command:

sudo: sorry, you must have a tty to run sudo</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>知らなくても<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>できる。</p>

<pre class="code" data-lang="" data-unlink>vagrant ssh</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B0%A5%ED%A1%BC%A5%D0%A5%EBIP">グローバルIP</a>が知りたければ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%A5%C7%A1%BC%A5%BF">メタデータ</a>を <a class="keyword" href="http://d.hatena.ne.jp/keyword/curl">curl</a> で取得する。</p>

<pre class="code" data-lang="" data-unlink>[ec2-user@ip-172-31-25-90 ~]$ curl -w &#34;\n&#34; http://169.254.169.254/latest/meta-data/public-hostname
ec2-54-64-60-151.ap-northeast-1.compute.amazonaws.com
[ec2-user@ip-172-31-25-90 ~]$ curl -w &#34;\n&#34; http://169.254.169.254/latest/meta-data/public-ipv4
54.64.60.151</pre>


<p>あとは nginx 入れるなりなんなりして実験して、用が済んだら</p>

<pre class="code" data-lang="" data-unlink>vagrant halt</pre>


<p>か潔く</p>

<pre class="code" data-lang="" data-unlink>vagrant destroy -f</pre>


<h2>References</h2>

<ol>
<li><a href="https://github.com/mitchellh/vagrant-aws">mitchellh/vagrant-aws</a></li>
<li><a href="http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html">インスタンスメタデータとユーザーデータ - Amazon Elastic Compute Cloud</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: CentOS 6.5 に MySQL 5.6 をインストールする
BASENAME: 2014/08/24/094934
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/24/2014 09:49:34
CATEGORY: MySQL
CATEGORY: CentOS
CATEGORY: Linux
-----
BODY:
<p>けっこう雑です。</p>

<pre class="code" data-lang="" data-unlink>sudo rpm -ivh http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
sudo yum -y install mysql-community-server
sudo service mysqld start
sudo chkconfig mysqld on</pre>


<p>以下、開発用の設定。</p>

<pre class="code" data-lang="" data-unlink>$ sudo mysql_secure_installation



NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MySQL
      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!

In order to log into MySQL to secure it, we&#39;ll need the current
password for the root user.  If you&#39;ve just installed MySQL, and
you haven&#39;t set the root password yet, the password will be blank,
so you should just press enter here.

Enter current password for root (enter for none):
OK, successfully used password, moving on...

Setting the root password ensures that nobody can log into the MySQL
root user without the proper authorisation.

Set root password? [Y/n]
New password: ← rootパスワードをキーイン
Re-enter new password: ← rootパスワードをキーイン
Password updated successfully!
Reloading privilege tables..
 ... Success!


By default, a MySQL installation has an anonymous user, allowing anyone
to log into MySQL without having to have a user account created for
them.  This is intended only for testing, and to make the installation
go a bit smoother.  You should remove them before moving into a
production environment.

Remove anonymous users? [Y/n]
 ... Success!

Normally, root should only be allowed to connect from &#39;localhost&#39;.  This
ensures that someone cannot guess at the root password from the network.

Disallow root login remotely? [Y/n] n ← リモートからの root ログインを許可しないようにしない
 ... skipping.

By default, MySQL comes with a database named &#39;test&#39; that anyone can
access.  This is also intended only for testing, and should be removed
before moving into a production environment.

Remove test database and access to it? [Y/n]
 - Dropping test database...
ERROR 1008 (HY000) at line 1: Can&#39;t drop database &#39;test&#39;; database doesn&#39;t exist
 ... Failed!  Not critical, keep moving...
 - Removing privileges on test database...
 ... Success!

Reloading the privilege tables will ensure that all changes made so far
will take effect immediately.

Reload privilege tables now? [Y/n]
 ... Success!




All done!  If you&#39;ve completed all of the above steps, your MySQL
installation should now be secure.

Thanks for using MySQL!


Cleaning up...</pre>


<p>あとは <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> で立ち上げた時にホストマシンからアクセスできるように権限設定する。</p>

<pre class="code" data-lang="" data-unlink>mysql -u root -pvagrant -e &#34;grant all privileges on *.* to &#39;root&#39;@&#39;127.0.0.1&#39; identified by &#39;vagrant&#39; with grant option&#34;
mysql -u root -pvagrant -e &#34;grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;vagrant&#39; with grant option&#34;
mysql -u root -pvagrant -e &#34;flush privileges&#34;</pre>


<p>おわり。</p>

<h2>References</h2>

<ol>
<li><a href="http://dev.mysql.com/downloads/repo/yum/">MySQL :: Download MySQL Yum Repository</a></li>
<li><a href="http://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/">MySQL :: A Quick Guide to Using the MySQL Yum Repository</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS X の tmux でクリップボードを使えるようにした（pbcopyとか）
BASENAME: 2014/08/22/200000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/22/2014 20:00:00
CATEGORY: tmux
CATEGORY: Mac
-----
BODY:
<p>いい加減 tmux で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%EA%A5%C3%A5%D7%A5%DC%A1%BC%A5%C9">クリップボード</a>使えないのはつらくなってきた。<br/>
gist コマンドでも <code>-c</code> オプションで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%EA%A5%C3%A5%D7%A5%DC%A1%BC%A5%C9">クリップボード</a>にコピーできないし。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% gist -c -u d3a3efa1a45eca669574 ~/.tmux.conf
Error: Copying to clipboard failed.
If you<span class="synConstant">'re running tmux on a mac, try http://robots.thoughtbot.com/post/19398560514/how-to-copy-and-paste-with-tmux-on-mac-os-x</span>
<span class="synConstant">Attempted to copy: https://gist.github.com/d3a3efa1a45eca669574</span>
</pre>


<p>pbcopy も使えないしホント困る。<br/>
Homebrew でインストールできるらしい。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% brew info reattach-to-user-namespace
reattach-to-user-namespace: stable <span class="synConstant">2.3</span>, HEAD
https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
Not installed
From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/reattach-to-user-namespace.rb
==<span class="synStatement">&gt;</span> Options
--wrap-launchctl
    Include wrapper <span class="synStatement">for</span> launchctl with this fix
--wrap-pbcopy-and-pbpaste
    Include wrappers <span class="synStatement">for</span> pbcopy/pbpaste that shim <span class="synStatement">in</span> this fix
--HEAD
    install HEAD version
</pre>


<p>なんかオプションはいらない気がする。<br/>
気軽にインストール。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>brew install reattach-to-user-namespace
</pre>


<p><code>~/.tmux.conf</code> の最後に以下を記述した。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a> じゃない人は適宜読み替えてね。</p>

<pre class="code lang-conf" data-lang="conf" data-unlink><span class="synComment"># Mac Specific Settings:</span>
<span class="synComment">#-------------------------------------------------------------------</span>
set-option -g default-command <span class="synConstant">&quot;reattach-to-user-namespace -l zsh&quot;</span>

<span class="synComment"># Use vim keybindings in copy mode</span>
setw -g mode-keys vi

<span class="synComment"># Setup 'v' to begin selection as in Vim</span>
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe <span class="synConstant">&quot;reattach-to-user-namespace pbcopy&quot;</span>

<span class="synComment"># Update default binding of `Enter` to also use copy-pipe</span>
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe <span class="synConstant">&quot;reattach-to-user-namespace pbcopy&quot;</span>
<span class="synComment">#-------------------------------------------------------------------</span>
</pre>


<p>pbcopyはもちろんのこと、キー<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%A4%A5%F3%A5%C7%A5%A3%A5%F3%A5%B0">バインディング</a>も vi になったし、tmux の copy モードで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%EA%A5%C3%A5%D7%A5%DC%A1%BC%A5%C9">クリップボード</a>にコピーできて、脳みそとけちゃいそうです。</p>

<p><code>.tmux.conf</code> の Gist 更新しとこ。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% gist -c -u d3a3efa1a45eca669574 ~/.tmux.conf
https://gist.github.com/d3a3efa1a45eca669574
</pre>


<h2>References</h2>

<ol>
<li><a href="http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future">tmux Copy &amp; Paste on OS X: A Better Future</a></li>
<li><a href="https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard">ChrisJohnsen/tmux-MacOSX-pasteboard</a></li>
<li><a href="http://qiita.com/upinetree/items/cd80bc7865c52091be10">tmuxとMacのクリップボードを共有する（copy-mode, vim） - Qiita</a></li>
<li><a href="http://inokara.hateblo.jp/entry/2014/01/02/051744">tmux のコピーモードを使ってみる〜 Mac 編 〜 - ようへいの日々精進 XP</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac に Homebrew でクリップボード共有機能搭載版の vim をインストールする
BASENAME: 2014/08/22/081215
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/22/2014 08:12:15
CATEGORY: Mac
CATEGORY: vim
CATEGORY: Homebrew
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a> 標準搭載の現行のバージョンはこう。</p>

<pre class="code" data-lang="" data-unlink>% vim --version
VIM - Vi IMproved 7.3 (2010 Aug 15, compiled Dec 19 2013 15:19:49)
Compiled by root@apple.com
Normal version without GUI.  Features included (+) or not (-):</pre>


<p>そして有効になっていない。</p>

<pre class="code" data-lang="" data-unlink>% /usr/bin/vim --version | grep clipboard
-clientserver -clipboard +cmdline_compl +cmdline_hist +cmdline_info +comments
 -xterm_clipboard -xterm_save</pre>


<p>Homebrew で入れよう。</p>

<pre class="code" data-lang="" data-unlink>brew update
brew install vim</pre>


<p>ついでに gist コマンドが更新されていたので <code>brew upgrade gist</code> しといた。 <code>gist -l</code> 便利。</p>

<p>端末を立ち上げ直す。<br/>
ただし <code>/etc/paths</code> をいじってあるのが前提。</p>

<pre class="code" data-lang="" data-unlink>% vim --version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Aug 22 2014 07:37:47)
MacOS X (unix) version
Included patches: 1-335
Compiled by Homebrew
Huge version without GUI.  Features included (+) or not (-):</pre>


<p>有効になってるか確認。</p>

<pre class="code" data-lang="" data-unlink>% vim --version | grep clipboard
+clipboard       +iconv           +path_extra      -toolbar
+eval            +mouse_dec       +startuptime     -xterm_clipboard</pre>


<p><code>~/.vimrc</code> に以下の記述を追加。</p>

<pre class="code lang-vim" data-lang="vim" data-unlink><span class="synStatement">set</span> <span class="synPreProc">clipboard</span>+=unnamed
</pre>


<p>OK!</p>

<h2>後日談（重要）</h2>

<p>いつのまにか delete キーが効かなくなってたことに気づいた・・・。<br/>
すげー焦った。自前で <code>set backspace</code> しないといけないらしい。</p>

<pre class="code lang-vim" data-lang="vim" data-unlink><span class="synStatement">set</span> <span class="synPreProc">backspace</span>=indent<span class="synStatement">,</span>eol<span class="synStatement">,</span>start
</pre>


<h2>References</h2>

<ol>
<li><a href="http://qiita.com/shoma2da/items/92ea8badcd4655b6106c">MacのVimでHomebrewを使ってクリップボード連携を有効にする - Qiita</a></li>
<li><a href="http://d.hatena.ne.jp/trashsuite/20090107/1231307797">インサートモード時にバックスペースが効かないのに気づいた - TrashSUITE</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 非常に今更ながらGitHubでSVNHubを使ってみた
BASENAME: 2014/08/20/234555-work-with-svnhub-through-github
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/20/2014 23:45:55
CATEGORY: GitHub
CATEGORY: SVNHub
CATEGORY: ジョーク
CATEGORY: SVN
CATEGORY: Git
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233110.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a> があるぐらいだから SVNHub なんてのもあるんじゃないかと思って探してみたら、ありました。</p>

<p><a href="http://svnhub.com/">SVNHub</a><a href="http://b.hatena.ne.jp/entry/http://svnhub.com/" class="http-bookmark"><img src="//b.hatena.ne.jp/entry/image/http://svnhub.com/" alt="" class="http-bookmark" /></a></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233110.png" alt="f:id:wnoguchi0727:20140820233110p:plain" title="f:id:wnoguchi0727:20140820233110p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>2013年ぐらいに最初ここを見た時はジョークサイトで、SVNHubなんてものがないか探してきた人に対して「そんなことよりGit使おうぜ！！」って言ってるだけかと思ったんだけど、今になって何を思ったか、またSVNHubでぐぐって再度ここに訪れてみてよくよく見ると違った。<br/>
リンク先のエントリを見ると意外とまじめにSVNHubとしての機能が実装されているようで、<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>が<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>クライアントの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%C8%A5%B3%A5%EB">プロトコル</a>をうまい具合にハンドリングしてくれるようだ。<br/>
しかも記事の書かれた時期が2010年とか書いてあるから4年も前から実装されてるのね、これ。</p>

<ol>
<li><a href="https://github.com/blog/626-announcing-svn-support">Announcing SVN Support</a></li>
<li><a href="https://github.com/blog/966-improved-subversion-client-support">Improved Subversion Client Support</a></li>
</ol>


<p>暇なやつだなって思われるかもしれないですが、実際に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>作ってやってみました。</p>

<h2>もろもろの情報</h2>

<p>使った <a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a> のクライアントのバージョンは</p>

<pre class="code" data-lang="" data-unlink>% svn --version
svn, version 1.7.14 (r1542130)
   compiled Aug 19 2014, 23:56:41</pre>


<p>です。</p>

<p>使った<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>は以下。</p>

<p><a href="https://github.com/wnoguchi/svnhub_test">wnoguchi/svnhub_test</a></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>でチェックアウトするときのURL</h3>

<p>Gitでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>をクローンするURLは</p>

<pre class="code" data-lang="" data-unlink>https://github.com/wnoguchi/svnhub_test.git
git@github.com:wnoguchi/svnhub_test.git</pre>


<p>な感じになるけど、<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>では</p>

<pre class="code" data-lang="" data-unlink>svn co https://github.com/wnoguchi/svnhub_test/trunk svnhub_test</pre>


<p>な感じになる。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/svn">svn</a>+<a class="keyword" href="http://d.hatena.ne.jp/keyword/ssh">ssh</a> で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>で認証してコミットできたほうが僕は好きなんだけど、これはサポートされていないみたいだ。</p>

<pre class="code" data-lang="" data-unlink>svn co svn+ssh://git@github.com/wnoguchi/svnhub_test</pre>


<h2>使ってみた</h2>

<h3>チェックアウト</h3>

<pre class="code" data-lang="" data-unlink>% svn co https://github.com/wnoguchi/svnhub_test/trunk svnhub_test
A    svnhub_test/LICENSE
A    svnhub_test/README.md
Checked out revision 1.</pre>


<h3>コミット</h3>

<p>次の内容で変更したとする。</p>

<pre class="code lang-diff" data-lang="diff" data-unlink>% svn diff
<span class="synType">Index: README.md</span>
===================================================================
<span class="synType">--- README.md (revision 1)</span>
<span class="synType">+++ README.md (working copy)</span>
<span class="synStatement">@@ -1,4 +1,13 @@</span>
<span class="synSpecial">-svnhub_test</span>
<span class="synSpecial">-===========</span>
<span class="synIdentifier">+SVNHub Test</span>
<span class="synIdentifier">+===============</span>

<span class="synSpecial">-SVNHub Test Repository.</span>
<span class="synIdentifier">+SVNHub Test Repository.</span>
<span class="synIdentifier">+SVNHub のテストです。</span>
<span class="synIdentifier">+aaaaaaaaaaaaaaaaaaaaaa.</span>
<span class="synIdentifier">+bbbbbbbbbbbbbbbbbbbbbb.</span>
<span class="synIdentifier">+cccccccccccccccccccccc.</span>
<span class="synIdentifier">+dddddddddddddddddddddd.</span>
<span class="synIdentifier">+eeeeeeeeeeeeeeeeeeeeee.</span>
<span class="synIdentifier">+ffffffffffffffffffffff.</span>
<span class="synIdentifier">+gggggggggggggggggggggg.</span>
<span class="synIdentifier">+</span>
</pre>


<p>ここで2段階認証等を設定している場合は設定であらかじめ<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>クライアント用に認証トークンを払いだしてそれをパスワードとして与えないといけないので注意。</p>

<pre class="code" data-lang="" data-unlink>% svn commit
Authentication realm: &lt;https://github.com:443&gt; GitHub
Username: wnoguchi
Password for &#39;wnoguchi&#39;:
Sending        README.md
Transmitting file data .
Committed revision 2.</pre>


<p>コミットできてるか確認する。</p>

<pre class="code" data-lang="" data-unlink>% svn update
Updating &#39;.&#39;:
At revision 2.
% svn log
------------------------------------------------------------------------
r2 | wataru.noguchi | 2014-08-20 22:20:52 +0900 (水, 20  8 2014) | 2 lines

Update README.

------------------------------------------------------------------------
r1 | wataru.noguchi | 2014-08-20 22:15:42 +0900 (水, 20  8 2014) | 2 lines

Initial commit

------------------------------------------------------------------------</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>上で確認するとちゃんとコミットが送信されていることがわかる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233111.png" alt="f:id:wnoguchi0727:20140820233111p:plain" title="f:id:wnoguchi0727:20140820233111p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>空ディレクトリを追加しようとしたらどうなるか</h3>

<pre class="code" data-lang="" data-unlink>% mkdir testdir
% svn add testdir
A         testdir
% svn commit
Adding         testdir
svn: E160024: Commit failed (details follow):
svn: E160024: Empty directories are not supported: trunk/testdir
svn: E160024: Your commit message was left in a temporary file:
svn: E160024:    &#39;/Users/wnoguchi/Documents/tmp/svnhub_test/svn-commit.tmp&#39;</pre>


<p>そんなものはサポートされてねーって怒られました。<br/>
ですよねー。</p>

<p>じゃあGitの定石にしたがって <code>.gitkeep</code> を作成して追加してみる。</p>

<pre class="code" data-lang="" data-unlink>% touch testdir/.gitkeep
% svn add testdir/.gitkeep
A         testdir/.gitkeep
% svn commit -F svn-commit.tmp
Adding         testdir
Adding         testdir/.gitkeep
Transmitting file data .
Committed revision 3.</pre>


<p>いけたいけた。<br/>
ログ確認。</p>

<pre class="code" data-lang="" data-unlink>% svn log
------------------------------------------------------------------------
r3 | wataru.noguchi | 2014-08-20 22:25:53 +0900 (水, 20  8 2014) | 2 lines

Add blank directory.

------------------------------------------------------------------------
r2 | wataru.noguchi | 2014-08-20 22:20:52 +0900 (水, 20  8 2014) | 2 lines

Update README.

------------------------------------------------------------------------
r1 | wataru.noguchi | 2014-08-20 22:15:42 +0900 (水, 20  8 2014) | 2 lines

Initial commit

------------------------------------------------------------------------</pre>


<h3>ほんとにできてんの？</h3>

<p>これほんとに<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>を中央<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>として見て毎回ちゃんとデータ見に行ってるの？って疑問がわいたのでネットワーク接続を切ってみました。<br/>
これでログを確認してみます。</p>

<pre class="code" data-lang="" data-unlink>% svn log
svn: E175002: Unable to connect to a repository at URL &#39;https://github.com/wnoguchi/svnhub_test/trunk&#39;
svn: E175002: OPTIONS of &#39;https://github.com/wnoguchi/svnhub_test/trunk&#39;: Could not resolve hostname `github.com&#39;: Host not found (https://github.com)</pre>


<p>失敗した。想定通り。</p>

<h3>ブランチを切る</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>ではSVNHubとしての機能を実装するにあたって<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>の標準的な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>レイアウトを採用しているようです。<br/>
つまり</p>

<ul>
<li>trunk: origin/master相当</li>
<li>branches: ブランチはここに格納される</li>
<li>tags: タグはここに格納される</li>
</ul>


<p>という対応となっている。</p>

<p>ということでブランチを作成してみる。ここでは test というブランチを作成。</p>

<pre class="code" data-lang="" data-unlink>% svn cp https://github.com/wnoguchi/svnhub_test/trunk https://github.com/wnoguchi/svnhub_test/branches/test

Committed revision 5.</pre>


<p>ただ<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>でブランチを切るにはコミットメッセージの入力が必要です。<br/>
適当にコミットメッセージを入力してコミット。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>上で見るとブランチが作成されています。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233112.png" alt="f:id:wnoguchi0727:20140820233112p:plain" title="f:id:wnoguchi0727:20140820233112p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>そしてさっきのコミットメッセージを入れた空コミットが作成されているようでした。<br/>
こんなコミット作れるのか・・・。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233113.png" alt="f:id:wnoguchi0727:20140820233113p:plain" title="f:id:wnoguchi0727:20140820233113p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>マージしてみる</h3>

<p>今度はマージを試してみます。</p>

<p>まずはtrunk上でコミット。</p>

<pre class="code lang-diff" data-lang="diff" data-unlink>% svn diff
<span class="synType">Index: README.md</span>
===================================================================
<span class="synType">--- README.md (revision 3)</span>
<span class="synType">+++ README.md (working copy)</span>
<span class="synStatement">@@ -9,5 +9,6 @@</span>
 dddddddddddddddddddddd.
 eeeeeeeeeeeeeeeeeeeeee.
 ffffffffffffffffffffff.
<span class="synIdentifier">+chage of trunk.</span>
 gggggggggggggggggggggg.
</pre>




<pre class="code" data-lang="" data-unlink>% svn commit
Sending        README.md
Transmitting file data .
Committed revision 6.</pre>


<p>次は先ほどの test ブランチに切り替えてコミットします。</p>

<pre class="code" data-lang="" data-unlink>% svn sw https://github.com/wnoguchi/svnhub_test/branches/test
U    LICENSE
U    README.md
U    testdir/.gitkeep
Updated to revision 6.
% svn log
------------------------------------------------------------------------
r5 | wataru.noguchi | 2014-08-20 22:27:16 +0900 (水, 20  8 2014) | 2 lines

Create branch: test

------------------------------------------------------------------------
r4 | wataru.noguchi | 2014-08-20 22:25:53 +0900 (水, 20  8 2014) | 2 lines

Add blank directory.

------------------------------------------------------------------------</pre>


<p>次のような変更を加えました。</p>

<pre class="code" data-lang="" data-unlink>% svn diff
Index: README.md
===================================================================
--- README.md   (revision 6)
+++ README.md   (working copy)
@@ -3,6 +3,8 @@

 SVNHub Test Repository.
 SVNHub のテストです。
+ああああああ
+いいいいいい
 aaaaaaaaaaaaaaaaaaaaaa.
 bbbbbbbbbbbbbbbbbbbbbb.
 cccccccccccccccccccccc.</pre>


<p>コミット。</p>

<pre class="code" data-lang="" data-unlink>% svn commit
Sending        README.md
Transmitting file data .
Committed revision 7.</pre>


<p>ログを見る。</p>

<pre class="code" data-lang="" data-unlink>% svn log --stop-on-copy
------------------------------------------------------------------------
r7 | wataru.noguchi | 2014-08-20 22:35:28 +0900 (水, 20  8 2014) | 2 lines

Update README on test branch.

------------------------------------------------------------------------
r5 | wataru.noguchi | 2014-08-20 22:27:16 +0900 (水, 20  8 2014) | 2 lines

Create branch: test

------------------------------------------------------------------------
r4 | wataru.noguchi | 2014-08-20 22:25:53 +0900 (水, 20  8 2014) | 2 lines

Add blank directory.

------------------------------------------------------------------------</pre>


<p>ここで<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>上のそれぞれのブランチの様子を見てみる。</p>

<ul>
<li>trunk の様子</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233114.png" alt="f:id:wnoguchi0727:20140820233114p:plain" title="f:id:wnoguchi0727:20140820233114p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>test ブランチの様子</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820234459.png" alt="f:id:wnoguchi0727:20140820234459p:plain" title="f:id:wnoguchi0727:20140820234459p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>これをマージする。<br/>
まずは trunk に切り替え。</p>

<pre class="code" data-lang="" data-unlink>% svn sw https://github.com/wnoguchi/svnhub_test/trunk
U    LICENSE
U    README.md
U    testdir/.gitkeep
Updated to revision 7.</pre>


<p>マージする。</p>

<pre class="code" data-lang="" data-unlink>% svn merge -r 4:HEAD https://github.com/wnoguchi/svnhub_test/branches/test
--- Merging r5 through r7 into &#39;.&#39;:
U    README.md</pre>


<p>マージに成功したのでコミット。</p>

<pre class="code" data-lang="" data-unlink>% svn status
M       README.md
% svn commit
Sending        README.md
Transmitting file data .
Committed revision 8.</pre>


<h3>タグ付けする</h3>

<p>最後にタグ付けして完了だ。</p>

<pre class="code" data-lang="" data-unlink>svn copy https://github.com/wnoguchi/svnhub_test/trunk https://github.com/wnoguchi/svnhub_test/tags/v1.0</pre>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140820/20140820233116.png" alt="f:id:wnoguchi0727:20140820233116p:plain" title="f:id:wnoguchi0727:20140820233116p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>できた。<br/>
どうやらタグ付けの際にコミットメッセージを入力するけど、このメッセージは無視されるみたいだ。</p>

<h2>まとめ</h2>

<p>とりあえず<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>上でもひととおりの<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a>操作はできることがわかりました。<br/>
すごいね・・・。<br/>
ただ、試してないけどさすがに <a class="keyword" href="http://d.hatena.ne.jp/keyword/svn">svn</a> propedit とかで <a class="keyword" href="http://d.hatena.ne.jp/keyword/svn">svn</a>:ignore をセットするのとかは<a class="keyword" href="http://d.hatena.ne.jp/keyword/SVN">SVN</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%A5%C7%A1%BC%A5%BF">メタデータ</a>レベルの処理なので無理なんじゃないかな・・・。</p>

<p>当然だけど Git <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>としてクローンすることは普通にできる。</p>

<pre class="code" data-lang="" data-unlink>% git clone git@github.com:wnoguchi/svnhub_test.git svnhub_test_git
Cloning into &#39;svnhub_test_git&#39;...
remote: Counting objects: 24, done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 24 (delta 6), reused 16 (delta 2)
Receiving objects: 100% (24/24), done.
Resolving deltas: 100% (6/6), done.
Checking connectivity... done.
% git log
commit 808c1703ac1af2eee14152817f569a27c5b872e0
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:50:42 2014 +0900

    Add Scala sample.

commit c70b6295ce45f4b822455a01a447c9a112794ecb
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:38:49 2014 +0900

    Merge test branch.

commit 37587c2e9e166dcb751f91db6a45cca86ffe8f55
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:32:18 2014 +0900

    Update README on trunk.

commit 52d1556cdd28c52efbdd7d5f341980678870dbba
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:25:53 2014 +0900

    Add blank directory.

commit cc0240711aeae832546b8d4fdd2d5545976ad723
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:20:52 2014 +0900

    Update README.

commit a349debc3aba2374c8cdd37ea6901fa02e93ab39
Author: Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;
Date:   Wed Aug 20 22:15:42 2014 +0900

    Initial commit
% git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/test
% git tag
v1.0</pre>


<p>まあ、特に理由がなければ Git 使いましょう。<br/>
いじょ。</p>

<h2>入門者の本</h2>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/427406767X/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/41k7xonwpdL._SL160_.jpg" class="hatena-asin-detail-image" alt="入門git" title="入門git"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/427406767X/blogpg1xcom01-22/">入門git</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Travis">Travis</a> Swicegood,でびあんぐる</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%E0%BC%D2">オーム社</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2009/08/12</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><span class="hatena-asin-detail-label">購入</span>: 25人 <span class="hatena-asin-detail-label">クリック</span>: 305回</li><li><a href="http://d.hatena.ne.jp/asin/427406767X/blogpg1xcom01-22" target="_blank">この商品を含むブログ (103件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4274066800/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51CaMHjJPSL._SL160_.jpg" class="hatena-asin-detail-image" alt="Subversion実践入門:達人プログラマに学ぶバージョン管理(第2版)" title="Subversion実践入門:達人プログラマに学ぶバージョン管理(第2版)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4274066800/blogpg1xcom01-22/">Subversion実践入門:達人プログラマに学ぶバージョン管理(第2版)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> Mike Mason,でびあんぐる</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%E0%BC%D2">オーム社</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2007/04/21</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><span class="hatena-asin-detail-label">購入</span>: 35人 <span class="hatena-asin-detail-label">クリック</span>: 672回</li><li><a href="http://d.hatena.ne.jp/asin/4274066800/blogpg1xcom01-22" target="_blank">この商品を含むブログ (103件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<h2>References</h2>

<ol>
<li><a href="http://svnhub.com/">SVNHub</a></li>
<li><a href="https://github.com/blog/966-improved-subversion-client-support">Improved Subversion Client Support</a></li>
<li><a href="https://github.com/blog/626-announcing-svn-support">Announcing SVN Support</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: HomebrewでUTF-8-MAC問題を解決したSubversionをインストールする（1.7系、非1.8系）
BASENAME: 2014/08/20/000047
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/20/2014 00:00:47
CATEGORY: SVN
CATEGORY: Homebrew
CATEGORY: UTF-8-MAC
CATEGORY: Mac
-----
BODY:
<p>現時点でHomebrewで提供されている最新バージョンの<a class="keyword" href="http://d.hatena.ne.jp/keyword/Subversion">Subversion</a> 1.8.10は<a class="keyword" href="http://d.hatena.ne.jp/keyword/UTF-8">UTF-8</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/MAC">MAC</a>問題を解決する <code>--unicode</code> オプションに対応していない。<br/>
なので 1.7 系をインストールする。</p>

<pre class="code" data-lang="" data-unlink>% brew info svn
subversion: stable 1.8.10 (bottled)
https://subversion.apache.org/
Not installed
From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/subversion.rb
==&gt; Dependencies
Build: pkg-config ✔, autoconf ✔, automake ✔, libtool ✘, scons ✘
Required: sqlite ✘, openssl ✘
==&gt; Options
--java
        Build Java bindings
--perl
        Build Perl bindings
--ruby
        Build Ruby bindings
--universal
        Build a universal binary
--with-python
        Build with python support
==&gt; Caveats
svntools have been installed to:
  /usr/local/opt/subversion/libexec</pre>


<ul>
<li>まずは<a class="keyword" href="http://d.hatena.ne.jp/keyword/svn">svn</a>コマンドのロケーションを確認する。<br/>
また、事前に <code>/etc/paths</code> の <code>/usr/local/bin</code> が優先的に設定されていることを確認しておく。</li>
</ul>


<pre class="code" data-lang="" data-unlink>% which svn
/usr/bin/svn</pre>


<ul>
<li>過去バージョン関連の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>を<a class="keyword" href="http://d.hatena.ne.jp/keyword/brew">brew</a>に追加する。</li>
</ul>


<pre class="code" data-lang="" data-unlink>brew tap homebrew/versions</pre>


<ul>
<li>インストールするものが <code>--unicode-path</code> オプションが有効であることを確認する。</li>
</ul>


<pre class="code" data-lang="" data-unlink>% brew info subversion17
subversion17: stable 1.7.14
http://subversion.apache.org/
Not installed
From: https://github.com/homebrew/homebrew-versions/blob/master/subversion17.rb
==&gt; Dependencies
Build: pkg-config ✔, scons ✘
Required: neon ✘, sqlite ✘, openssl ✘
==&gt; Options
--java
        Build Java bindings
--perl
        Build Perl bindings
--ruby
        Build Ruby bindings
--unicode-path
        Include support for OS X UTF-8-MAC filename
--universal
        Build a universal binary
--with-python
        Build with python support</pre>


<ul>
<li>よしインストール。</li>
</ul>


<pre class="code" data-lang="" data-unlink>brew install subversion17 --unicode-path</pre>


<ul>
<li>端末を立ち上げ直す。できたかな？</li>
</ul>


<pre class="code" data-lang="" data-unlink>[wnoguchi@noguchiwataru-no-MacBook-Pro] ~
% which svn
/usr/local/bin/svn
[wnoguchi@noguchiwataru-no-MacBook-Pro] ~
% svn --version
svn, version 1.7.14 (r1542130)
   compiled Aug 19 2014, 23:56:41

Copyright (C) 2013 The Apache Software Foundation.
This software consists of contributions made by many people; see the NOTICE
file for more information.
Subversion is open source software, see http://subversion.apache.org/

The following repository access (RA) modules are available:

* ra_neon : Module for accessing a repository via WebDAV protocol using Neon.
  - handles &#39;http&#39; scheme
  - handles &#39;https&#39; scheme
* ra_svn : Module for accessing a repository using the svn network protocol.
  - with Cyrus SASL authentication
  - handles &#39;svn&#39; scheme
* ra_local : Module for accessing a repository on local disk.
  - handles &#39;file&#39; scheme
* ra_serf : Module for accessing a repository via WebDAV protocol using serf.
  - handles &#39;http&#39; scheme
  - handles &#39;https&#39; scheme</pre>


<h2>References</h2>

<ol>
<li><a href="http://d.hatena.ne.jp/namutaka/20140610/1402414437">homebrewでのutf-8-mac対応svnインストール - namutakaの日記</a></li>
<li><a href="http://befool-inc.github.io/blog/2013/09/30/fix-homebrew-subversion17-unicode-patch/">HomebrewでSubversion17をインストールする際のunicode-pathオプションでのエラー対処 - BEFOOL blog</a></li>
<li><a href="http://nobeans.hatenablog.com/entry/20110401/1301634519">Homebrewで日本語ファイル名問題(UTF-8-MAC)にパッチをあてたSubversionをインストールする - 豆無日記</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 僕の iTerm2 + zsh のキーバインド定義
BASENAME: 2014/08/19/232656
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/19/2014 23:26:56
CATEGORY: iTerm2
CATEGORY: zsh
-----
BODY:
<p>iTerm2 で <a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a> を使うにあたって僕は次のように<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%C3%A5%D4%A5%F3%A5%B0">マッピング</a>している。</p>

<ol>
<li>Meta(Alt) + f = option + f<br/>
単語単位で進める</li>
<li>Meta(Alt) + b = option + b<br/>
単語単位で後退</li>
<li>Meta(Alt) + d =  option + d<br/>
前方の単語を削除</li>
</ol>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140819/20140819232225.png" alt="f:id:wnoguchi0727:20140819232225p:plain" title="f:id:wnoguchi0727:20140819232225p:plain" class="hatena-fotolife" itemprop="image"></span></p>


-----
--------
AUTHOR: wnoguchi0727
TITLE: vimでScalaのシンタックスハイライトしたい
BASENAME: 2014/08/13/115730-scala-syntax-highlight-with-vim
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/13/2014 11:57:30
CATEGORY: vim
CATEGORY: NeoBundle
CATEGORY: Scala
CATEGORY: Java
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140813/20140813120323.png
-----
BODY:

<pre class="code" data-lang="" data-unlink>syntax on</pre>


<p>でなるのかと思ってたけど、甘かった。世の中そんなに甘くない。</p>

<p>この前インストールしたNeoBundleの出番ではないか。</p>

<p><a href="https://github.com/derekwyatt/vim-scala">derekwyatt/vim-scala</a></p>

<p>VundleだけどNeoBundleもいけるはず。</p>

<p><code>~/.vimrc</code> に以下を追記。</p>

<pre class="code" data-lang="" data-unlink>&#34;NeoBundle Scripts-----------------------------

&#34;(snip)

NeoBundle &#39;derekwyatt/vim-scala&#39;

&#34;(snip)

&#34;End NeoBundle Scripts-------------------------</pre>


<p>で、インストール。</p>

<pre class="code" data-lang="" data-unlink>:source ~/.vimrc
:NeoBundleInstall</pre>


<p>そしてすでに<a class="keyword" href="http://d.hatena.ne.jp/keyword/Scala">Scala</a>のファイルを開いていたら</p>

<pre class="code" data-lang="" data-unlink>:e!</pre>


<p>で再読込するときれいにハイライト表示されました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140813/20140813120323.png" alt="f:id:wnoguchi0727:20140813120323p:plain" title="f:id:wnoguchi0727:20140813120323p:plain" class="hatena-fotolife" itemprop="image"></span></p>


-----
--------
AUTHOR: wnoguchi0727
TITLE: AWSで2段階認証(MFA)を構成する(Android版: Google Authenticator使用)
BASENAME: 2014/08/12/214356-enable-aws-mfa-with-android-google-authenticator
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/12/2014 21:43:56
CATEGORY: AWS
CATEGORY: インフラ
CATEGORY: 2段階認証
CATEGORY: Android
CATEGORY: Google
CATEGORY: セキュリティ
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213050.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a>アカウント、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a>アカウントに次いで大事なアカウントです。<br/>
2段階認証、多要素認証、MFA(Multi-Factor Authentication)等々呼ばれ方は様々ですが、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントにも2段階認証を設定することができます。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>ではMFA（Multi-Factor Authentication, 多要素認証）と呼ばれています。<br/>
今回はこれを設定します。</p>

<p>2段階認証を実行するプロセスにはSMSによるメッセージングもできるのですが、
ドコモとかだと海外からのSMSの受信制限とかがかかっていたりして、これを解除しないとうまく受け取れないことがあります。<br/>
最初<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>から2段階認証の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%BF%A5%A4%A5%E0%A5%D1%A5%B9%A5%EF%A1%BC%A5%C9">ワンタイムパスワード</a>を何度やってもSMSで受け取れなくて国コードが間違ってるんじゃないかとか、
先頭の0を取らないといけないじゃないかとか、<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>のバグなんじゃないかと思いました。</p>

<p>ここでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Android">Android</a>アプリの<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticator（<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a>認証システム）を使用します。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a>の二段階認証にしか使えないのかと思っていたのですが、
他の2段階認証を採用しているシステムでも使えるようです。<br/>
便利ですねー。</p>

<h2>MFAの設定を有効にする</h2>

<ul>
<li>Management Consoleにログイン後、右上のメニューから[Security Credentials]を選択します。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213056.png" alt="f:id:wnoguchi0727:20140812213056p:plain" title="f:id:wnoguchi0727:20140812213056p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>あなたがアクセスしようとしているページは<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントのセキュリティクレデンシャルのページで、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントのセキュリティクレデンシャルは<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>リソースへの無制限アクセスを提供するものだから
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>のベストプラクティスにならってIAMで制限されたユーザを作成してやったほうがいいよーと
警告が表示されるので[Continue to Security Credentials]をクリックして先に進みます。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213051.png" alt="f:id:wnoguchi0727:20140812213051p:plain" title="f:id:wnoguchi0727:20140812213051p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>次に[Your Security Credentials]セクション内の[Multi-Factor Authentication(MFA)]を開いて
[Activate MFA]ボタンをクリックします。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213054.png" alt="f:id:wnoguchi0727:20140812213054p:plain" title="f:id:wnoguchi0727:20140812213054p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>[A virtual MFA device]を選択します。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213044.png" alt="f:id:wnoguchi0727:20140812213044p:plain" title="f:id:wnoguchi0727:20140812213044p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>要するに、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorを入れてねと書いてあります。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213045.png" alt="f:id:wnoguchi0727:20140812213045p:plain" title="f:id:wnoguchi0727:20140812213045p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/QR%A5%B3%A1%BC%A5%C9">QRコード</a>が表示されました。<br/>
この段階では<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorがインストール済みの前提で話を進めます。<br/>
さらに厳重に認証コードを2連続で入力を促されます。<br/>
そんなことできたんだ・・・。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213046.png" alt="f:id:wnoguchi0727:20140812213046p:plain" title="f:id:wnoguchi0727:20140812213046p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorを起動する</h2>

<p>さて、この<a class="keyword" href="http://d.hatena.ne.jp/keyword/QR%A5%B3%A1%BC%A5%C9">QRコード</a>を読み取るために<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorを起動します。<br/>
こんなアイコンのやつですね。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213053.png" alt="f:id:wnoguchi0727:20140812213053p:plain" title="f:id:wnoguchi0727:20140812213053p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>[アカウントを設定]をタップします。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213052.png" alt="f:id:wnoguchi0727:20140812213052p:plain" title="f:id:wnoguchi0727:20140812213052p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>[バーコードをスキャン]をタップすると<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%C6%A5%F3%A5%C8">インテント</a>で<a class="keyword" href="http://d.hatena.ne.jp/keyword/QR%A5%B3%A1%BC%A5%C9">QRコード</a>リーダーが起動するので先ほどの<a class="keyword" href="http://d.hatena.ne.jp/keyword/QR%A5%B3%A1%BC%A5%C9">QRコード</a>をスキャンします。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213055.png" alt="f:id:wnoguchi0727:20140812213055p:plain" title="f:id:wnoguchi0727:20140812213055p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%BF%A5%A4%A5%E0%A5%D1%A5%B9%A5%EF%A1%BC%A5%C9">ワンタイムパスワード</a>を生成するところが現れたのがわかると思います。<br/>
右側の円グラフのゲージがこの認証コードの有効な期間なので2回、この認証コードををさっきの認証コード入力欄に入力して[Next Step]をクリックします。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213050.png" alt="f:id:wnoguchi0727:20140812213050p:plain" title="f:id:wnoguchi0727:20140812213050p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>これで2段階認証を行うための<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorと<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントが紐付けられました。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213047.png" alt="f:id:wnoguchi0727:20140812213047p:plain" title="f:id:wnoguchi0727:20140812213047p:plain" class="hatena-fotolife" itemprop="image"></span></p>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213048.png" alt="f:id:wnoguchi0727:20140812213048p:plain" title="f:id:wnoguchi0727:20140812213048p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>実際にログインしてみる</h2>

<p>実際に2段階認証が有効になったかサインアウトしてもう一度ログインしてみます。</p>

<ul>
<li>ログインID、パスワードを入力します。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213057.png" alt="f:id:wnoguchi0727:20140812213057p:plain" title="f:id:wnoguchi0727:20140812213057p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>認証コードを求められるようになりました。<br/>
ここで<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Authenticatorで生成される認証コードを期限内に入力してログインします。</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812213049.png" alt="f:id:wnoguchi0727:20140812213049p:plain" title="f:id:wnoguchi0727:20140812213049p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>これで<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウントに2段階認証を設定することができました。</p>

<h3>デバイスが壊れた、紛失してログインできなくなってしまったら</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>やQiita等はリカバリコードが用意されていますが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>の場合は直接問合せする必要があるようです。<br/>
要注意。</p>

<ul>
<li><a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/LostMFA.html">What If an MFA Device Is Lost or Stops Working? - AWS Identity and Access Management</a></li>
<li><a href="https://aws.amazon.com/forms/aws-mfa-support">Amazon Web Services</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Macでvagrant-omnibusプラグインのインストール中にnokogiriのインストールでコケるというお話
BASENAME: 2014/08/12/175950-mac-mavericks-vagrant-omnibus-nokogiri-install-failure
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/12/2014 17:59:50
CATEGORY: Mac
CATEGORY: Mavericks
CATEGORY: Vagrant
CATEGORY: Xcode
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812175721.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac%20OS%20X">Mac OS X</a> Mavericks(10.9.4)です。他の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>では <a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a>-omnibus <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>をインストールできるのですが、
メインで使ってるマシンでだけインストールできないという現象に遭遇。</p>

<p>どうやら nokogiri のインストールで失敗している模様。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% vagrant plugin install vagrant-omnibus
Installing the <span class="synConstant">'vagrant-omnibus'</span> plugin. This can take a few minutes...
Building nokogiri using packaged libraries.
Bundler, the underlying system Vagrant uses to install plugins,
reported an error. The error is shown below. These errors are usually
caused by misconfigured plugin installations or transient network
issues. The error from Bundler is:

An error occurred <span class="synStatement">while</span> installing nokogiri (<span class="synConstant">1.6</span>.<span class="synConstant">3.1</span>), and Bundler cannot <span class="synStatement">continue</span>.
Make sure that <span class="synPreProc">`gem install nokogiri -v </span><span class="synConstant">'1.6.3.1'</span><span class="synPreProc">`</span> succeeds before bundling.
</pre>


<p>ためしに nokogiri 単体で入るか Gemfile に書いてインストールしてみたらこんなエラーが・・・</p>

<pre class="code" data-lang="" data-unlink>Building nokogiri using packaged libraries.

Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.

    /Users/wnoguchi/.rbenv/versions/2.0.0-p481/bin/ruby extconf.rb
Building nokogiri using packaged libraries.
----- 
libiconv is missing.  please visit http://nokogiri.org/tutorials/installing_nokogiri.html for help with installing dependencies.
----- 
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.

Provided configuration options:
    --with-opt-dir
    --without-opt-dir
    --with-opt-include
    --without-opt-include=${opt-dir}/include
    --with-opt-lib
    --without-opt-lib=${opt-dir}/lib
    --with-make-prog
    --without-make-prog
    --srcdir=.
    --curdir
    --ruby=/Users/wnoguchi/.rbenv/versions/2.0.0-p481/bin/ruby
    --help
    --clean
    --use-system-libraries
    --enable-static
    --disable-static
    --with-zlib-dir
    --without-zlib-dir
    --with-zlib-include
    --without-zlib-include=${zlib-dir}/include
    --with-zlib-lib
    --without-zlib-lib=${zlib-dir}/lib
    --enable-cross-build
    --disable-cross-build


Gem files will remain installed in /Users/wnoguchi/Documents/work/vendor/bundle/ruby/2.0.0/gems/nokogiri-1.6.3 for inspection.
Results logged to /Users/wnoguchi/Documents/work/vendor/bundle/ruby/2.0.0/gems/nokogiri-1.6.3/ext/nokogiri/gem_make.out
An error occurred while installing nokogiri (1.6.3), and Bundler cannot continue.
Make sure that `gem install nokogiri -v &#39;1.6.3&#39;` succeeds before bundling.</pre>


<p><code>libiconv is missing.</code> と。他の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>では入れた記憶がないんだけどなあ。<br/>
入れましょう。</p>

<p><a href="http://stackoverflow.com/questions/5528839/why-does-installing-nokogiri-on-mac-os-fail-with-libiconv-is-missing">osx - Why does installing nokogiri on Mac OS fail with libiconv is missing? - Stack Overflow</a></p>

<p>によると</p>

<pre class="code" data-lang="" data-unlink>% brew update
% brew install libiconv</pre>


<p>でいけるらしいですが、3年前の記事なのですでに情報が古くなってる可能性があります。<br/>
Lion とかの頃の話じゃないですか・・・。</p>

<pre class="code" data-lang="" data-unlink>% brew install libiconv
Error: No available formula for libiconv
Apple distributes libiconv with OS X, you can find it in /usr/lib.
Some build scripts fail to detect it correctly, please check existing
formulae for solutions.</pre>


<p>失敗しました。<br/>
なんか下の方には自力でソース持ってきてビルドしてるっぽいけど、それはやりたくない。<br/>
なにか欠けているものがあるはず。</p>

<p><a href="http://apple.stackexchange.com/questions/129280/nokogiri-gem-fails-to-install-in-os-x-mavericks">bash - Nokogiri gem fails to install in OS X Mavericks - Ask Different</a></p>

<p>これは違う。</p>

<p><a href="http://stackoverflow.com/questions/19643153/error-to-install-nokogiri-on-osx-10-9-maverick">ruby - Error to install Nokogiri on OSX 10.9 Maverick? - Stack Overflow</a></p>

<p>これっぽい。</p>

<blockquote><p>After navigating the animated GIFs here, all that I had to do was simply
xcode-select --install and the gem install nokogiri worked fine.</p></blockquote>

<p>緑チェックが入っている複雑な手順の方じゃなくて</p>

<pre class="code" data-lang="" data-unlink>xcode-select --install</pre>


<p>とすればよかった。<br/>
するとダイアログが開いて「"<a class="keyword" href="http://d.hatena.ne.jp/keyword/xcode">xcode</a>-select"コマンドを実行するには、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3">コマンドライン</a>・<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%D9%A5%ED%A5%C3%A5%D1">デベロッパ</a>・<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>が必要です。<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>を今すぐインストールしますか？」と聞いてくるので[インストール]をクリック。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812175721.png" alt="f:id:wnoguchi0727:20140812175721p:plain" title="f:id:wnoguchi0727:20140812175721p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>そしてCommand Line Tools 使用許諾契約に同意してインストール。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140812/20140812175756.png" alt="f:id:wnoguchi0727:20140812175756p:plain" title="f:id:wnoguchi0727:20140812175756p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>そういえば他の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>でも同じことやってた気がする。<br/>
なるほど。</p>

<p>そしてもう一度トライ。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% vagrant plugin install vagrant-omnibus
Installing the <span class="synConstant">'vagrant-omnibus'</span> plugin. This can take a few minutes...
Building nokogiri using packaged libraries.
Building libxml2<span class="synConstant">-2.8</span>.<span class="synConstant">0</span> <span class="synStatement">for</span> nokogiri with the following patches applied:
    <span class="synSpecial">-</span> 0001-Fix-parser-local-buffers-size-problems.patch
    <span class="synSpecial">-</span> 0002-Fix-entities-local-buffers-size-problems.patch
    <span class="synSpecial">-</span> 0003-Fix-an-error-in-previous-commit.patch
    <span class="synSpecial">-</span> 0004-Fix-potential-out-of-bound-access.patch
    <span class="synSpecial">-</span> 0005-Detect-excessive-entities-expansion-upon-replacement.patch
    <span class="synSpecial">-</span> 0006-Do-not-fetch-external-parsed-entities.patch
    <span class="synSpecial">-</span> 0007-Enforce-XML_PARSER_EOF-state-handling-through-the-pa.patch
    <span class="synSpecial">-</span> 0008-Improve-handling-of-xmlStopParser.patch
    <span class="synSpecial">-</span> 0009-Fix-a-couple-of-return-without-value.patch
    <span class="synSpecial">-</span> 0010-Keep-non-significant-blanks-node-in-HTML-parser.patch
    <span class="synSpecial">-</span> 0011-Do-not-fetch-external-parameter-entities.patch
************************************************************************
IMPORTANT!  Nokogiri builds and uses a packaged version of libxml2.

If this is a concern <span class="synStatement">for</span> you and you want to use the system library
instead, abort this installation process and reinstall nokogiri as
follows:

    gem install nokogiri -- --use-system-libraries

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install

However, note that nokogiri does not necessarily support all versions
of libxml2.

For example, libxml2<span class="synConstant">-2.9</span>.<span class="synConstant">0</span> and higher are currently known to be broken
and thus unsupported by nokogiri, due to compatibility problems and
XPath optimization bugs.
************************************************************************
Building libxslt<span class="synConstant">-1.1</span>.<span class="synConstant">28</span> <span class="synStatement">for</span> nokogiri with the following patches applied:
    <span class="synSpecial">-</span> 0001-Adding-doc-update-related-to<span class="synConstant">-1.1</span>.<span class="synConstant">28</span>.patch
    <span class="synSpecial">-</span> 0002-Fix-a-couple-of-places-where-f-printf-parameters-wer.patch
    <span class="synSpecial">-</span> 0003-Initialize-pseudo-random-number-generator-with-curre.patch
    <span class="synSpecial">-</span> 0004-EXSLT-function-str-replace-is-broken-as-is.patch
    <span class="synSpecial">-</span> 0006-Fix-str-padding-to-work-with-UTF-8-strings.patch
    <span class="synSpecial">-</span> 0007-Separate-function-for-predicate-matching-in-patterns.patch
    <span class="synSpecial">-</span> 0008-Fix-direct-pattern-matching.patch
    <span class="synSpecial">-</span> 0009-Fix-certain-patterns-with-predicates.patch
    <span class="synSpecial">-</span> 0010-Fix-handling-of-UTF-8-strings-in-EXSLT-crypto-module.patch
    <span class="synSpecial">-</span> 0013-Memory-leak-in-xsltCompileIdKeyPattern-error-path.patch
    <span class="synSpecial">-</span> 0014-Fix-for-bug-436589.patch
    <span class="synSpecial">-</span> 0015-Fix-mkdir-for-mingw.patch
************************************************************************
IMPORTANT!  Nokogiri builds and uses a packaged version of libxslt.

If this is a concern <span class="synStatement">for</span> you and you want to use the system library
instead, abort this installation process and reinstall nokogiri as
follows:

    gem install nokogiri -- --use-system-libraries

If you are using Bundler, tell it to use the option:

    bundle config build.nokogiri --use-system-libraries
    bundle install
************************************************************************
Installed the plugin <span class="synConstant">'vagrant-omnibus (1.4.1)'</span>!
</pre>


<p>今度はうまくいきました。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a>-omnibusを使うと何が美味しいかというと、<code>vagrant up</code> や
<code>vagrant provision</code> したときに Chef が入ってなかったら自動的にインストールしてくれるというシロモノです。<br/>
Vagrantfileには以下の記述を追記しておきます。</p>

<pre class="code lang-ruby" data-lang="ruby" data-unlink>config.omnibus.chef_version = <span class="synConstant">:latest</span>
</pre>


<p>まあでもこうしちゃうと Vagrantfile に依存関係が増えてなんだか複雑な気分になりますが・・・。</p>

<h2>References</h2>

<ol>
<li><a href="https://github.com/schisamo/vagrant-omnibus">schisamo/vagrant-omnibus</a></li>
<li><a href="https://github.com/sparklemotion/nokogiri">sparklemotion/nokogiri</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: HomebrewでインストールしたputtygenでPuTTY形式(ppk)のOpenSSH形式に変換しようとするとエラーになる
BASENAME: 2014/08/10/102552
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/10/2014 10:25:52
CATEGORY: puttygen
CATEGORY: putty
CATEGORY: OpenSSH
CATEGORY: Mac
CATEGORY: Homebrew
-----
BODY:
<p>最近自分の中のナレッジを整理してる。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>でやるのもいいけど、ppk形式の鍵も<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3">コマンドライン</a>でOpenSSH形式に変換できたほうがいいですよね、
というか、それしか選択肢がない日が絶対来ると思う。</p>

<p>ということで<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>で puttygen コマンドで方法なんですが。<br/>
いつものようにHomebrewでインストールしようとしたらハマったのでメモ。</p>

<ul>
<li>まずはインストール。</li>
</ul>


<pre class="code" data-lang="" data-unlink>brew install putty</pre>


<h3>OpenSSH形式から<a class="keyword" href="http://d.hatena.ne.jp/keyword/PuTTY">PuTTY</a>形式(ppk)に変換する方法</h3>

<p>これはうまくいく</p>

<pre class="code" data-lang="" data-unlink>puttygen -O private secure-private-key.pem -o secure-private-key.ppk</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/PuTTY">PuTTY</a>形式(ppk)からOpenSSH形式に変換する方法</h3>

<pre class="code" data-lang="" data-unlink>% puttygen -O private-openssh test.ppk -o test.pem
Enter passphrase to load key:
Assertion failed: (random_active), function random_byte, file ./unix/../sshrand.c, line 313.
zsh: abort      puttygen -O private-openssh test.ppk -o test.pem</pre>


<p>エラー。。。</p>

<blockquote><p>This is a known issue in 0.63. You must <a class="keyword" href="http://d.hatena.ne.jp/keyword/brew">brew</a> with --HEAD to build from <a class="keyword" href="http://d.hatena.ne.jp/keyword/Putty">Putty</a>'s <a class="keyword" href="http://d.hatena.ne.jp/keyword/svn">svn</a>, which has a fix for the bug.
<a href="https://github.com/Homebrew/homebrew/issues/25734">Putty: puttygen: Assertion failed · Issue #25734 · Homebrew/homebrew</a></p></blockquote>

<ul>
<li><a href="http://blog.risouf.net/entry/18">PuTTY形式の秘密鍵をOpenSSH形式に変換する - blog.risouf.net</a></li>
</ul>


<p>解決方法はいくつかあったけどあまりHomebrewのやり方から逸脱したくなかったので前者を採用。</p>

<pre class="code" data-lang="" data-unlink>% brew reinstall putty --HEAD                                                   (git)-[master]
==&gt; Reinstalling putty
==&gt; Installing dependencies for putty: halibut, automake
==&gt; Installing putty dependency: halibut
==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/halibut-1.0.mavericks.bott
######################################################################## 100.0%
==&gt; Pouring halibut-1.0.mavericks.bottle.tar.gz
🍺  /usr/local/Cellar/halibut/1.0: 4 files, 1.0M
==&gt; Installing putty dependency: automake
==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/automake-1.14.1.mavericks.
######################################################################## 100.0%
==&gt; Pouring automake-1.14.1.mavericks.bottle.tar.gz
🍺  /usr/local/Cellar/automake/1.14.1: 127 files, 2.5M
==&gt; Installing putty
==&gt; Checking out svn://svn.tartarus.org/sgt/putty
svn: E000060: Unable to connect to a repository at URL &#39;svn://svn.tartarus.org/sgt/putty&#39;
svn: E000060: Can&#39;t connect to host &#39;svn.tartarus.org&#39;: Operation timed out
Error: Failed to download resource &#34;putty&#34;
Failure while executing: svn checkout -q --force svn://svn.tartarus.org/sgt/putty /Library/Caches/Homebrew/putty--svn-HEAD
[wnoguchi@noguchiwataru-no-MacBook-Pro] ~/Documents/repos/github/doc</pre>


<p><del>つながらん・・・。</del></p>

<p>日を改めたらつながって再インストールできました。
たまにサーバ自体が死んでいて失敗するときもあるようだ。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: MacにiTerm2+Powerlineを今更ながら入れてみた
BASENAME: 2014/08/10/025902-mac-iterm2-and-powerline
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/10/2014 02:59:02
CATEGORY: Mac
CATEGORY: powerline
CATEGORY: vim
CATEGORY: tmux
CATEGORY: iTerm2
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140810/20140810025634.png
-----
BODY:
<p>Powerlineを入れるとずいぶん見た目が美しくなるそうなので入れてみました。</p>

<h2>NeoBundleインストール</h2>

<p><a href="https://github.com/Shougo/neobundle.vim">Shougo/neobundle.vim</a></p>

<pre class="code" data-lang="" data-unlink>% curl https://raw.githubusercontent.com/Shougo/neobundle.vim/master/bin/install.sh | sh
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  1948  100  1948    0     0   6421      0 --:--:-- --:--:-- --:--:--  6429
git is /usr/local/bin/git
Start fetch NeoBundle...
Cloning into &#39;/Users/wnoguchi/.vim/bundle/neobundle.vim&#39;...
remote: Counting objects: 6770, done.
remote: Total 6770 (delta 0), reused 0 (delta 0)
Receiving objects: 100% (6770/6770), 1.65 MiB | 269.00 KiB/s, done.
Resolving deltas: 100% (2859/2859), done.
Checking connectivity... done.
Done.
Please write NeoBundle initial setting to your vimrc path ...


&#34;NeoBundle Scripts-----------------------------
if has(&#39;vim_starting&#39;)
  set nocompatible               &#34; Be iMproved

  &#34; Required:
  set runtimepath+=/Users/wnoguchi/.vim/bundle/neobundle.vim/
endif

&#34; Required:
call neobundle#begin(expand(&#39;/Users/wnoguchi/.vim/bundle&#39;))

&#34; Let NeoBundle manage NeoBundle
&#34; Required:
NeoBundleFetch &#39;Shougo/neobundle.vim&#39;

&#34; My Bundles here:
NeoBundle &#39;Shougo/neosnippet.vim&#39;
NeoBundle &#39;Shougo/neosnippet-snippets&#39;
NeoBundle &#39;tpope/vim-fugitive&#39;
NeoBundle &#39;kien/ctrlp.vim&#39;
NeoBundle &#39;flazz/vim-colorschemes&#39;

&#34; You can specify revision/branch/tag.
NeoBundle &#39;Shougo/vimshell&#39;, { &#39;rev&#39; : &#39;3787e5&#39; }

&#34; Required:
call neobundle#end()

&#34; Required:
filetype plugin indent on

&#34; If there are uninstalled bundles found on startup,
&#34; this will conveniently prompt you to install them.
NeoBundleCheck
&#34;End NeoBundle Scripts-------------------------


Done.
Complete setup NeoBundle!</pre>


<h3>vimrcに追記</h3>

<pre class="code" data-lang="" data-unlink>&#34;NeoBundle Scripts-----------------------------
if has(&#39;vim_starting&#39;)
  set nocompatible               &#34; Be iMproved

  &#34; Required:
  set runtimepath+=/Users/wnoguchi/.vim/bundle/neobundle.vim/
endif

&#34; Required:
call neobundle#begin(expand(&#39;/Users/wnoguchi/.vim/bundle&#39;))

&#34; Let NeoBundle manage NeoBundle
&#34; Required:
NeoBundleFetch &#39;Shougo/neobundle.vim&#39;

&#34; My Bundles here:
NeoBundle &#39;Shougo/neosnippet.vim&#39;
NeoBundle &#39;Shougo/neosnippet-snippets&#39;
NeoBundle &#39;tpope/vim-fugitive&#39;
NeoBundle &#39;kien/ctrlp.vim&#39;
NeoBundle &#39;flazz/vim-colorschemes&#39;

&#34; You can specify revision/branch/tag.
NeoBundle &#39;Shougo/vimshell&#39;, { &#39;rev&#39; : &#39;3787e5&#39; }

&#34; Required:
call neobundle#end()

&#34; Required:
filetype plugin indent on

&#34; If there are uninstalled bundles found on startup,
&#34; this will conveniently prompt you to install them.
NeoBundleCheck
&#34;End NeoBundle Scripts-------------------------</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/vim">vim</a>を立ち上げて :NeoBundleInstall コマンドを実行</h3>

<p>まずは質問に <code>y</code> と答える。</p>

<pre class="code" data-lang="" data-unlink>% vi
Not installed bundles:  [&#39;vimshell&#39;, &#39;ctrlp.vim&#39;, &#39;vim-colorschemes&#39;]
Press ENTER or type command to continue
Install bundles now?
(y)es, [N]o: y

[neobundle/install] Update started: (2014/08/09 22:54:13)
[neobundle/install] (1/3): |vim-colorschemes| git clone --recursive https://github.com/flazz/vim-colorschemes.git &#34;/Users/wnoguchi/.vim/bundle/vim-colorschemes&#34;
[neobundle/install] (2/3): |ctrlp.vim| git clone --recursive https://github.com/kien/ctrlp.vim.git &#34;/Users/wnoguchi/.vim/bundle/ctrlp.vim&#34;
[neobundle/install] (3/3): |vimshell| git clone --recursive https://github.com/Shougo/vimshell.git &#34;/Users/wnoguchi/.vim/bundle/vimshell_3787e5&#34;
[neobundle/install] (1/3): |vim-colorschemes| Updated
[neobundle/install] |vim-colorschemes|  -&gt; 36ab747f27be95d9f5ebc2439124cddad52763be
[neobundle/install] (2/3): |ctrlp.vim| Updated
[neobundle/install] |ctrlp.vim|  -&gt; b5d3fe66a58a13d2ff8b6391f4387608496a030f
[neobundle/install] (3/3): |vimshell| Locked
[neobundle/install] (3/3): |vimshell| git checkout 3787e5
[neobundle/install] (3/3): |vimshell| Updated
[neobundle/install] |vimshell|  -&gt; 3787e52766812d8b99a93ccdda57517bc2a0bab6
[neobundle/install] Installed/Updated bundles:
vim-colorschemes
ctrlp.vim
vimshell
[neobundle/install] Update done: (2014/08/09 22:54:39)
Press ENTER or type command to continue</pre>


<p>エディタが開いたら <code>:NeoBundleInstall</code> コマンドを叩く。</p>

<pre class="code" data-lang="" data-unlink>:NeoBundleInstall</pre>


<p>そして出力が以下。</p>

<pre class="code" data-lang="" data-unlink>[neobundle/install] Target bundles not found.
[neobundle/install] You may have used the wrong bundle name, or all of the bundles are already installed.
Press ENTER or type command to continue</pre>


<p>インストールするものは何もない、あんたが書いたbundle名は間違ってるかすでに入っていると言われた。<br/>
さっきので <code>y</code> って答えたからもう全部入ってるのかな・・・。</p>

<h2>Powerline入れる</h2>

<p><code>.vimrc</code> に以下を追記。<br/>
<code>NeoBundle Scripts</code> から <code>End NeoBundle Scripts</code> の間に書くのがミソ。</p>

<pre class="code" data-lang="" data-unlink>&#34;NeoBundle Scripts-----------------------------

NeoBundle &#39;alpaca-tc/alpaca_powertabline&#39;
NeoBundle &#39;Lokaltog/powerline&#39;, { &#39;rtp&#39; : &#39;powerline/bindings/vim&#39;}
NeoBundle &#39;Lokaltog/powerline-fontpatcher&#39;

&#34;End NeoBundle Scripts-------------------------</pre>




<pre class="code" data-lang="" data-unlink>:source ~/.vimrc</pre>


<p>するか <a class="keyword" href="http://d.hatena.ne.jp/keyword/vim">vim</a> を立ち上げて</p>

<pre class="code" data-lang="" data-unlink>:NeoBundleInstall
powerline
[neobundle/install] Update done: (2014/08/09 23:03:39)
Press ENTER or type command to continue</pre>


<h2>フォントにパッチ当てる</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/fontforge">fontforge</a>のインストール</h3>

<p>けっこうかかる。<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSD">SSD</a>ならすこしはやい。</p>

<pre class="code" data-lang="" data-unlink>brew install fontforge --with-python</pre>


<h3>インストールしたフォントをホームディレクトリにコピーしてくる</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a>なんてフォントねーな・・・って思ってぐぐってみたらプログラミング用のフォントとして超有名なフォントなんですね・・・。<br/>
フォントとオーディオはほんと宗教みたいな世界ですわ。<br/>
さっそくインストール。</p>

<ul>
<li><a href="http://save.sys.t.u-tokyo.ac.jp/~yusa/fonts/ricty.html">プログラミング用フォント Ricty</a></li>
<li><a href="https://github.com/yascentur/Ricty/tree/3.2.3">yascentur/Ricty at 3.2.3</a></li>
</ul>


<h2>フォント<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a>のインストール</h2>

<h3>Inconsolata入れる</h3>

<p><a href="http://levien.com/type/myfonts/inconsolata.html">Inconsolata</a></p>

<p>Open Type file を入れる。</p>

<pre class="code" data-lang="" data-unlink>sudo wget -O /System/Library/Fonts/Inconsolata.otf http://levien.com/type/myfonts/Inconsolata.otf</pre>


<h3>M+と<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPA">IPA</a>の合成フォント入れる</h3>

<p><a href="http://mix-mplus-ipa.sourceforge.jp/">M+とIPAの合成フォント</a></p>

<p>Miguを入れる。MigMixじゃない方。<br/>
とりあえず全部ダウンロードした。</p>

<pre class="code" data-lang="" data-unlink>migu-1c-bold.ttf
migu-1c-regular.ttf
migu-1m-bold.ttf
migu-1m-regular.ttf
migu-1p-bold.ttf
migu-1p-regular.ttf
migu-2m-bold.ttf
migu-2m-regular.ttf</pre>


<p>これらを</p>

<pre class="code" data-lang="" data-unlink>/System/Library/Fonts/</pre>


<p>に突っ込む。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a>生成<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8">スクリプト</a>をクローンする</h3>

<pre class="code" data-lang="" data-unlink>git clone https://github.com/yascentur/Ricty.git
cd /System/Library/Fonts/
sudo /path/to/ClonedRictySources/ricty_generator.sh auto

Ricty Generator 3.2.3

Author: Yasunori Yusa &lt;lastname at save.sys.t.u-tokyo.ac.jp&gt;

This script is to generate ``Ricty&#39;&#39; font from Inconsolata and Migu 1M.
It requires 2-5 minutes to generate Ricty. Owing to SIL Open Font License
Version 1.1 section 5, it is PROHIBITED to distribute the generated font.

Generate modified Inconsolata.
Find ./Inconsolata.otf.
Save Modified-Inconsolata-Regular.sfd.
While making Inconsolata bold, wait a little...
Save Modified-Inconsolata-Bold.sfd.
Generate modified Migu 1M.
Find ./migu-1m-regular.ttf.
While scaling migu-1m-regular.ttf, wait a little...
Save Modified-migu-1m-regular.sfd.
Find ./migu-1m-bold.ttf.
While scaling migu-1m-bold.ttf, wait a little...
Save Modified-migu-1m-bold.sfd.
Generate Ricty.
While merging Modified-Inconsolata-Regular.sfd with Modified-migu-1m-regular.sfd, wait a little...
Save Ricty-Regular.ttf.
Remove temporary files.
Generate RictyDiscord-Regular.ttf.
Generate RictyDiscord-Bold.ttf.
Succeeded in generating Ricty!</pre>


<p>sudoで実行しないと、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D1%A1%BC%A5%DF%A5%C3%A5%B7%A5%E7%A5%F3">パーミッション</a>不足でSave <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a>-Regular.ttf.とかいいつつ保存されないので注意。</p>

<pre class="code" data-lang="" data-unlink>% ls /System/Library/Fonts/Ricty*
/System/Library/Fonts/Ricty-Bold.ttf
/System/Library/Fonts/Ricty-Regular.ttf
/System/Library/Fonts/RictyDiscord-Bold.ttf
/System/Library/Fonts/RictyDiscord-Regular.ttf</pre>


<p>あーなれない作業で長かった・・・。</p>

<h2>Powerline用フォントにパッチを当てる作業に戻る</h2>

<p>フォントにパッチ当てて <code>/System/Library/Fonts/</code> ディレクトリに生成する。<br/>
Qiitaの記事とは微妙にパスを読み替えてる。<br/>
パッチは当てるけど、元のファイルが上書きされるわけじゃないから安心だね。<br/>
<strong>カレントディレクトリに成果物が生成されるので注意。</strong><br/>
本当はシステムのディレクトリは汚したくないから <code>~/.fonts/</code> に入れたいんだけど、
サーチパスの設定が足りないのかな。<br/>
あと、僕の環境だと1種類だけパッチ当てても全然候補に出てこないから全部パッチあてて変換しました。</p>

<pre class="code" data-lang="" data-unlink>% cd /var/tmp
% mkdir fontwork
% cd fontwork
% find /System/Library/Fonts/ -name &#34;Ricty*.ttf&#34; | xargs fontforge -lang=py -script ~/.vim/bundle/powerline-fontpatcher/scripts/powerline-fontpatcher

(snip)
Copyright (c) 2000-2012 by George Williams.
 Executable based on sources from 14:57 GMT 31-Jul-2012-D.
 Library based on sources from 14:57 GMT 31-Jul-2012.
This font contains both a &#39;mor[tx]&#39; table and a &#39;GSUB&#39; table.
  FF will only read feature/settings in &#39;morx&#39; which do not match features
  found in &#39;GSUB&#39;.</pre>


<p>どんなのが生成されたか見てみる。</p>

<pre class="code" data-lang="" data-unlink>% ls
Ricty Bold for Powerline.ttf
Ricty Discord Bold for Powerline.ttf
Ricty Discord Regular for Powerline.ttf
Ricty Regular for Powerline.ttf</pre>


<p>システムフォントディレクトリに移動。</p>

<pre class="code" data-lang="" data-unlink>sudo mv * /System/Library/Fonts/</pre>


<p>for Powerlineというフォントが作成されてる。<br/>
キャッシュ作成。</p>

<pre class="code" data-lang="" data-unlink>% sudo fc-cache -vf</pre>


<p><a href="http://calorie001.hatenablog.com/entry/2012/11/08/054056">【Linux Mint, vim】vim-powerlineにフォントRictyのパッチをあてる - i'll be fine</a></p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/vim">vim</a>でPowerlineの設定</h2>

<p>最後にstatuslineの表示設定を <code>.vimrc</code> に書き加える。</p>

<pre class="code" data-lang="" data-unlink>&#34; statusline表示
set laststatus=2

&#34; Powerlineの設定
let g:Powerline_symbols = &#39;fancy&#39;
&#34;文字化けするならこっち使う
&#34;let g:Powerline_symbols = &#39;compatible&#39;

set t_Co=256</pre>


<h2>iTerm2の設定</h2>

<p>まだ終わりじゃない。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>標準のターミナルを使っている人はそれの設定を、僕はiTerm2を使っているのでフォントの設定をする。<br/>
これやらずに<a class="keyword" href="http://d.hatena.ne.jp/keyword/vim">vim</a>のstatuslineの表示（矢印とか盛大に化けてる）が崩れてなんでだろうと小一時間悩みました。<br/>
ものすごく基本的なことなのに、パッチ当てたPowerline用のフォント指定しないとうまく表示されるわけがないよね。。。</p>

<p>まずiTerm2のPreferencesを開きます。<br/>
いろいろ微調整するのでプロファイルは複製したほうがいいと思います。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140810/20140810025558.png" alt="f:id:wnoguchi0727:20140810025558p:plain" title="f:id:wnoguchi0727:20140810025558p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>フォントの設定を開きます。<br/>
以下のフォント設定を施します。</p>

<ul>
<li>Regular Font: Inconsolate, Regular, 14pt</li>
<li>Non-ASCII Font: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a> for Powerline, Regular, 14pt</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140810/20140810025618.png" alt="f:id:wnoguchi0727:20140810025618p:plain" title="f:id:wnoguchi0727:20140810025618p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>Regular FontにInconsolateを選択したのは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ricty">Ricty</a>フォントだとBold書体が滲んで表示されて見にくいからです。<br/>
<strong>さらに、デフォルトだと<a class="keyword" href="http://d.hatena.ne.jp/keyword/vim">vim</a>を開いた時にstatuslineのフォントのサイズと三角矢印のいちがズレていて許せないので、Non-ASCII FontのCharacter SpacingセクションのVertical, Horizontalの微調整をします。</strong></p>

<p>ようやく終わりです・・・。<br/>
適当な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>配下にあるソースファイルを開いてみます。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140810/20140810025634.png" alt="f:id:wnoguchi0727:20140810025634p:plain" title="f:id:wnoguchi0727:20140810025634p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>感動・・・。</p>

<h2>References</h2>

<ol>
<li><a href="http://qiita.com/alpaca_taichou/items/ab70f914a6a577e25d70">Vim - powerlineをいつ使う？今でしょ！ - Qiita</a></li>
<li><a href="http://qiita.com/syui/items/dc509f208b464838b948">tmux-powerline - Qiita</a></li>
<li><a href="https://github.com/Lokaltog/powerline">Lokaltog/powerline</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Amazon Route53にレジストラとしての機能がついたのでさっそく使ってみた
BASENAME: 2014/08/02/024806
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 08/02/2014 02:48:06
CATEGORY: AWS
CATEGORY: Route53
CATEGORY: インフラ
CATEGORY: DNS
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020330.png
-----
BODY:
<p>帰ってきて何の気なしに<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a>からのメールをぼーっとみてると
「あーはいはい、またなんか機能追加したのね」ってそのまま即効でアーカイブしそうになったけど、</p>

<ul>
<li><a href="http://aws.amazon.com/jp/about-aws/whats-new/2014/07/31/amazon-route-53-announces-domain-name-registration-geo-routing-and-lower-pricing/">Amazon Route 53 Announces Domain Name Registration, Geo Routing, and Lower Pricing</a></li>
</ul>


<p><strong>（2014-08-09追記　日本語ブログエントリ出てました）</strong></p>

<ul>
<li><a href="http://aws.typepad.com/aws_japan/2014/08/route-53-domain-reg-geo-route-price-drop.html">Amazon Web Services ブログ: 【AWS発表】Route53 アップデート - ドメイン名の登録、Geo Routing、値下げ</a></li>
</ul>


<blockquote><p>Domain Name Registration</p>

<p>You can now purchase a new domain name or transfer the management of your existing domain name to Route 53. When you purchase new domains via Route 53, the service will automatically configure a Hosted Zone for each domain and ensure the privacy of your <a class="keyword" href="http://d.hatena.ne.jp/keyword/WHOIS">WHOIS</a> record at no additional charge. In addition, you benefit from <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>'s consolidated billing to manage your domain name expenses alongside all of your other <a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> resources.</p></blockquote>

<p>この文章見てもしかしてRoute53に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%B8%A5%B9%A5%C8%A5%E9">レジストラ</a>としての機能が実装されたのか？</p>

<p>って半信半疑で少しぐぐってみたけど日本語の情報全然ないから僕の英語力がおかしいのかと思ったんだけど、
ちょっと試してみました。</p>

<p>上の文章を要約すると</p>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> Route53 で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>のお買い物ができるようになりました（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%B8%A5%B9%A5%C8%A5%E9">レジストラ</a>になりました）。</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>の転送もできます。</li>
<li>Route53 で購入した<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>は自動的に Hosted Zone が構成されます。</li>
<li>何もしなくても<a class="keyword" href="http://d.hatena.ne.jp/keyword/WHOIS">WHOIS</a>レコードからプライバシーが保護されます。</li>
<li>支払いは<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>の他のサービスの利用料金と統合して請求されます。</li>
</ol>


<p>ものは試しなのでやってみました</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>買ってみる</h2>

<ul>
<li>Route53のダッシュボードでDomainsを選択</li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020330.png" alt="f:id:wnoguchi0727:20140802020330p:plain" title="f:id:wnoguchi0727:20140802020330p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>検索してみた</li>
</ul>


<p><code>foo-bar-blah.com</code> はもう僕がお名前.comで取得しちゃっているので買えません。<br/>
<code>foo-bar-blah.jp</code> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>は $100 だそうです。ぼったくり価格ｗ</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020333.png" alt="f:id:wnoguchi0727:20140802020333p:plain" title="f:id:wnoguchi0727:20140802020333p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>今回は <code>foo-bar-blah.net</code> を取得することにしました。<br/>
Continue をクリック。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020332.png" alt="f:id:wnoguchi0727:20140802020332p:plain" title="f:id:wnoguchi0727:20140802020332p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>技術者情報を入力します。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/WHOIS">WHOIS</a>で個人情報が大公開されないようにするために Privacy Protection を Yes とするのがポイント。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802024714.png" alt="f:id:wnoguchi0727:20140802024714p:plain" title="f:id:wnoguchi0727:20140802024714p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>最終的な確認画面。規約に同意したらチェックして購入を確定する。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020335.png" alt="f:id:wnoguchi0727:20140802020335p:plain" title="f:id:wnoguchi0727:20140802020335p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>の登録リクエストが正常に送信されたことが確認できる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020336.png" alt="f:id:wnoguchi0727:20140802020336p:plain" title="f:id:wnoguchi0727:20140802020336p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>ダッシュボードに戻ってみると Domain Registration in Progress となっており、登録中であることがわかる。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020337.png" alt="f:id:wnoguchi0727:20140802020337p:plain" title="f:id:wnoguchi0727:20140802020337p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>しばらくすると Domains のメニューで選択した時の一覧に先ほど購入した<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>がリストアップされた。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020339.png" alt="f:id:wnoguchi0727:20140802020339p:plain" title="f:id:wnoguchi0727:20140802020339p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>Hosted Zoneも自動的に構成されており、すぐに A レコード等を追加して使いはじめることができるようになっていた。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802023645.png" alt="f:id:wnoguchi0727:20140802023645p:plain" title="f:id:wnoguchi0727:20140802023645p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>すごいな・・・。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>移管してみる</h2>

<p>お名前.comで取得したちょうど期限が切れそうな<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>が合ったのでRoute53に転送しました。</p>

<p>まずは Transfer Domain をクリックする。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020338.png" alt="f:id:wnoguchi0727:20140802020338p:plain" title="f:id:wnoguchi0727:20140802020338p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>移管したい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>を検索する。<br/>
今回はもうすぐ有効期限が切れそうな<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a> <code>cloud-clipboard.com</code> を選択した。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020340.png" alt="f:id:wnoguchi0727:20140802020340p:plain" title="f:id:wnoguchi0727:20140802020340p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>AuthCode 等を入力して確定。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020341.png" alt="f:id:wnoguchi0727:20140802020341p:plain" title="f:id:wnoguchi0727:20140802020341p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>これで移管の申請は完了。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802020342.png" alt="f:id:wnoguchi0727:20140802020342p:plain" title="f:id:wnoguchi0727:20140802020342p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p><del>たぶんもう少ししたら結果出ると思う（2014/08/01深夜）。</del></p>

<p>Domain transfer in progress となり、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>移管の手続きが始まったようです（2014/08/02朝）。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140802/20140802085611.png" alt="f:id:wnoguchi0727:20140802085611p:plain" title="f:id:wnoguchi0727:20140802085611p:plain" class="hatena-fotolife" itemprop="image"></span></p>

<p>Geographic Routing with Geo <a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a> の項についてはよくわかりませんでしたが、
負荷分散的な話でしょうか。誰か教えてください。。。</p>

<p>Lower Prices for <a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a> Queries では 8/1 から Route53 へのクエリ問合せが20%安くなったよって言ってるんでしょうか。</p>

<p>うーん、英語は難しいですね。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS X Mavericksでawscliをインストールする
BASENAME: 2014/07/29/083626
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/29/2014 08:36:26
CATEGORY: awscli
CATEGORY: Python
CATEGORY: OS X
CATEGORY: Mavericks
CATEGORY: Homebrew
CATEGORY: jq
-----
BODY:
<p>家で余ってた<a class="keyword" href="http://d.hatena.ne.jp/keyword/MBA">MBA</a>のセットアップ。<br/>
ついでに jq もインストールする。<br/>
以前は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B4%C4%B6%AD%CA%D1%BF%F4">環境変数</a>の設定周りがごちゃごちゃしてた気がするんだよな・・・。</p>

<h2>前提条件</h2>

<ul>
<li>デフォルトの<a class="keyword" href="http://d.hatena.ne.jp/keyword/python">python</a>は無視したい（homebrewで入れる）</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a></li>
<li><code>/etc/paths</code> を少しいじってる（<code>/usr/local/bin/</code> の<a class="keyword" href="http://d.hatena.ne.jp/keyword/python">python</a> が使われるようにして
る）</li>
</ul>


<h2>インストール</h2>

<p>意外とあっさり入った。</p>

<pre class="code" data-unlink>brew install python
pip install awscli
brew install jq</pre>


<h3>デフォルトで入っている<a class="keyword" href="http://d.hatena.ne.jp/keyword/python">python</a>とのバージョン比較（3014/07/29現在）</h3>

<pre class="code" data-unlink>[noguchiwataru@noguchiwataru-no-MacBook-Air] ~
% python --version
Python 2.7.8
[noguchiwataru@noguchiwataru-no-MacBook-Air] ~
% /usr/bin/python --version
Python 2.7.5</pre>


<h2>設定</h2>

<p>アクセストークンはIAMから発行すること。<br/>
間違っても<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>アカウント直で発行しないこと。死ぬ。<br/>
また、出力フォーマットはjqで整形できるので<a class="keyword" href="http://d.hatena.ne.jp/keyword/JSON">JSON</a>が望ましい。</p>

<pre class="code" data-unlink>% aws configure
AWS Access Key ID [None]: your_access_key_id
AWS Secret Access Key [None]: your_secret_access_key
Default region name [None]: ap-northeast-1
Default output format [None]: json</pre>


<p>以下のようにすると設定ファイルが作成されていることがわかる。</p>

<pre class="code" data-unlink>% ls -F ~/.aws/   
config</pre>


<p>中身はこんな感じ。</p>

<pre class="code" data-unlink>[default]
output = json
region = ap-northeast-1
aws_access_key_id = your_access_key_id
aws_secret_access_key = your_secret_access_key</pre>


<h2>動作確認</h2>

<p>次のコマンドが動作すればOK。</p>

<pre class="code" data-unlink>% aws ec2 describe-instances | jq &#39;.&#39;</pre>


<p>補完機能を有効にする</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a></h3>

<p>一番最後の行に以下の1行を入れる。<br/>
一番最後じゃないと動かなかった気がする。<br/>
たぶんデフォルトでパスが通っている場所においてあると思う。</p>

<pre class="code" data-unlink><span class="synComment"># ~/.zshrc</span>
<span class="synComment"># (snip)</span>
<span class="synStatement">source</span> aws_zsh_completer.sh
</pre>


<p>で</p>

<pre class="code" data-unlink><span class="synStatement">source</span> ~/.zshrc
</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/bash">bash</a></h3>

<p><code>~/.bashrc</code> じゃだめなので注意。</p>

<pre class="code" data-unlink><span class="synComment"># ~/.bash_profile</span>
<span class="synStatement">complete</span> <span class="synSpecial">-C</span> aws_completer aws
</pre>


<p>で</p>

<pre class="code" data-unlink><span class="synStatement">source</span> ~/.bash_profile
</pre>


<h2>References</h2>

<ol>
<li><a href="http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html">Configuring the AWS Command Line Interface</a></li>
<li><a href="http://blog.pg1x.com/entry/2014/02/19/222928">Macのzshでawscliの補完を有効化する - 戦場のプログラマー</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 「hbstudy#60 SerfとConsulでシステム運用を楽しくしよう！」に行ってきました＆Serf試してみました
BASENAME: 2014/07/21/231327
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/21/2014 23:13:27
CATEGORY: 勉強会
CATEGORY: hbstudy
CATEGORY: インフラエンジニア
CATEGORY: オーケストレーション
CATEGORY: Serf
CATEGORY: Consul
CATEGORY: インフラ
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721232129.png
-----
BODY:
<h2>hbstudy#60</h2>

<p>行ってまいりました！今回は実際にSerfを使ってみましたので、お手すきの方は是非ごらんください。</p>

<p>今回の勉強会のToggeterまとめはこちらになっています！前佛さんが作成されました。</p>

<ul>
<li><a href="http://togetter.com/li/695827">#hbstudy 第60回： SerfとConsulでシステム運用を楽しくしよう！のまとめ - Togetterまとめ</a></li>
</ul>


<h3>参加前</h3>

<p><del>繰り上がるつもり・・・！！</del></p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721230832.png" alt="f:id:wnoguchi0727:20140721230832p:plain" title="f:id:wnoguchi0727:20140721230832p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>繰り上がりきたああああああ！（7/17）</p>

<h3>概要</h3>

<ul>
<li>2014/07/20(日)</li>
<li><p>東京都東京都新宿区西新宿1-5-11 新宿三葉ビル6F</p></li>
<li><p><a href="http://connpass.com/event/7322/">hbstudy#60 - connpass</a></p></li>
<li><a href="http://connpass.com/event/7323/">hbstudy#60 懇親会 - connpass</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a>: <a href="https://twitter.com/search?q=%23hbstudy&amp;src=typd">#hbstudy</a></li>
</ul>


<p>hbstudyの趣旨についてですが、インフラエンジニアの勉強会です。</p>

<ul>
<li><a href="http://www.slideshare.net/toshiak_netmark/bbstudy?from=ss_embed">インフラエンジニア勉強会hbstudyについて</a></li>
</ul>


<p>世の中のエンジニアは開発と運用とを掛け持ちされている方も多いかと思われます。<br/>
ネットワーク機器のコンフィグをいじることはなくても<a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a>系、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a> Server系に限らずサーバの設定やアプリケーションのデプロイ作業等はやったことがある方は結構多いと思います。<br/>
Webエンジニアであるからこそ、密接に関わるインフラに対する興味も尽きないわけで、その理解を深めるためにも参加してまいりました。</p>

<h2>会場到着（開始前）</h2>

<p>会場に到着すると会場の設営はほとんど済んでいるようでした。<br/>
参加費1,000円を渡すと首から下げるIDカードを貰いました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721230850.png" alt="f:id:wnoguchi0727:20140721230850p:plain" title="f:id:wnoguchi0727:20140721230850p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>さすがに百何十人収容できる会議室は広い。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Wi-Fi">Wi-Fi</a>はこの段階ではつながらないようだったため、ちょっと<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C6%A5%B6%A5%EA%A5%F3%A5%B0">テザリング</a>で対応しました。
（のちほどつながるようになりました）</p>

<p>勉強会が始まる段になると、株式会社ハートビーツの馬場さんが司会をつとめてくださいました。</p>

<h2>SerfとConsulで運用を楽しくしよう！</h2>

<ul>
<li>最近注目されているSerfとConsulの話と、活用して運用を楽しくしたいね！という話をしていただきます</li>
<li>前佛 雅人さん</li>
<li><a href="https://twitter.com/zembutsu">@zembutsu</a></li>
</ul>


<p>いろいろとパロディを交えて楽しく講演をしていただきました。<br/>
スライドはこちらです。</p>

<iframe src="//www.slideshare.net/slideshow/embed_code/37218036" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/zembutsu/re-is-the-order-an-automation-2nd" title="Re: ご注文は自動化ですか？[2]" target="_blank">Re: ご注文は自動化ですか？[2]</a> </strong> from <strong><a href="http://www.slideshare.net/zembutsu" target="_blank">Masahito Zembutsu</a></strong> </div></p>

<h3>Serfについて</h3>

<p><a href="http://www.serfdom.io/">Serf</a></p>

<p>軽量な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>とのことです。</p>

<p>スクリーンには<a class="keyword" href="http://d.hatena.ne.jp/keyword/VirtualBox">VirtualBox</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を3台動かしている様子が映され、Serfの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>が構成するデモをが行われました。</p>

<ul>
<li>バイナリ1個あれば動く</li>
<li>コマンド1個叩くだけで動く</li>
</ul>


<p>同期してserf membersで表示される情報は</p>

<ul>
<li>ホスト名</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a></li>
<li>ポート</li>
<li>alive, left 等のステータス</li>
</ul>


<p><strong>情報がすぐに同期される</strong> のがポイントらしいです。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>が10台でも100台でもすぐに同期できる。</li>
</ul>


<p>ということがわかっていればもう <del>帰宅</del> 寝ていても大丈夫とのことです。
（そんなことあない！）</p>

<ul>
<li><a href="http://www.slideshare.net/zembutsu/is-the-order-an-automation-of-operation-and-monitoring">ご注文は監視自動化ですか？</a></li>
<li><a href="http://pocketstudio.jp/log3/2014/04/18/what_is_consul/">Consulを使ってみた | Pocketstudio.jp log3</a></li>
<li><a href="http://www.slideshare.net/zembutsu/serf-to-excel-and-consul-qpstudy">Serf2Excel - Serf を実運用に活かす話 + Consul もあるよ</a></li>
</ul>


<p>資料を作るときは自動保存するようにしましょうねと注意が促されました。確かに、苦労して作成したデータが保存されていなかったということはよくあると思います。</p>

<p>最近は新しい技術をキャッチアップしていくのが結構大変ですね。Dockerとか流行っています。</p>

<p>Docker Meetup Tokyo行ってみたかったです。</p>

<p>Dockerの講演でも使用されたスライドだそうですが、今回はバージョン1.02だそうです。</p>

<p>頭の悪い資料を作成することで有名とのことですが、そんなことはありません。</p>

<p>ここで、農業の話になり、ラックのようなところでレタスが<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BA%CF%C7%DD">栽培</a>されているスライドが映しだされました。</p>

<p>ここで、 <strong>ラックマウントレタス</strong> という造語を思いついた方は少なく無いと思います。</p>

<p>農業でやるとでやるとものすごい初期投資がかかるが、この業界でも監視自動化とかやろうと思えばすぐに試すことができる。</p>

<h3>Docker</h3>

<ul>
<li>Docker control group</li>
<li>namespace</li>
<li>aufs</li>
</ul>


<p>まずは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>を使ってみる</p>

<ul>
<li>Dockerはエコシステム</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Eucalyptus">Eucalyptus</a> Confでしゃべったことがあるそうです。</li>
</ul>


<p>自動化は</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a></li>
<li>機械化</li>
</ul>


<p>を包含する物</p>

<p>Fun（楽しい）とEasy（楽）は近づけることができる。</p>

<ul>
<li>一斉に処理する</li>
<li>注意として、SerfとConsulは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a>のところしかしてくれない。</li>
</ul>


<p>制御的な意味合いかな、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DF%A5%C9%A5%EB%A5%A6%A5%A7%A5%A2">ミドルウェア</a>の設定はChef等でやる必要があると。<br/>
ごめんなさい、間違っていたら指摘をお願いします。</p>

<h3>Serf</h3>

<ul>
<li>ノードの同期が数秒単位</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BF%A5%B0%B5%A1%C7%BD">タグ機能</a>（Web、開発）</li>
<li>障害、フェイルオーバ情報の同期</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/wget">wget</a>でバイナリ1個とってくるだけで動作</li>
<li>多くのプラットフォームで動作</li>
<li>HoshiCorpの方が作った<a class="keyword" href="http://d.hatena.ne.jp/keyword/OSS">OSS</a>プロダクト</li>
</ul>


<p>Serfには以下の機能があるそうです。</p>

<ul>
<li>メンバ管理</li>
<li>障害検知</li>
<li><p>カスタムイベント</p></li>
<li><p>イベントをトリガとして動作する</p></li>
<li>シェルで動くものならなんでも実行できる</li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>参加・離脱</p></li>
<li><p>参加したら監視システムに設定を投入するとか</p></li>
<li>離脱したらLBから切り離すとか</li>
</ul>


<h3>メンバ管理</h3>

<p>タグごとにグループ処理できる</p>

<h3>さて</h3>

<p>AとBがある</p>

<p>AからBにserf joinで両方を認識する</p>

<p>これで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>が構成される。</p>

<p>Cが参加したいとき</p>

<ul>
<li>CがAに参加した</li>
<li>AがCに応答する</li>
<li>BもMemberjoinを受け取る</li>
<li>以降はランダムに死活監視</li>
<li>SPOFがない</li>
</ul>


<h3>Bが突然の死</h3>

<ol>
<li>死んだのを認識</li>
<li>それでもA, Cは定期的にBをチェックするが</li>
<li><p>こいつだめだと思われたら容赦なく外す</p></li>
<li><p>多数決論理ではない</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>の死に方によってはフラッピングするかもしれない</li>
</ol>


<h3>イベントが同期される</h3>

<ul>
<li>参加・離脱</li>
<li>伝搬速度はSerfのサイトでシミュレーションできる</li>
<li>理論値で1秒で95%が、2秒で100%（<a href="http://www.serfdom.io/docs/internals/simulator.html">Convergence Simulator - Serf</a>）</li>
</ul>


<h3>運用例</h3>

<ul>
<li>WebとLB</li>
<li>ChefとPuppetとは違う。混同しないこと。</li>
<li>メンバーの管理、イベントの発行</li>
<li>serf agentコマンドだけで立ち上がる</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%D9%A5%F3%A5%C8%A5%CF%A5%F3%A5%C9%A5%E9">イベントハンドラ</a></h3>

<ul>
<li>イベントに応じていろんなコマンドを実行する</li>
<li>起動オプションを<a class="keyword" href="http://d.hatena.ne.jp/keyword/json">json</a>ファイルにまとめられる</li>
</ul>


<p>→日々の運用管理を楽にしてくれる</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/LVS">LVS</a>に応用する</h3>

<ul>
<li>致命的な問題がある</li>
<li>ノード自身が停止は分かる</li>
<li>サービスの停止はわからない</li>
</ul>


<h3>そこでConsulですよ</h3>

<ul>
<li><strong>サービス検出</strong></li>
<li>障害検知</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Nagios">Nagios</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>みたいな方法で検出する</li>
<li>HTTP <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>または<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>で結果を返すことができる</li>
<li>Zabbixの監視項目を動的化とかね</li>
</ul>


<p>これらを応用すると</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>みたいにOpenStackの上でオートスケールとかできるんじゃないでしょうか（聞き取り間違ってたらゴメンナサイ）</p>

<ul>
<li>Web UI</li>
<li>HTTP <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a></li>
<li>ローカルの<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>と連携することができる</li>
<li>.internal</li>
<li>Consulは開発途上です</li>
<li>Webサーバのダウンをトリガとして一斉にコマンドを実行するなど</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C1%B5%BF%B1%FE%C5%FA">質疑応答</a></h3>

<h4>Q. なんでノード指定してjoinしてるのですか？</h4>

<ol type="a">
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%C1%A5%AD%A5%E3%A5%B9%A5%C8">マルチキャスト</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>に対応している環境であれば参加先のノード名を指定する必要はない。
今回のデモもdiscoverオプションでやっています。</li>
</ol>


<p>Consul</p>

<p>サービスが消えるとクライアント自身が検出してサーバに送りつける
envconsul
Helokuもどきをつくれる
Qiita上にもいくつか投稿したかも</p>

<ul>
<li>軽量でシンプル</li>
<li>こんな複雑じゃない<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>ってなかったよね！！</li>
</ul>


<p>たしかにPacemakerやHeartbeatでHA<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>構成する実験しようとしてWebサーバのHA<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>構成するだけでものすごい苦労した記憶あります。<br/>
私のスキルセットが足りないのが大きな一因なのかもしれませんが・・・。</p>

<h3>実践Zabbix</h3>

<ul>
<li>Zabbixの管理の自動化</li>
<li>興味があったら見てね〜</li>
<li>Zabbixには<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>がある</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/cacti">cacti</a>はもう<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A5%EF%A5%B3%A5%F3">オワコン</a>なのだろうか。<br/>
たしかに<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>めんどくさい。<br/>
グラフ系はZabbixよく聞くようになったなあ・・・。</p>

<p><strong>楽しいと楽をつなげるようなことができればいいな。</strong></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a> Group
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a>の部屋</p>

<p>を用意しました（します）とのことです。</p>

<h2>休憩入ります～15:10</h2>

<p>130人以上が一斉につなぐと<a class="keyword" href="http://d.hatena.ne.jp/keyword/Wi-Fi">Wi-Fi</a>重っ！</p>

<h2>「consulについて」</h2>

<ul>
<li>HashiCorpの新しい<a class="keyword" href="http://d.hatena.ne.jp/keyword/OSS">OSS</a>プロダクトConsulの紹介と簡単な応用事例等。</li>
<li>Michael H. Oshitaさん</li>
<li><a href="https://twitter.com/ijin">@ijin</a></li>
</ul>


<p><a href="http://www.hashicorp.com/blog/consul.html">Consul - HashiCorp</a></p>

<p>替わりましてijinさんの公演となりました。<br/>
スライドはこちらです。</p>

<script async class="speakerdeck-embed" data-id="ecb22c40f371013196337e592d7952bc" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"></script>


<h3>Consulについてもっと詳しく</h3>

<ul>
<li>10年ぐらい日本住んでらっしゃる</li>
<li>本名マイケルさん</li>
<li>トラブル☆しゅーたーず という障害対応の勉強会をやります（8/9）</li>
</ul>


<h4>トラブル☆しゅーたーずへの参加はこちらから！</h4>

<ul>
<li><a href="http://www.zusaar.com/event/14467014">トラブル☆しゅーたーず #08　〜　虹色のくじらを探して　〜 on Zusaar</a></li>
<li><a href="http://heartbeats.jp/hbstudy/2014/07/hbstudy61.html">hbstudy#61 - インフラエンジニア勉強会hbstudy | 株式会社ハートビーツ</a></li>
</ul>


<p>懇親会にも参加しましたがijinさんとよく呼ばれていらっしゃるのでしょうか。<br/>
懇親会でもお話を聞くと<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>にものすごく詳しいそうです。<br/>
うおおおすごい。</p>

<p>HashiCorpの4つめのプロダクト Consul</p>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a></li>
<li>Packer</li>
<li>Serf</li>
<li>Consul</li>
</ol>


<h3>特徴</h3>

<ul>
<li>分散型<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a></li>
<li>簡単にサービス登録</li>
</ul>


<p>画期的なのは</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>またはHTTPでできること</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のデータセンタをまたぐ</li>
<li>KVS（動的な設定情報の置き場所として使っている）</li>
</ul>


<p>構成要素は</p>

<ul>
<li>Consensus Protocol</li>
<li>Gossip Protocol</li>
<li>Sessions(Chuby)</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/TLS">TLS</a> Jespen Testing</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A1%BC%A5%AD%A5%C6%A5%AF%A5%C1%A5%E3">アーキテクチャ</a></h3>

<p>エージェントをそれぞれのサーバに入れてサー<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%E2">バモ</a>ード、またはクライアントモードで動作させる。</p>

<h4>サー<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%E2">バモ</a>ード</h4>

<ul>
<li>ピアセット</li>
<li>その中でleaderを決める</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C8%A5%E9%A5%F3%A5%B6%A5%AF%A5%B7%A5%E7%A5%F3">トランザクション</a></li>
<li>通信はゴシップ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%C8%A5%B3%A5%EB">プロトコル</a>で</li>
</ul>


<h3>CONSISTENCY</h3>

<ul>
<li>CAPの定理</li>
<li>raftというものを使用している</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C8%A5%E9%A5%F3%A5%B6%A5%AF%A5%B7%A5%E7%A5%F3">トランザクション</a>のクエリはリーダノードにいってwrite</li>
<li><p>スレーブにレプリケート</p></li>
<li><p>半分以上に行ったらコミット成功とみなす</p></li>
<li><p>quorumにならないとコミットとみなさない</p></li>
<li><p>ネットワークの分断テストはどうするのか</p>

<ul>
<li>JEPSEN TESTINGでシミュレーションしている</li>
</ul>
</li>
</ul>


<h3>Consul agent</h3>

<ul>
<li>foo</li>
<li>bar</li>
<li>baz</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>, HTTPで設定</p>

<ul>
<li>タグservice[redis]</li>
<li>タグservice[01.web]</li>
<li>タグservice[02.web]</li>
</ul>


<pre class="code" data-unlink>dig @localhost -p8600 bar.node.consul</pre>




<pre class="code" data-unlink>01.web.service.consul</pre>


<ul>
<li>serviceでグルーピングすると<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のIPがかえってくる</li>
<li>v0.2までは<a class="keyword" href="http://d.hatena.ne.jp/keyword/TTL">TTL</a>はデフォルトで0</li>
<li>以降はキャッシュできるようになった</li>
</ul>


<h3>key/value endpoint</h3>

<pre class="code" data-unlink>/v1/kv/&lt;key&gt;</pre>


<ul>
<li>RESTful</li>
<li>GET, PUT, DESTROY</li>
</ul>


<h4>kv</h4>

<ul>
<li>ここでもjqコマンドが使われている</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/base64">base64</a>で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A8%A5%F3%A5%B3%A1%BC%A5%C9">エンコード</a></li>
<li>生表示は <code>?raw</code> をつける</li>
</ul>


<h3>catalog</h3>

<h3>health</h3>

<ul>
<li>ヘルスチェック</li>
<li>このへんは<a class="keyword" href="http://d.hatena.ne.jp/keyword/json">json</a>で定義する</li>
<li>exitコードは<a class="keyword" href="http://d.hatena.ne.jp/keyword/nagios">nagios</a>っぽく</li>
<li>内部<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>として使用できる</li>
</ul>


<h3>ここでデモ</h3>

<p>こちらのデモはグッときました。<br/>
関連記事はこちら。</p>

<ul>
<li><p><a href="http://ijin.github.io/blog/2014/07/11/mysql-failover-with-consul/">ConsulによるMySQLフェールオーバー - @ijin</a></p></li>
<li><p>Ansible: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%EC%A1%BC%A5%E0%A5%EF%A1%BC%A5%AF">フレームワーク</a>（構成管理<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>でChef, Puppetの親戚。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Python">Python</a>で書かれている）</p></li>
<li>インベントリマネージメント</li>
</ul>


<p>Ansibleの場合は</p>

<ul>
<li>staticなhostsファイルに対して<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を打つなど</li>
<li>サーバの台数が増えてくるとつらい</li>
<li><p>Ansibleにはダイナミックインベントリという機能がある</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/MySQL">MySQL</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%D7%A5%EA%A5%B1%A1%BC%A5%B7%A5%E7%A5%F3">レプリケーション</a>しているとき</p></li>
<li>マスタが死んだとき</li>
<li>MHA</li>
<li><p>一番バイナリログが進んでいる奴に対して</p></li>
<li><p>VIPを変える</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>でカタログの<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>を変更する</li>
</ul>


<p>↓</p>

<ul>
<li>Consulでうまく連携する方法思いついたのでデモ</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>引いて得られるIPが変わってスレーブがマスタに昇格する様子が映し出されます。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D9%A5%F3%A5%C1%A5%DE%A1%BC%A5%AF">ベンチマーク</a></h3>

<h4>GET</h4>

<p>0.2.0→0.3.0のバージョンアップで</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/TTL">TTL</a>キャッシュで5倍ぐらいに向上した</li>
<li>consistensy</li>
</ul>


<p>PUTについても改善。</p>

<p>consul-<a class="keyword" href="http://d.hatena.ne.jp/keyword/api">api</a>はGo言語で書かれている。</p>

<p><strong>consulイイよ！</strong></p>

<h4>おしらせ</h4>

<ul>
<li>8/9とらぶるしゅーたずきてね</li>
<li>今日この中に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B5%A4%AF%A4%E9%A4%CE%A5%AF%A5%E9%A5%A6%A5%C9">さくらのクラウド</a>の横田さんがいます！</li>
<li>SerfとConsulをやった結果をブログでアップしてください！</li>
</ul>


<p>とのことでした。</p>

<p>以前<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B5%A4%AF%A4%E9%A4%CE%A5%AF%A5%E9%A5%A6%A5%C9">さくらのクラウド</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>を<a class="keyword" href="http://d.hatena.ne.jp/keyword/curl">curl</a>で叩いて操作して、結果をjqで整形して見るようなエントリを書いて、横田さんにリツイートしてもらったのですが、是非一度お目にかかりたかったのでご挨拶してまいりました。<br/>
恐れ多くも<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B5%A4%AF%A4%E9%A4%CE%A5%AF%A5%E9%A5%A6%A5%C9">さくらのクラウド</a>のクーポン券を頂戴いたしました。<br/>
大切に使わせていただこうと思います。<br/>
横田さんありがとうございます！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721230957.png" alt="f:id:wnoguchi0727:20140721230957p:plain" title="f:id:wnoguchi0727:20140721230957p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>懇親会</h2>

<p>一次会、二次会にまで参加してまいりました。<br/>
一応以前はインフラもちょっとは触っていましたが、<br/>
私とは比較にならないほどすごくレベルの高いインフラエンジニアの方々ばかりでした。<br/>
私は現在、Web系の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%B3%AB%C8%AF">システム開発</a>寄りのお仕事をしているのですが、インフラエンジニアの方々の現場の生の声がいろいろ聞けてとても面白かったです。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721231026.png" alt="f:id:wnoguchi0727:20140721231026p:plain" title="f:id:wnoguchi0727:20140721231026p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>一人大反省会</h2>

<p>ちょっといろんな運用自動化系の知識が曖昧だったので整理が必要だなと感じました。今日だけで言葉だけ聞いたことがある<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DF%A5%C9%A5%EB%A5%A6%A5%A7%A5%A2">ミドルウェア</a>やインフラ基盤用語がいくつもでてきました。</p>

<ol>
<li>Serf: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a></li>
<li>Consul: <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%B1%A5%B9%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3">オーケストレーション</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a></li>
<li>Ansible: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Python">Python</a>で書かれた構成管理<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>（Chefの親戚）</li>
<li>Fabric: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Python">Python</a>製のデプロイ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Capistrano">Capistrano</a>でやっとピンときた。</li>
<li>Sensu: <a class="keyword" href="http://d.hatena.ne.jp/keyword/Nagios">Nagios</a>を現代化した版。みんなSensu, Sensuって言ってたのでなんだろうと思ってたら、監視<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>のトレンドは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Nagios">Nagios</a>ではなくSensuなのか！Icingaは前に検討したことあったけど、あんまりはやってないのかな。</li>
<li><p>SoftLayer: 懇親会の席ではデータセンターの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9">クラウド</a>版と言われて理解できなかったのですが、調べてみたら物理サーバーやネットワークの引き回しのレベルでいじれるようにした<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9">クラウド</a>プラットフォームなんだろうか？</p></li>
<li><p><a href="http://blog.glidenote.com/blog/2013/11/26/sensu/">監視ソフトをNagiosからSensuに切り替えて2ヶ月経ったのでまとめた - Glide Note - グライドノート</a></p></li>
<li><a href="http://qiita.com/spesnova/items/f9a8c9661861cc453ead">chef - 次世代監視ツール Sensu リファレンス - Qiita</a></li>
<li><a href="https://www.icinga.org/">Home - Icinga: Open Source Monitoring</a></li>
<li><a href="http://codezine.jp/article/detail/7613">IBMの新しい高性能クラウド「SoftLayer」を使ってみた　～アカウント開設からインスタンス立ち上げまで （1/4）：CodeZine</a></li>
</ol>


<h2>やってみた（次の日）</h2>

<p>「SerfとConsulをやってみた結果をブログでアップしてくださいねー！」とのことでしたので、やってみました。<br/>
今回は自分のデスクトップマシンで実験してみようと思います。</p>

<p>僕のデスクトップPCは無駄に性能がいいです。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Core%20i7">Core i7</a>に実装メモリ32GB。<br/>
ディスプレイは最低2枚ないと生きていけないですね・・・。<br/>
最近<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B0%A5%E9%A5%DC">グラボ</a>の調子が悪くて、引っ越してきてから上手く動かないんです。<br/>
これがあればディスプレイ4台まではいけるんだけど・・・。<br/>
電源の容量足りないのかな・・・？<br/>
しかたないから<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A5%F3%A5%DC%A1%BC%A5%C9">オンボード</a>でデュアルしてます。</p>

<p>という話は置いておいて、こういうことやってるから私はあまりお金がないので、
この無駄に性能のいいマシンで serf の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>を構成してみたいと思います。</p>

<h3>数の暴力</h3>

<p>とりあえず、私はそこまで頭が良くないので Serf の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF%A5%EA%A5%F3%A5%B0">クラスタリング</a>のさわりだけやってみます。</p>

<p>32GBの実装メモリがあるので、これを可能な限り活用してみようと思います。<br/>
とりあえず必要最小限のアプリだけ立ち上げてメモリの使用量を減らしまくります。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721231045.png" alt="f:id:wnoguchi0727:20140721231045p:plain" title="f:id:wnoguchi0727:20140721231045p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>1<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>512MBの割り当てとして立ち上げた場合</p>

<pre class="code" data-unlink>(29 - 2) * 1000 / 512 = 52</pre>


<p>52台分の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>が構成できます。</p>

<p>もっと頑張れば</p>

<pre class="code" data-unlink>(29 - 0.5) * 1000 / 512 ≒ 56</pre>


<p>いける。</p>

<h3>まずは2台でやってみた</h3>

<p>50台近くも立てる予定なので、こんなの<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>使わないとやってられないのでこの段階から<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>を使います。<br/>
まずは2台。</p>

<pre class="code" data-unlink>C:\Users\wnoguchi\Documents\vagrant\serf&gt;vagrant init chef/centos-6.5
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.</pre>


<h4>Vagrantfile抜粋</h4>

<pre class="code" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synComment"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>
<span class="synType">VAGRANTFILE_API_VERSION</span> = <span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>

<span class="synType">Vagrant</span>.configure(<span class="synType">VAGRANTFILE_API_VERSION</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  <span class="synComment"># Every Vagrant virtual environment requires a box to build off of.</span>
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">chef/centos-6.5</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synSpecial">&quot;</span><span class="synConstant">virtualbox</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">vb</span>|
    vb.customize [<span class="synSpecial">&quot;</span><span class="synConstant">modifyvm</span><span class="synSpecial">&quot;</span>, <span class="synConstant">:id</span>, <span class="synSpecial">&quot;</span><span class="synConstant">--memory</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">512</span><span class="synSpecial">&quot;</span>]
  <span class="synStatement">end</span>

  config.vm.define <span class="synSpecial">&quot;</span><span class="synConstant">web_1</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
    instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.10</span><span class="synSpecial">&quot;</span>
  <span class="synStatement">end</span>

  config.vm.define <span class="synSpecial">&quot;</span><span class="synConstant">web_2</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
    instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.11</span><span class="synSpecial">&quot;</span>
  <span class="synStatement">end</span>

<span class="synStatement">end</span>
</pre>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>2台立ち上げ</h4>

<pre class="code" data-unlink>C:\Users\wnoguchi\Documents\vagrant\serf_minimum&gt;vagrant up
Bringing machine &#39;web_1&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_2&#39; up with &#39;virtualbox&#39; provider...
==&gt; web_1: Box &#39;chef/centos-6.5&#39; could not be found. Attempting to find and install...
    web_1: Box Provider: virtualbox
    web_1: Box Version: &gt;= 0
==&gt; web_1: Loading metadata for box &#39;chef/centos-6.5&#39;
    web_1: URL: https://vagrantcloud.com/chef/centos-6.5
==&gt; web_1: Adding box &#39;chef/centos-6.5&#39; (v1.0.0) for provider: virtualbox
    web_1: Downloading: https://vagrantcloud.com/chef/centos-6.5/version/1/provider/virtualbox.box
    web_1: Progress: 100% (Rate: 5908k/s, Estimated time remaining: --:--:--)
==&gt; web_1: Successfully added box &#39;chef/centos-6.5&#39; (v1.0.0) for &#39;virtualbox&#39;!
==&gt; web_1: Importing base box &#39;chef/centos-6.5&#39;...
==&gt; web_1: Matching MAC address for NAT networking...
==&gt; web_1: Checking if box &#39;chef/centos-6.5&#39; is up to date...
==&gt; web_1: Setting the name of the VM: serf_minimum_web_1_1405924483325_20292
==&gt; web_1: Clearing any previously set network interfaces...
==&gt; web_1: Preparing network interfaces based on configuration...
    web_1: Adapter 1: nat
    web_1: Adapter 2: hostonly
==&gt; web_1: Forwarding ports...
    web_1: 22 =&gt; 2222 (adapter 1)
==&gt; web_1: Running &#39;pre-boot&#39; VM customizations...
==&gt; web_1: Booting VM...
==&gt; web_1: Waiting for machine to boot. This may take a few minutes...
    web_1: SSH address: 127.0.0.1:2222
    web_1: SSH username: vagrant
    web_1: SSH auth method: private key
    web_1: Warning: Connection timeout. Retrying...
==&gt; web_1: Machine booted and ready!
==&gt; web_1: Checking for guest additions in VM...
==&gt; web_1: Configuring and enabling network interfaces...
==&gt; web_1: Mounting shared folders...
    web_1: /vagrant =&gt; C:/Users/wnoguchi/Documents/vagrant/serf_minimum
==&gt; web_2: Box &#39;chef/centos-6.5&#39; could not be found. Attempting to find and install...
    web_2: Box Provider: virtualbox
    web_2: Box Version: &gt;= 0
==&gt; web_2: Loading metadata for box &#39;chef/centos-6.5&#39;
    web_2: URL: https://vagrantcloud.com/chef/centos-6.5
==&gt; web_2: Adding box &#39;chef/centos-6.5&#39; (v1.0.0) for provider: virtualbox
==&gt; web_2: Importing base box &#39;chef/centos-6.5&#39;...
==&gt; web_2: Matching MAC address for NAT networking...
==&gt; web_2: Checking if box &#39;chef/centos-6.5&#39; is up to date...
==&gt; web_2: Setting the name of the VM: serf_minimum_web_2_1405924553780_11101
==&gt; web_2: Fixed port collision for 22 =&gt; 2222. Now on port 2200.
==&gt; web_2: Clearing any previously set network interfaces...
==&gt; web_2: Preparing network interfaces based on configuration...
    web_2: Adapter 1: nat
    web_2: Adapter 2: hostonly
==&gt; web_2: Forwarding ports...
    web_2: 22 =&gt; 2200 (adapter 1)
==&gt; web_2: Running &#39;pre-boot&#39; VM customizations...
==&gt; web_2: Booting VM...
==&gt; web_2: Waiting for machine to boot. This may take a few minutes...
    web_2: SSH address: 127.0.0.1:2200
    web_2: SSH username: vagrant
    web_2: SSH auth method: private key
    web_2: Warning: Connection timeout. Retrying...
==&gt; web_2: Machine booted and ready!
==&gt; web_2: Checking for guest additions in VM...
==&gt; web_2: Configuring and enabling network interfaces...
==&gt; web_2: Mounting shared folders...
    web_2: /vagrant =&gt; C:/Users/wnoguchi/Documents/vagrant/serf_minimum</pre>


<h4>Serfのインストール</h4>

<pre class="code" data-unlink>$ wget https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip
Cannot write to “(snip)” (File name too long).</pre>


<p>名前長すぎ！！って怒られてしまった。<br/>
また、このboxイメージだとunzipコマンドが入っていないっぽいのでインストール。</p>

<pre class="code" data-unlink>sudo yum -y install unzip</pre>


<p>もとい、</p>

<pre class="code" data-unlink>wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip
unzip 0.6.3_linux_amd64.zip
sudo mv serf /usr/local/bin/</pre>


<p>バージョンを確認する。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf version
Serf v0.6.3
Agent Protocol: 4 (Understands back to: 2)</pre>


<h4>Serfエージェントを立ち上げる</h4>

<p><code>&amp;</code> バックグランドジョブにしないとプロンプトが帰ってこないから注意。</p>

<ul>
<li>host1にて</li>
</ul>


<pre class="code" data-unlink>serf agent -node=host1 &amp;</pre>


<ul>
<li>host2にて</li>
</ul>


<pre class="code" data-unlink>serf agent -node=host2 &amp;</pre>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>に加わる</h4>

<p>mDNS(Multicast <a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>)が有効かどうかはわからないので（このへん初心者）、<code>serf join</code> コマンドからとりあえず入門してみることにした。</p>

<ul>
<li>host1にて</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ serf members
    2014/07/21 07:04:28 [INFO] agent.ipc: Accepted client: 127.0.0.1:56604
host1  10.0.2.15:7946  alive</pre>


<p>メンバは自分のみ。</p>

<ul>
<li>host2に加える</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ serf join host2
    2014/07/21 07:04:37 [INFO] agent.ipc: Accepted client: 127.0.0.1:56605
    2014/07/21 07:04:37 [INFO] agent: joining: [host2] replay: false
    2014/07/21 07:04:37 [WARN] memberlist: Failed to resolve host2: lookup host2: no such host
    2014/07/21 07:04:37 [WARN] agent: error joining: lookup host2: no such host
Error joining the cluster: lookup host2: no such host</pre>


<p>あれ、エラー・・・。<br/>
そうだよね、host1がhost2の<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>知ってるわけないもんね・・・。</p>

<ul>
<li>IP直指定でhost2に加える。</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ serf join 192.168.33.11
    2014/07/21 07:11:39 [INFO] agent.ipc: Accepted client: 127.0.0.1:56606
    2014/07/21 07:11:39 [INFO] agent: joining: [192.168.33.11] replay: false
    2014/07/21 07:11:39 [INFO] serf: EventMemberJoin: host2 10.0.2.15
    2014/07/21 07:11:39 [INFO] agent: joined: 1 nodes
Successfully joined cluster by contacting 1 nodes.
[vagrant@localhost ~]$     2014/07/21 07:11:40 [INFO] agent: Received event: member-join
    2014/07/21 07:11:41 [WARN] memberlist: Got ping for unexpected node &#39;host2&#39;
    2014/07/21 07:11:42 [INFO] memberlist: Suspect host2 has failed, no acks received
    2014/07/21 07:11:43 [WARN] memberlist: Got ping for unexpected node &#39;host2&#39;
    2014/07/21 07:11:44 [INFO] memberlist: Suspect host2 has failed, no acks received
    2014/07/21 07:11:44 [WARN] memberlist: Got ping for unexpected node &#39;host2&#39;
    2014/07/21 07:11:45 [INFO] memberlist: Suspect host2 has failed, no acks received
    2014/07/21 07:11:46 [WARN] memberlist: Got ping for unexpected node &#39;host2&#39;
    2014/07/21 07:11:47 [INFO] memberlist: Suspect host2 has failed, no acks received
    2014/07/21 07:11:47 [INFO] memberlist: Marking host2 as failed, suspect timeout reached
    2014/07/21 07:11:47 [INFO] serf: EventMemberFailed: host2 10.0.2.15
    2014/07/21 07:11:48 [INFO] agent: Received event: member-failed</pre>


<p>うまくい・・・ったようにみえて最終的に失敗している。</p>

<ul>
<li>serf members の結果</li>
</ul>


<p>host2との通信が失敗してる（<code>failed</code> となっている）。<br/>
いったんハンドシェイクが成功して繋がらなくなったような感じ。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf members
    2014/07/21 07:12:03 [INFO] agent.ipc: Accepted client: 127.0.0.1:56608
host1  10.0.2.15:7946  alive
host2  10.0.2.15:7946  failed</pre>


<p>まてよ、と思い直す。
Vagrantfileでプライベートネットワークを構成するために<a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>追加してたんだ。
どの<a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>でリッスンしてるかわかんないと通信を確立していい<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>もわからないんじゃないか。</p>

<p>改めてhost1, host2それぞれの<a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>の当たり方を確認してみる。</p>

<ul>
<li>host1</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ ip addr show
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:ce:08:3d brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0
    inet6 fe80::a00:27ff:fece:83d/64 scope link
       valid_lft forever preferred_lft forever
3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:5e:6e:58 brd ff:ff:ff:ff:ff:ff
    inet 192.168.33.10/24 brd 192.168.33.255 scope global eth1
    inet6 fe80::a00:27ff:fe5e:6e58/64 scope link
       valid_lft forever preferred_lft forever</pre>


<ul>
<li>host2</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ ip addr show
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:ce:08:3d brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0
    inet6 fe80::a00:27ff:fece:83d/64 scope link
       valid_lft forever preferred_lft forever
3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:ba:62:c3 brd ff:ff:ff:ff:ff:ff
    inet 192.168.33.11/24 brd 192.168.33.255 scope global eth1
    inet6 fe80::a00:27ff:feba:62c3/64 scope link
       valid_lft forever preferred_lft forever</pre>


<p>NIC3つついてるから eth0 のアドレスで通信を確立したらいいかどうか分かんなくて失敗したのかな。</p>

<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>を指定してSerfエージェントを立ち上げる</h4>

<p>さて、仕切り直し。<br/>
<code>fg</code> してCtrl-C でプロセス殺して以下の設定でエージェント再度起動。</p>

<ul>
<li>host1にて</li>
</ul>


<pre class="code" data-unlink>serf agent -iface=eth1 -node=host1 &amp;</pre>


<ul>
<li>host2にて</li>
</ul>


<pre class="code" data-unlink>serf agent -iface=eth1 -node=host2 &amp;</pre>


<h4>serf joinしてみる</h4>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf join 192.168.33.11
    2014/07/21 07:48:37 [INFO] agent.ipc: Accepted client: 127.0.0.1:56634
    2014/07/21 07:48:37 [INFO] agent: joining: [192.168.33.11] replay: false
    2014/07/21 07:48:37 [INFO] serf: EventMemberJoin: host2 192.168.33.11
    2014/07/21 07:48:37 [INFO] agent: joined: 1 nodes
Successfully joined cluster by contacting 1 nodes.
[vagrant@localhost ~]$     2014/07/21 07:48:38 [INFO] agent: Received event: member-join</pre>


<p>今度は成功したみたいだ。</p>

<h4>serf membersの結果</h4>

<p>どっちもaliveと表示された。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf members
    2014/07/21 07:48:44 [INFO] agent.ipc: Accepted client: 127.0.0.1:56636
host1  192.168.33.10:7946  alive
host2  192.168.33.11:7946  alive</pre>


<ul>
<li>試しにhost2 のSerfエージェントを殺す。</li>
</ul>


<p>上品な方法でシャットダウンするようです。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ fg
serf agent -iface=eth1 -node=host2
^C==&gt; Caught signal: interrupt
==&gt; Gracefully shutting down agent...
    2014/07/21 07:51:04 [INFO] agent: requesting graceful leave from Serf
    2014/07/21 07:51:05 [INFO] serf: EventMemberLeave: host2 192.168.33.11
    2014/07/21 07:51:05 [INFO] agent: requesting serf shutdown
    2014/07/21 07:51:05 [INFO] agent: shutdown complete</pre>


<ul>
<li>host1側でメンバの一覧を確認。</li>
</ul>


<p><code>failed</code> ではなく <code>left</code> となっているところがポイントですね。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf members
    2014/07/21 07:51:12 [INFO] agent.ipc: Accepted client: 127.0.0.1:56642
host2  192.168.33.11:7946  left
host1  192.168.33.10:7946  alive</pre>


<h4>Serfエージェントを立ち上げる（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%C1%A5%AD%A5%E3%A5%B9%A5%C8">マルチキャスト</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>）</h4>

<p>50何台すべてにserf joinしてたらたまらないので<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%C1%A5%AD%A5%E3%A5%B9%A5%C8">マルチキャスト</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>版もためす。</p>

<ul>
<li>host1にて</li>
</ul>


<pre class="code" data-unlink>serf agent -iface=eth1 -node=host1 -discover=webapp &amp;</pre>


<ul>
<li>host2にて</li>
</ul>


<pre class="code" data-unlink>serf agent -iface=eth1 -node=host2 -discover=webapp &amp;</pre>


<h4>ログの流れは次のような感じ</h4>

<p>host1にてエージェントを立ち上げると</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf agent -iface=eth1 -node=host1 -discover=webapp &amp;
[1] 2308
[vagrant@localhost ~]$ ==&gt; Using interface &#39;eth1&#39; address &#39;192.168.33.10&#39;
==&gt; Starting Serf agent...
==&gt; Starting Serf agent RPC...
==&gt; Serf agent running!
         Node name: &#39;host1&#39;
         Bind addr: &#39;192.168.33.10:7946&#39;
          RPC addr: &#39;127.0.0.1:7373&#39;
         Encrypted: false
          Snapshot: false
           Profile: lan
      mDNS cluster: webapp

==&gt; Log data will now stream in as it occurs:

    2014/07/21 08:06:13 [INFO] agent: Serf agent starting
    2014/07/21 08:06:13 [INFO] serf: EventMemberJoin: host1 192.168.33.10
    2014/07/21 08:06:13 [INFO] agent: joining: [192.168.33.10:7946] replay: false
    2014/07/21 08:06:13 [INFO] agent: joined: 1 nodes
    2014/07/21 08:06:13 [INFO] agent.mdns: Joined 1 hosts
    2014/07/21 08:06:14 [INFO] agent: Received event: member-join</pre>


<p>ついでhost2で立ち上げるとhost2側では以下の様なログが流れ、</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ ==&gt; Using interface &#39;eth1&#39; address &#39;192.168.33.11&#39;
==&gt; Starting Serf agent...
==&gt; Starting Serf agent RPC...
==&gt; Serf agent running!
         Node name: &#39;host2&#39;
         Bind addr: &#39;192.168.33.11:7946&#39;
          RPC addr: &#39;127.0.0.1:7373&#39;
         Encrypted: false
          Snapshot: false
           Profile: lan
      mDNS cluster: webapp

==&gt; Log data will now stream in as it occurs:

    2014/07/21 08:07:11 [INFO] agent: Serf agent starting
    2014/07/21 08:07:11 [INFO] serf: EventMemberJoin: host2 192.168.33.11
    2014/07/21 08:07:11 [INFO] agent: joining: [192.168.33.11:7946 192.168.33.10:7946] replay: false
    2014/07/21 08:07:11 [INFO] serf: EventMemberJoin: host1 192.168.33.10
    2014/07/21 08:07:11 [INFO] agent: joined: 2 nodes
    2014/07/21 08:07:11 [INFO] agent.mdns: Joined 2 hosts
    2014/07/21 08:07:12 [INFO] agent: Received event: member-join</pre>


<ul>
<li>host1側でも</li>
</ul>


<pre class="code" data-unlink>    2014/07/21 08:07:11 [INFO] serf: EventMemberJoin: host2 192.168.33.11
    2014/07/21 08:07:12 [INFO] agent: Received event: member-join
    2014/07/21 08:07:13 [INFO] agent: joining: [192.168.33.11:7946] replay: false
    2014/07/21 08:07:13 [INFO] agent: joined: 1 nodes
    2014/07/21 08:07:13 [INFO] agent.mdns: Joined 1 hosts</pre>


<p>という追加のログが流れる。</p>

<h4>serf members の結果は</h4>

<p>OK。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ serf members
    2014/07/21 08:09:33 [INFO] agent.ipc: Accepted client: 127.0.0.1:35347
host2  192.168.33.11:7946  alive
host1  192.168.33.10:7946  alive</pre>


<p>ここまでで<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>は要らなくなったので一括削除。</p>

<pre class="code" data-unlink>vagrant destroy -f</pre>


<p>ここまでのSerfの使い方で参考にしたのは前佛さんの以下の記事です。</p>

<ol>
<li><a href="http://pocketstudio.jp/log3/2014/03/29/serf_configuration_quick_guide/">Serf設定オプションまとめ | Pocketstudio.jp log3</a></li>
<li><a href="http://pocketstudio.jp/log3/2013/11/02/serf-version-0-2-0/">【Serf】v0.2.0 へのバージョンアップと、変わった所を確認してみた | Pocketstudio.jp log3</a></li>
<li><a href="http://www.slideshare.net/zembutsu/is-the-order-an-automation-of-operation-and-monitoring?related=1">ご注文は監視自動化ですか？</a></li>
</ol>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を立ち上げるのに参考にしたのは以下、</p>

<ol>
<li><a href="http://kimikimi714.hatenablog.com/entry/2014/04/21/vagrant%E3%81%AE%E8%A4%87%E6%95%B0%E3%82%A4%E3%83%B3%E3%82%B9%E3%82%BF%E3%83%B3%E3%82%B9%E3%82%92%E3%81%9F%E3%81%A6%E3%81%A6%E9%81%8A%E3%82%93%E3%81%A7%E3%81%BF%E3%82%8B_%E3%81%9D%E3%81%AE1">vagrantの複数インスタンスをたてて遊んでみる - わすれっぽいきみえ</a></li>
<li><a href="https://github.com/tmknom/study-vagrant/tree/master/study4">study-vagrant/study4 at master · tmknom/study-vagrant</a></li>
</ol>


<h3>今度は予めプロビジョニングした状態のSerf<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>を構成する</h3>

<p>これができるようになるまで何回も <code>vagrant destroy -f</code> でぶっこわしまくりました。</p>

<pre class="code" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synComment"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>
<span class="synType">VAGRANTFILE_API_VERSION</span> = <span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>

<span class="synType">Vagrant</span>.configure(<span class="synType">VAGRANTFILE_API_VERSION</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  <span class="synComment"># Every Vagrant virtual environment requires a box to build off of.</span>
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">chef/centos-6.5</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synSpecial">&quot;</span><span class="synConstant">virtualbox</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">vb</span>|
    vb.customize [<span class="synSpecial">&quot;</span><span class="synConstant">modifyvm</span><span class="synSpecial">&quot;</span>, <span class="synConstant">:id</span>, <span class="synSpecial">&quot;</span><span class="synConstant">--memory</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">512</span><span class="synSpecial">&quot;</span>]
  <span class="synStatement">end</span>

  config.vm.define <span class="synSpecial">&quot;</span><span class="synConstant">web_1</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
    instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.10</span><span class="synSpecial">&quot;</span>

    instance.vm.provision <span class="synConstant">:shell</span> <span class="synStatement">do</span> |<span class="synIdentifier">shell</span>|
      shell.inline = &lt;&lt;-<span class="synSpecial">EOS</span>
<span class="synConstant">        if [ ! `which unzip` ]; then sudo yum -y install unzip ;fi</span>
<span class="synConstant">        if [ ! `which serf` ]; then</span>
<span class="synConstant">          cd /tmp/</span>
<span class="synConstant">          wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip</span>
<span class="synConstant">          unzip 0.6.3_linux_amd64.zip</span>
<span class="synConstant">          sudo mv serf /usr/local/bin/</span>
<span class="synConstant">          nohup /usr/local/bin/serf agent -iface=eth1 -node=host1 -discover=webapp 0&lt;&amp;- &amp;&gt;/dev/null&amp;</span>
<span class="synConstant">          cat &lt;&lt;</span><span class="synSpecial">EOF</span> &gt;&gt;<span class="synSpecial">/</span><span class="synConstant">etc</span><span class="synSpecial">/</span>rc.d/rc.local
<span class="synConstant">          /usr/local/bin/serf agent -iface=eth1 -node=host1 -discover=webapp &amp;</span>
<span class="synConstant">EOF</span>
<span class="synConstant">        fi</span>
<span class="synConstant">      </span><span class="synSpecial">EOS</span>
    <span class="synStatement">end</span>
    
  <span class="synStatement">end</span>

  config.vm.define <span class="synSpecial">&quot;</span><span class="synConstant">web_2</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
    instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.11</span><span class="synSpecial">&quot;</span>

    instance.vm.provision <span class="synConstant">:shell</span> <span class="synStatement">do</span> |<span class="synIdentifier">shell</span>|
      shell.inline = &lt;&lt;-<span class="synSpecial">EOS</span>
<span class="synConstant">        if [ ! `which unzip` ]; then sudo yum -y install unzip ;fi</span>
<span class="synConstant">        if [ ! `which serf` ]; then</span>
<span class="synConstant">          cd /tmp/</span>
<span class="synConstant">          wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip</span>
<span class="synConstant">          unzip 0.6.3_linux_amd64.zip</span>
<span class="synConstant">          sudo mv serf /usr/local/bin/</span>
<span class="synConstant">          nohup /usr/local/bin/serf agent -iface=eth1 -node=host2 -discover=webapp 0&lt;&amp;- &amp;&gt;/dev/null&amp;</span>
<span class="synConstant">          cat &lt;&lt;</span><span class="synSpecial">EOF</span> &gt;&gt;<span class="synSpecial">/</span><span class="synConstant">etc</span><span class="synSpecial">/</span>rc.d/rc.local
<span class="synConstant">          /usr/local/bin/serf agent -iface=eth1 -node=host2 -discover=webapp &amp;</span>
<span class="synConstant">EOF</span>
<span class="synConstant">        fi</span>
<span class="synConstant">      </span><span class="synSpecial">EOS</span>
    <span class="synStatement">end</span>
    
  <span class="synStatement">end</span>

<span class="synStatement">end</span>
</pre>


<ol>
<li><a href="http://d.hatena.ne.jp/longicorn/touch/20130201">Linuxでのプロセスの管理(bg,fg,disown) - longicornの日記</a></li>
<li><a href="http://itpro.nikkeibp.co.jp/article/COLUMN/20060227/230850/">Linuxコマンド集 - 【 nohup 】 ログアウトした後もコマンドを実行し続ける：ITpro</a></li>
<li><a href="https://github.com/mitchellh/vagrant/issues/1553">Shell provisioning fails to exit · Issue #1553 · mitchellh/vagrant</a></li>
</ol>


<h3>Serf<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>10台を構成する</h3>

<p>いきなり50台はなんかうまくいかなそうな気がするので、10台からやってみる。<br/>
このままじゃプロビジョニングが美しくないので<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a>力を発揮する。</p>

<pre class="code" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synComment"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>
<span class="synType">VAGRANTFILE_API_VERSION</span> = <span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>

<span class="synType">Vagrant</span>.configure(<span class="synType">VAGRANTFILE_API_VERSION</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  <span class="synComment"># Every Vagrant virtual environment requires a box to build off of.</span>
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">chef/centos-6.5</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synSpecial">&quot;</span><span class="synConstant">virtualbox</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">vb</span>|
    vb.customize [<span class="synSpecial">&quot;</span><span class="synConstant">modifyvm</span><span class="synSpecial">&quot;</span>, <span class="synConstant">:id</span>, <span class="synSpecial">&quot;</span><span class="synConstant">--memory</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">512</span><span class="synSpecial">&quot;</span>]
  <span class="synStatement">end</span>

  <span class="synComment"># Number of Virtual Machines</span>
  <span class="synType">NUMBER_OF_VMS</span> = <span class="synConstant">10</span>
  ip_addr_base = <span class="synConstant">10</span>

  (<span class="synConstant">1</span>..<span class="synType">NUMBER_OF_VMS</span>).each <span class="synStatement">do</span> |<span class="synIdentifier">host_index</span>|

    define_name = <span class="synSpecial">&quot;</span><span class="synConstant">web_</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    hostname = <span class="synSpecial">&quot;</span><span class="synConstant">host</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    octet4 = ip_addr_base + host_index - <span class="synConstant">1</span>

    config.vm.define define_name <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
      instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.</span><span class="synSpecial">#{</span>octet4<span class="synSpecial">}&quot;</span>

      instance.vm.provision <span class="synConstant">:shell</span> <span class="synStatement">do</span> |<span class="synIdentifier">shell</span>|
        shell.inline = &lt;&lt;-<span class="synSpecial">EOS</span>
<span class="synConstant">          if [ ! `which unzip` ]; then sudo yum -y install unzip ;fi</span>
<span class="synConstant">          if [ ! `which serf` ]; then</span>
<span class="synConstant">            cd /tmp/</span>
<span class="synConstant">            wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip</span>
<span class="synConstant">            unzip 0.6.3_linux_amd64.zip</span>
<span class="synConstant">            sudo mv serf /usr/local/bin/</span>
<span class="synConstant">            nohup /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp 0&lt;&amp;- &amp;&gt;/dev/null&amp;</span>
<span class="synConstant">            cat &lt;&lt;</span><span class="synSpecial">EOF</span> &gt;&gt;<span class="synSpecial">/</span><span class="synConstant">etc</span><span class="synSpecial">/</span>rc.d/rc.local
<span class="synConstant">            /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp &amp;</span>
<span class="synConstant">EOF</span>
<span class="synConstant">          fi</span>
<span class="synConstant">        </span><span class="synSpecial">EOS</span>
      <span class="synStatement">end</span>
      
    <span class="synStatement">end</span>
  <span class="synStatement">end</span>

<span class="synStatement">end</span>
</pre>


<p>このあたりになってくると<a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> upコマンドがなかなか終わらないが、<br/>
始めのころの<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>は既にアクセス可能になっているはずなので、
そのノードに接続してwatchコマンドとかでserf membersの変化とかを確認すると
出来上がった<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>から次々にSerfの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>webapp<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>に加わっていって結構面白いことになってる。</p>

<pre class="code" data-unlink>watch -n 1 serf members</pre>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721231247.png" alt="f:id:wnoguchi0727:20140721231247p:plain" title="f:id:wnoguchi0727:20140721231247p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>冪等性も保証しているので、ひと通りメンバに加わったことがわかったらここで</p>

<pre class="code" data-unlink>vagrant reload</pre>


<p>してみるのも面白い。</p>

<p>リロード中の<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>はfailedのステータスになる。
さらに特定の<a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>だけを停止してみたり、</p>

<pre class="code" data-unlink>C:\Users\wnoguchi\Documents\vagrant\serf_minimum&gt;vagrant halt web_3
==&gt; web_3: Attempting graceful shutdown of VM...</pre>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721231311.png" alt="f:id:wnoguchi0727:20140721231311p:plain" title="f:id:wnoguchi0727:20140721231311p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>一斉にとめて一斉に再起動するのもfailedがどんどん増えていくのでなかなかおつなものです。<br/>
ただし接続している自分自身がシャットダウンされたら元も粉もないですけど。</p>

<pre class="code" data-unlink>C:\Users\wnoguchi\Documents\vagrant\serf_minimum&gt;vagrant halt
==&gt; web_10: Attempting graceful shutdown of VM...
==&gt; web_9: Attempting graceful shutdown of VM...
==&gt; web_8: Attempting graceful shutdown of VM...
==&gt; web_7: Attempting graceful shutdown of VM...
==&gt; web_6: Attempting graceful shutdown of VM...
==&gt; web_5: Attempting graceful shutdown of VM...
==&gt; web_4: Attempting graceful shutdown of VM...
==&gt; web_2: Attempting graceful shutdown of VM...
==&gt; web_1: Attempting graceful shutdown of VM...

C:\Users\wnoguchi\Documents\vagrant\serf_minimum&gt;vagrant up
Bringing machine &#39;web_1&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_2&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_3&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_4&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_5&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_6&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_7&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_8&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_9&#39; up with &#39;virtualbox&#39; provider...
Bringing machine &#39;web_10&#39; up with &#39;virtualbox&#39; provider...
==&gt; web_1: Checking if box &#39;chef/centos-6.5&#39; is up to date...
==&gt; web_1: Clearing any previously set forwarded ports...</pre>


<h3>52ノード<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%B9%A5%BF">クラスタ</a>への挑戦</h3>

<p>もはや定数定義を52にしてマシンパワーの限界に挑戦するような感じになってきました。</p>

<pre class="code" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synComment"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>
<span class="synType">VAGRANTFILE_API_VERSION</span> = <span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>

<span class="synType">Vagrant</span>.configure(<span class="synType">VAGRANTFILE_API_VERSION</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  <span class="synComment"># Every Vagrant virtual environment requires a box to build off of.</span>
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">chef/centos-6.5</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synSpecial">&quot;</span><span class="synConstant">virtualbox</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">vb</span>|
    vb.customize [<span class="synSpecial">&quot;</span><span class="synConstant">modifyvm</span><span class="synSpecial">&quot;</span>, <span class="synConstant">:id</span>, <span class="synSpecial">&quot;</span><span class="synConstant">--memory</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">512</span><span class="synSpecial">&quot;</span>]
  <span class="synStatement">end</span>

  <span class="synComment"># Number of Virtual Machines</span>
  <span class="synType">NUMBER_OF_VMS</span> = <span class="synConstant">52</span>
  ip_addr_base = <span class="synConstant">10</span>

  (<span class="synConstant">1</span>..<span class="synType">NUMBER_OF_VMS</span>).each <span class="synStatement">do</span> |<span class="synIdentifier">host_index</span>|

    define_name = <span class="synSpecial">&quot;</span><span class="synConstant">web_</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    hostname = <span class="synSpecial">&quot;</span><span class="synConstant">host</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    octet4 = ip_addr_base + host_index - <span class="synConstant">1</span>

    config.vm.define define_name <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
      instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.</span><span class="synSpecial">#{</span>octet4<span class="synSpecial">}&quot;</span>

      instance.vm.provision <span class="synConstant">:shell</span> <span class="synStatement">do</span> |<span class="synIdentifier">shell</span>|
        shell.inline = &lt;&lt;-<span class="synSpecial">EOS</span>
<span class="synConstant">          if [ ! `which unzip` ]; then sudo yum -y install unzip ;fi</span>
<span class="synConstant">          if [ ! `which serf` ]; then</span>
<span class="synConstant">            cd /tmp/</span>
<span class="synConstant">            wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip</span>
<span class="synConstant">            unzip 0.6.3_linux_amd64.zip</span>
<span class="synConstant">            sudo mv serf /usr/local/bin/</span>
<span class="synConstant">            nohup /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp 0&lt;&amp;- &amp;&gt;/dev/null&amp;</span>
<span class="synConstant">            cat &lt;&lt;</span><span class="synSpecial">EOF</span> &gt;&gt;<span class="synSpecial">/</span><span class="synConstant">etc</span><span class="synSpecial">/</span>rc.d/rc.local
<span class="synConstant">            /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp &amp;</span>
<span class="synConstant">EOF</span>
<span class="synConstant">          fi</span>
<span class="synConstant">        </span><span class="synSpecial">EOS</span>
      <span class="synStatement">end</span>
      
    <span class="synStatement">end</span>
  <span class="synStatement">end</span>

<span class="synStatement">end</span>
</pre>


<p>あともうひと息だったのですが、フォワーディングするポートが衝突してしまい、息絶えました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721232212.png" alt="f:id:wnoguchi0727:20140721232212p:plain" title="f:id:wnoguchi0727:20140721232212p:plain" class="hatena-fotolife" itemprop="image"></span></p>




<pre class="code" data-unlink>==&gt; web_51:   inflating: serf
==&gt; web_52: Importing base box &#39;chef/centos-6.5&#39;...
==&gt; web_52: Matching MAC address for NAT networking...
==&gt; web_52: Checking if box &#39;chef/centos-6.5&#39; is up to date...
==&gt; web_52: Setting the name of the VM: serf_minimum_web_52_1405943316239_88578
Vagrant found a port collision for the specified port and virtual machine.
While this port was marked to be auto-corrected, the ports in the
auto-correction range are all also used.

VM: web_52
Forwarded port: 22 =&gt; 2222</pre>


<p>少し書きなおしてみる。</p>

<pre class="code" data-unlink><span class="synComment"># -*- mode: ruby -*-</span>
<span class="synComment"># vi: set ft=ruby :</span>

<span class="synComment"># Vagrantfile API/syntax version. Don't touch unless you know what you're doing!</span>
<span class="synType">VAGRANTFILE_API_VERSION</span> = <span class="synSpecial">&quot;</span><span class="synConstant">2</span><span class="synSpecial">&quot;</span>

<span class="synType">Vagrant</span>.configure(<span class="synType">VAGRANTFILE_API_VERSION</span>) <span class="synStatement">do</span> |<span class="synIdentifier">config</span>|

  <span class="synComment"># Every Vagrant virtual environment requires a box to build off of.</span>
  config.vm.box = <span class="synSpecial">&quot;</span><span class="synConstant">chef/centos-6.5</span><span class="synSpecial">&quot;</span>

  config.vm.provider <span class="synSpecial">&quot;</span><span class="synConstant">virtualbox</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span> |<span class="synIdentifier">vb</span>|
    vb.customize [<span class="synSpecial">&quot;</span><span class="synConstant">modifyvm</span><span class="synSpecial">&quot;</span>, <span class="synConstant">:id</span>, <span class="synSpecial">&quot;</span><span class="synConstant">--memory</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">512</span><span class="synSpecial">&quot;</span>]
  <span class="synStatement">end</span>

  <span class="synComment"># Number of Virtual Machines</span>
  <span class="synType">NUMBER_OF_VMS</span> = <span class="synConstant">52</span>
  ip_addr_base = <span class="synConstant">10</span>

  (<span class="synConstant">1</span>..<span class="synType">NUMBER_OF_VMS</span>).each <span class="synStatement">do</span> |<span class="synIdentifier">host_index</span>|

    define_name = <span class="synSpecial">&quot;</span><span class="synConstant">web_</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    hostname = <span class="synSpecial">&quot;</span><span class="synConstant">host</span><span class="synSpecial">#{</span>host_index<span class="synSpecial">}&quot;</span>
    octet4 = ip_addr_base + host_index - <span class="synConstant">1</span>
    forwarding_port = <span class="synConstant">8080</span> + host_index - <span class="synConstant">1</span>

    config.vm.define define_name <span class="synStatement">do</span> |<span class="synIdentifier">instance</span>|
      instance.vm.network <span class="synConstant">:private_network</span>, <span class="synConstant">ip</span>: <span class="synSpecial">&quot;</span><span class="synConstant">192.168.33.</span><span class="synSpecial">#{</span>octet4<span class="synSpecial">}&quot;</span>
      instance.vm.network <span class="synSpecial">&quot;</span><span class="synConstant">forwarded_port</span><span class="synSpecial">&quot;</span>, <span class="synConstant">guest</span>: <span class="synConstant">22</span>, <span class="synConstant">host</span>: forwarding_port

      instance.vm.provision <span class="synConstant">:shell</span> <span class="synStatement">do</span> |<span class="synIdentifier">shell</span>|
        shell.inline = &lt;&lt;-<span class="synSpecial">EOS</span>
<span class="synConstant">          if [ ! `which unzip` ]; then sudo yum -y install unzip ;fi</span>
<span class="synConstant">          if [ ! `which serf` ]; then</span>
<span class="synConstant">            cd /tmp/</span>
<span class="synConstant">            wget -O 0.6.3_linux_amd64.zip https://dl.bintray.com/mitchellh/serf/0.6.3_linux_amd64.zip</span>
<span class="synConstant">            unzip 0.6.3_linux_amd64.zip</span>
<span class="synConstant">            sudo mv serf /usr/local/bin/</span>
<span class="synConstant">            nohup /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp 0&lt;&amp;- &amp;&gt;/dev/null&amp;</span>
<span class="synConstant">            cat &lt;&lt;</span><span class="synSpecial">EOF</span> &gt;&gt;<span class="synSpecial">/</span><span class="synConstant">etc</span><span class="synSpecial">/</span>rc.d/rc.local
<span class="synConstant">            /usr/local/bin/serf agent -iface=eth1 -node=</span><span class="synSpecial">#{</span>hostname<span class="synSpecial">}</span><span class="synConstant"> -discover=webapp &amp;</span>
<span class="synConstant">EOF</span>
<span class="synConstant">          fi</span>
<span class="synConstant">        </span><span class="synSpecial">EOS</span>
      <span class="synStatement">end</span>
      
    <span class="synStatement">end</span>
  <span class="synStatement">end</span>

<span class="synStatement">end</span>
</pre>


<p>今度はどうだろう。
ダメだった。</p>

<p>んー時間切れ。51ノードまでは確認できました。<br/>
ポートフォワーディングのコンフリクトが直せればもっといけそうな感じ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140721/20140721232129.png" alt="f:id:wnoguchi0727:20140721232129p:plain" title="f:id:wnoguchi0727:20140721232129p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>以上のVagrantfileは以下のGistからも取得可能です。</p>

<p><a href="https://gist.github.com/wnoguchi/b784ca2b4c04cd0111f6">第60回： SerfとConsulでシステム運用を楽しくしよう！http://connpass.com/event/7322/ : 今回の実験使用したVagrantfileの一覧</a></p>

<h3>Consulは？</h3>

<p>Consulについてはサービス管理の機能が<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>, HTTP <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>でシンプルに提供されいてることが分かったのですが、私の理解力が追いついていないため、今回は検証までには至りませんでした・・・。</p>

<p>以上です、ありがとうございました！</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 最近t1に加えてt2も出たのか―（PVからHVMにも変わってる）
BASENAME: 2014/07/20/110714
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/20/2014 11:07:14
-----
BODY:
<p>7/1にt2<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>が発表されてます。<br/>
それに伴ってLaunch Wizardで選択できる<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a>のAMIもt2が選択できる代わりにHVMになっています。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a> AMI 2014.03.2 (HVM) - ami-29dc9228</li>
</ul>


<p>今まで t1.micro ばっかり使っていて ParaVirtual（PV、準仮想化） しか知らなかったので、
HVM(Hardware-assited <a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>) で動く<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>があるとは知らなんだ。</p>

<ul>
<li>HVMってことは<a class="keyword" href="http://d.hatena.ne.jp/keyword/KVM">KVM</a>みたいに完全仮想化になってるって考えていいのかな？</li>
<li>PVは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Xen">Xen</a>みたいな準仮想化的な位置づけ。</li>
</ul>


<p>間違ってたら教えて下さい。＞＜</p>

<p>ちょっとやってみたけどHVMのAMIで作られたEC2<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>のEBSスナップショットからStampパターンのAMIを作るときにPVで作って動かそうとしたらうまく動かなかったよ。</p>

<p>リンク先を見たらわかるけど、結構手順が大変みたいだね。</p>

<h2>References</h2>

<ol>
<li><a href="http://www.agilegroup.co.jp/technote/t1micro-to-t2micro-migration.html">EC2のt1.microをt2.microへ移行する : アジャイル株式会社</a></li>
<li><a href="http://recipe.kc-cloud.jp/archives/6407">t2.micro、t2.smallインスタンスについて　 | ナレコムAWSレシピ</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Docker User Guideをやってみたよ(1)
BASENAME: 2014/07/17/233543
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/17/2014 23:35:43
CATEGORY: Docker
CATEGORY: DevOps
CATEGORY: Immutable Infrastructure
-----
BODY:
<p>今回はDockerコンテナでアプリケーションを動かすまで。</p>

<h2>Getting Started with Docker Hub</h2>

<p><a href="https://docs.docker.com/userguide/dockerhub/">Getting Started with Docker Hub - Docker Documentation</a></p>

<p>Docker Hubに登録する。<br/>
登録は簡単だった。</p>

<h3>Welcomeページ</h3>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140717/20140717233734.png" alt="f:id:wnoguchi0727:20140717233734p:plain" title="f:id:wnoguchi0727:20140717233734p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h3>ダッシュボード</h3>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140717/20140717233743.png" alt="f:id:wnoguchi0727:20140717233743p:plain" title="f:id:wnoguchi0727:20140717233743p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>Dockerizing Applications: A "<a class="keyword" href="http://d.hatena.ne.jp/keyword/Hello%20world">Hello world</a>"</h2>

<p><a href="https://docs.docker.com/userguide/dockerizing/">Dockerizing Applications - Docker Documentation</a></p>

<p>Dockerはコンテナ内でのアプリケーション実行を可能とする。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker run ubuntu:14.04 /bin/echo &#39;Hello world&#39;
Unable to find image &#39;ubuntu:14.04&#39; locally
Pulling repository ubuntu
e54ca5efa2e9: Download complete
511136ea3c5a: Download complete
d7ac5e4f1812: Download complete
2f4b4d6a4a06: Download complete
83ff768040a0: Download complete
6c37f792ddac: Download complete
Hello world</pre>


<p>Dockerは <code>ubuntu:14.04</code> というイメージ名のものがローカルに存在することを確認し、
存在しなければ Docker Hub からダウンロードしてくる。</p>

<p>イメージの取得が終わればDockerは <code>/bin/echo 'Hello world'</code> を実行し、<br/>
そのコマンドの実行が終了すればただちにコンテナを終了するようになっている。<br/>
つまり<a class="keyword" href="http://d.hatena.ne.jp/keyword/Hello%20world">Hello world</a>と表示して終わり。</p>

<p><code>-t</code> で擬似端末を割り当てて、 <code>-i</code> でDockerコンテナに対する標準入力を開いたままにする。つまり<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%BF%A5%E9%A5%AF%A5%C6%A5%A3%A5%D6">インタラクティブ</a>。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker run -t -i ubuntu:14.04 /bin/bash
root@d857fbed59d2:/# pwd
/
root@d857fbed59d2:/# ls -F
bin/  boot/  dev/  etc/  home/  lib/  lib64/  media/  mnt/  opt/  proc/  root/  run/  sbin/  srv/  sys/  tmp/  usr/  var/
root@d857fbed59d2:/# exit
exit</pre>


<p>今度はコンテナ内の<a class="keyword" href="http://d.hatena.ne.jp/keyword/bash">bash</a>のプロセスが終了するタイミングでコンテナが停止した。<br/>
<code>docker ps</code> してみるとおもしろい。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                          PORTS               NAMES
d857fbed59d2        ubuntu:14.04        /bin/bash              2 minutes ago       Exited (0) About a minute ago                       sad_engelbart
b122a6b2cb7f        ubuntu:14.04        /bin/echo &#39;Hello wor   3 minutes ago       Exited (0) 3 minutes ago                            drunk_pasteur
59d7660a51a8        centos:latest       /bin/bash              24 hours ago        Exited (0) 23 hours ago                             clever_nobel</pre>


<h3>デーモン化してみる</h3>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker run -d ubuntu:14.04 /bin/sh -c &#34;while true; do echo hello world; sleep 1; done&#34;
d9b0c80c495d41a11d8c552d39ceac65ed21b39a3d5adc695cf181d13dd9863c</pre>


<p>1秒おきに<a class="keyword" href="http://d.hatena.ne.jp/keyword/hello%20world">hello world</a>を出力するジョブを半永久的に実行するコンテナで、これは <code>-d</code> オプションにてバックグラウンドで実行されるようになる。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/hello%20world">hello world</a>は1つも標準出力に出てこない代わりに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%C3%CD">ハッシュ値</a>が得られた。<br/>
これがコンテナIDというらしい。<br/>
Gitのコミットハッシュみたいに先頭数桁使えばいけるのかな？</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ echo d9b0c80c495d41a11d8c552d39ceac65ed21b39a3d5adc695cf181d13dd9863c | wc -m
65</pre>


<p>ちなみに65桁で構成されているようだ。</p>

<p><code>docker ps</code> してみるとコンテナは終了せずに動き続けていることが分かる。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES
d9b0c80c495d        ubuntu:14.04        /bin/sh -c &#39;while tr   2 minutes ago       Up 2 minutes                            hopeful_darwin</pre>


<p>コンテナ名は便宜的に hopeful_<a class="keyword" href="http://d.hatena.ne.jp/keyword/darwin">darwin</a> と付けられている。期待の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac%20OS%20X">Mac OS X</a>？英語のジョークはよくわからないな。</p>

<p>これじゃコンテナ内でどうなっているかわからないから <code>docker logs</code> コマンドを発行してみる。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker logs d9b0c80c495
hello world
hello world
hello world
hello world
hello world
hello world
hello world
hello world
hello world
[vagrant@localhost ~]$ sudo docker logs hopeful_darwin
hello world
hello world
hello world
hello world
hello world
hello world
hello world
hello world</pre>


<p>コンテナID、コンテナ名でもどちらでもいけるようだ。</p>

<h4>片付けする</h4>

<p>もう用済みなのでコンテナを停止する。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker stop hopeful_darwin
hopeful_darwin</pre>


<p>停まったか確認する。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</pre>


<p>すばらしい。今日はここまで。</p>

<h2>References</h2>

<ol>
<li><a href="https://docs.docker.com/userguide/">The Docker User Guide - Docker Documentation</a></li>
<li><a href="https://github.com/wnoguchi/doc/blob/master/DevOps/Docker/README.md">doc/DevOps/Docker/README.md at master · wnoguchi/doc</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: CentOS6.5にDockerインストールしてみた
BASENAME: 2014/07/16/235001
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/16/2014 23:50:01
CATEGORY: Docker
CATEGORY: Vagrant
CATEGORY: Immutable Infrastructure
CATEGORY: CentOS
-----
BODY:
<p>Dockerすごく流行ってるらしいから今更ながら手を付けてみた。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>でバシッときれいな環境用意できるのがほんと手軽でいいね。</p>

<p>今回もこれで簡単に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>用意できました。</p>

<pre class="code" data-unlink>vagrant init chef/centos-6.5
vagrant up</pre>


<h2>インストール</h2>

<ul>
<li>CentOS6.5 <a class="keyword" href="http://d.hatena.ne.jp/keyword/x86">x86</a>_64</li>
</ul>


<h3>EPEL有効にする</h3>

<p><a href="https://fedoraproject.org/wiki/EPEL">EPEL - FedoraProject</a></p>

<pre class="code" data-unlink>sudo rpm -ivh http://ftp.jaist.ac.jp/pub/Linux/Fedora/epel/6/i386/epel-release-6-8.noarch.rpm</pre>


<h3>Dockerインストール</h3>

<ul>
<li><p>Docker(1.0.0-6.el6)</p></li>
<li><p>インストール</p></li>
</ul>


<pre class="code" data-unlink>sudo yum install docker-io</pre>


<ul>
<li>Dockerのサービススタート。</li>
</ul>


<pre class="code" data-unlink>sudo service docker start
Starting cgconfig service:                                 [  OK  ]
Starting docker:                                       [  OK  ]</pre>


<ul>
<li>Dockerの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%AB%C6%B0%B5%AF%C6%B0">自動起動</a>設定。</li>
</ul>


<pre class="code" data-unlink>sudo chkconfig docker on</pre>


<ul>
<li>Dockerがちゃんと動いていることを確認するために最新版の<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>イメージを取得する。</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker pull centos:latest
Pulling repository centos
1a7dc42f78ba: Download complete
511136ea3c5a: Download complete
34e94e67e63a: Download complete</pre>


<ul>
<li>取得が完了したら<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>のイメージの一覧が以下のコマンドでリストに表示されることを確認する。</li>
</ul>


<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker images centos
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
centos              latest              1a7dc42f78ba        7 days ago          236.4 MB</pre>


<ul>
<li>イメージのテストをするために<a class="keyword" href="http://d.hatena.ne.jp/keyword/bash">bash</a>を立ち上げてみよう。</li>
</ul>


<pre class="code" data-unlink>sudo docker run -i -t centos /bin/bash</pre>


<p>ちなみに <code>-i</code> はアタッチされていなくても標準入力を開いたままにしておくオプション。<br/>
<code>-t</code> は擬似端末(pseudo-tty)を割り当てることを意味する。<br/>
あいかわらずもやもやしている。</p>

<ul>
<li><a href="http://ja.wikipedia.org/wiki/%E6%93%AC%E4%BC%BC%E7%AB%AF%E6%9C%AB">擬似端末 - Wikipedia</a></li>
</ul>


<pre class="code" data-unlink>  -i, --interactive=false    Keep stdin open even if not attached
  -t, --tty=false            Allocate a pseudo-tty</pre>


<p>で、結果が以下。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker run -i -t centos /bin/bash
bash-4.2#</pre>


<p>うん、プロンプト表示された。</p>

<h3>実験</h3>

<p>このままじゃ面白く無いから<a class="keyword" href="http://d.hatena.ne.jp/keyword/MySQL">MySQL</a>（クライアント）入れてみる。</p>

<pre class="code" data-unlink>bash-4.2# yum -y install mysql</pre>


<p>当然ながらホストには全く影響がない。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ mysql
-bash: mysql: コマンドが見つかりません
[vagrant@localhost ~]$ sudo -i
[root@localhost ~]# mysql
-bash: mysql: コマンドが見つかりません</pre>


<p>本当は<a class="keyword" href="http://d.hatena.ne.jp/keyword/MySQL">MySQL</a>サーバ入れてみたかったんだけど、コンテナの中で</p>

<pre class="code" data-unlink>yum -y install mysql-server</pre>


<p>すると「そんなのねぇ！」って怒られる。</p>

<p><code>mysql-server</code> がどの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>に入っているのか調べると updates <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>に入っていることが分かる。</p>

<pre class="code" data-unlink>[root@localhost ~]# yum info mysql-server
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: centos.mirror.secureax.com
 * epel: ftp.jaist.ac.jp
 * extras: centos.mirror.secureax.com
 * updates: centosv4.centos.org
Available Packages
Name        : mysql-server
Arch        : x86_64
Version     : 5.1.73
Release     : 3.el6_5
Size        : 8.6 M
Repo        : updates
Summary     : The MySQL server and related files
URL         : http://www.mysql.com
License     : GPLv2 with exceptions
Description : MySQL is a multi-user, multi-threaded SQL database server. MySQL is a
            : client/server implementation consisting of a server daemon (mysqld)
            : and many different client programs and libraries. This package contains
            : the MySQL server and some accompanying files and directories.</pre>


<p>ホスト側をupdatesで<a class="keyword" href="http://d.hatena.ne.jp/keyword/grep">grep</a>するとヒットする。</p>

<pre class="code" data-unlink>[root@localhost ~]# cat /etc/yum.repos.d/CentOS-Base.repo | grep updates
# geographically close to the client.  You should use this for CentOS updates
#released updates
[updates]
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates
#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/</pre>


<p>コンテナ内で<a class="keyword" href="http://d.hatena.ne.jp/keyword/grep">grep</a>してもヒットする。</p>

<pre class="code" data-unlink>bash-4.2# cat /etc/yum.repos.d/CentOS-Base.repo | grep updates
# geographically close to the client.  You should use this for CentOS updates
#released updates
[updates]
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates
#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/</pre>


<p>うーん。なんで？</p>

<p>決定的違いを発見。</p>

<ul>
<li>ホスト</li>
</ul>


<pre class="code" data-unlink>[root@localhost ~]# cat /etc/redhat-release
CentOS release 6.5 (Final)</pre>


<ul>
<li>コンテナ</li>
</ul>


<pre class="code" data-unlink>bash-4.2# cat /etc/redhat-release
CentOS Linux release 7.0.1406 (Core)</pre>


<p>なんじゃこりゃ。</p>

<p>コンテナでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/mariadb">mariadb</a>とか出てたし、CentOS7になってなんか変わったのだろうか。<br/>
追って色々調べよう。</p>

<p>とりあえず開発パッケージとか入れたりしてホストとコンテナの間で影響が無いことを確認して終了。</p>

<ul>
<li><code>docker ps</code> コマンドを発行してみる。</li>
</ul>


<p><code>-a</code> オプションは終了したコンテナ環境も一覧表示してくれる。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
59d7660a51a8        centos:latest       /bin/bash           33 minutes ago      Exited (0) 3 minutes ago                       clever_nobel</pre>


<p>さっきのあるね。アタッチしてみよう。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker attach 59d7660a51a8
2014/07/16 14:30:54 You cannot attach to a stopped container, start it first</pre>


<p>停止したコンテナはアタッチできないって言われた。では開始しよう。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker start 59d7660a51a8
59d7660a51a8</pre>


<p><code>docker ps</code> してみる。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
59d7660a51a8        centos:latest       /bin/bash           42 minutes ago      Up 25 seconds                           clever_nobel</pre>


<p>おお動いてる。アタッチする。</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker attach 59d7660a51a8
bash-4.2# which gcc
/usr/bin/gcc
bash-4.2#</pre>


<p>ちゃんと環境復元できてる！そして <code>exit</code> したら</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</pre>


<p>でもコンテナは削除してないから</p>

<pre class="code" data-unlink>[vagrant@localhost ~]$ sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
59d7660a51a8        centos:latest       /bin/bash           43 minutes ago      Exited (0) 4 seconds ago                       clever_nobel</pre>


<p>残ってる。
やばいおもしろい。</p>

<h2>References</h2>

<ol>
<li><a href="http://momijiame.tumblr.com/post/70679588212/centos-6-5-docker">CentOS 6.5 で Docker を使ってみる | CUBE SUGAR STORAGE</a></li>
<li><a href="https://docs.docker.com/installation/centos/">CentOS - Docker Documentation</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Vagrantを1.3.5から1.6.3に上げたよ（Vagrant Cloudを使うようになった）
BASENAME: 2014/07/15/224633
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/15/2014 22:46:33
CATEGORY: Vagrant
CATEGORY: VirtualBox
CATEGORY: Vagrant Cloud
-----
BODY:
<p>やっと余裕が出てきたので、最近戯れてなかった<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>をバージョンアップしてみようという気になった。</p>

<h2>インストール前</h2>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>[noguchiwataru@Macintosh] ~
% vagrant --version
Vagrant <span class="synConstant">1.3</span>.<span class="synConstant">5</span>
</pre>


<h2>インストール後</h2>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>[noguchiwataru@Macintosh] ~
% vagrant --version
Vagrant <span class="synConstant">1.6</span>.<span class="synConstant">3</span>
</pre>


<p>いつの間にかメジャーバージョンが3も上がってた。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/vagrant">vagrant</a> init してみる</h2>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% vagrant init
Vagrant experienced a version conflict with some installed plugins!
This usually happens <span class="synStatement">if</span> you recently upgraded Vagrant. As part of the
upgrade process, some existing plugins are no longer compatible with
this version of Vagrant. The recommended way to fix this is to remove
your existing plugins and reinstall them one-by-one. To remove all
plugins:

    rm -r ~/.vagrant.d/plugins.json ~/.vagrant.d/gems

The error message is shown below:

Bundler could not find compatible versions <span class="synStatement">for</span> gem <span class="synConstant">&quot;celluloid&quot;</span>:
  In Gemfile:
    vagrant (= <span class="synConstant">1.6</span>.<span class="synConstant">3</span>) ruby depends on
      listen (~<span class="synStatement">&gt;</span> <span class="synConstant">2.7</span>.<span class="synConstant">1</span>) ruby depends on
        celluloid (<span class="synStatement">&gt;</span>= <span class="synConstant">0.15</span>.<span class="synConstant">2</span>) ruby

    vagrant-berkshelf (<span class="synStatement">&gt;</span>= <span class="synConstant">0</span>) ruby depends on
      berkshelf (~<span class="synStatement">&gt;</span> <span class="synConstant">2.0</span>.<span class="synConstant">7</span>) ruby depends on
        ridley (~<span class="synStatement">&gt;</span> <span class="synConstant">1.5</span>.<span class="synConstant">0</span>) ruby depends on
          celluloid (<span class="synConstant">0.14</span>.<span class="synConstant">1</span>)
</pre>


<p>バージョンが衝突したからとりあえず<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>全部消して1つずつ入れなおしてくれって書いてある。
しばらくつかってなかったからもう<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>も全部いらないかなって思って漢らしく</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>[noguchiwataru@Macintosh] ~/vagrant/centos
% rm -rf ~/.vagrant.d/plugins.json ~/.vagrant.d/gems
</pre>


<p>デフォルトでインストールされている<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a>はこれ。</p>

<pre class="code lang-" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~
% vagrant plugin list
vagrant-login (1.0.1, system)
vagrant-share (1.1.0, system)</pre>


<p>改めて <code>vagrant init</code> してみる。</p>

<p>なんだか<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>の内部状態をアップグレードしてるから殺してくれるなと言ってるっぽい。<br/>
いくらかディスク容量使うよとも言っている。<br/>
とくに問題ないので待つ。</p>

<pre class="code lang-" data-lang="" data-unlink>% vagrant init
Vagrant is upgrading some internal state for the latest version.
Please do not quit Vagrant at this time. While upgrading, Vagrant
will need to copy all your boxes, so it will use a considerable
amount of disk space. After it is done upgrading, the temporary disk
space will be freed.

Press ctrl-c now to exit if you want to remove some boxes or free
up some disk space.

Press any other key to continue.
A `Vagrantfile` has been placed in this directory. You are now
ready to `vagrant up` your first virtual environment! Please read
the comments in the Vagrantfile as well as documentation on
`vagrantup.com` for more information on using Vagrant.</pre>


<p><code>Press any other key to continue.</code> と表示されたところでそのままエンターする。</p>

<p>これでおしまい。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> boxイメージをインポートする</h2>

<p>いつもならHashiCorpあたりで提供されている<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>のboxイメージを使うか、
Packer等で自作するか、より手軽にイメージが欲しければ</p>

<p><a href="http://www.vagrantbox.es/">A list of base boxes for Vagrant - Vagrantbox.es</a></p>

<p>を使うんだけど、　Vagrantbox.es　はプルリクがあったら特に確認しないでバカスカリンクを突っ込んでるからあんまり推奨されてなかった。<br/>
前ダウンロードした<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a> Serverのboxイメージのaptがやたら遅いと思ったらブラジル向いてたよ。</p>

<p>Getting Startedを真面目に読むと</p>

<p><a href="http://docs.vagrantup.com/v2/getting-started/">Getting Started - Vagrant Documentation</a></p>

<pre class="code lang-" data-lang="" data-unlink>vagrant init hashicorp/precise32</pre>


<p>すればVagrantfileが生成される。
<code>vagrant up</code> すれば勝手に<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>のboxがダウンロードされてくるようだ。<br/>
確かに動いたけど、なんでURLも指定しないでダウンロードできたのが意味がわからないし、<br/>
僕は<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>のboxイメージが欲しかったのでもう少し調べてみた。</p>

<p><a href="http://docs.vagrantup.com/v2/boxes.html">Boxes - Vagrant Documentation</a></p>

<p>によると</p>

<blockquote><p>The easiest way to use a box is to add a box from the publicly available catalog of <a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> boxes. You can also add and share your own customized boxes on this website.</p></blockquote>

<p>もっとも簡単にboxを追加する方法は公開された<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> boxのカタログから取ってくるのが簡単だよって言ってる。</p>

<p><a href="https://vagrantcloud.com/">Vagrant Cloud</a></p>

<p>なんだか今のバージョンでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a> Cloudにアカウントが無くてもダウンロードできるっぽい。</p>

<p>今登録されているのは以下。</p>

<pre class="code lang-" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~
% vagrant box list
Berkshelf-CentOS-6.3-x86_64-minimal (virtualbox, 0)
base                                (virtualbox, 0)
chef/centos-6.5                     (virtualbox, 1.0.0)
dummy                               (aws, 0)
hashicorp/precise32                 (virtualbox, 1.0.0)</pre>


<ul>
<li><a href="https://vagrantcloud.com/chef">chef</a></li>
</ul>


<p>とかメジャーな組織がメンテナンスしているboxが取ってくることができるので Vagrantbox.es からとってくるよりよっぽど安心できますね。</p>

<h2>参考文献</h2>

<ol>
<li><a href="http://docs.vagrantup.com/v2/getting-started/">Getting Started - Vagrant Documentation</a></li>
<li><a href="http://docs.vagrantup.com/v2/boxes.html">Boxes - Vagrant Documentation</a></li>
<li><a href="https://vagrantcloud.com/">Vagrant Cloud</a></li>
<li><a href="https://vagrantcloud.com/chef">chef</a></li>
<li><a href="http://kimikimi714.hatenablog.com/entry/2014/04/05/vagrant%E3%81%AEbox%E3%82%92vagrant_cloud%E3%81%8B%E3%82%89%E3%82%82%E3%82%89%E3%81%A3%E3%81%A6%E3%81%8F%E3%82%8B">vagrantのboxをvagrant cloudからもらってくる - わすれっぽいきみえ</a></li>
<li><a href="http://www.vagrantbox.es/">A list of base boxes for Vagrant - Vagrantbox.es</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: eclipse.iniの設定レシピ
BASENAME: 2014/07/15/220259
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/15/2014 22:02:59
-----
BODY:
<h2>レベル1</h2>

<pre class="code" data-unlink>-startup
plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.v20140603-1326
-product
org.eclipse.epp.package.jee.product
--launcher.defaultAction
openFile
--launcher.XXMaxPermSize
512M
-showsplash
org.eclipse.platform
--launcher.XXMaxPermSize
512m
--launcher.defaultAction
openFile
--launcher.appendVmargs
-vmargs
-Dosgi.requiredJavaVersion=1.6
-Xms1024m
-Xmx1024m
-Duser.name=Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;</pre>


<h2>レベル10</h2>

<pre class="code" data-unlink>-startup
plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.v20140603-1326
-product
org.eclipse.epp.package.jee.product
--launcher.defaultAction
openFile
--launcher.XXMaxPermSize
2048M
-showsplash
org.eclipse.platform
--launcher.XXMaxPermSize
2048m
--launcher.defaultAction
openFile
--launcher.appendVmargs
-vmargs
-Dosgi.requiredJavaVersion=1.6
-Xms2048m
-Xmx2048m
-Duser.name=Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;</pre>


<h2>レベル20</h2>

<pre class="code" data-unlink>-startup
plugins/org.eclipse.equinox.launcher_1.3.0.v20140415-2008.jar
--launcher.library
plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.200.v20140603-1326
-product
org.eclipse.epp.package.jee.product
--launcher.defaultAction
openFile
--launcher.XXMaxPermSize
2048M
-showsplash
org.eclipse.platform
--launcher.XXMaxPermSize
2048m
--launcher.defaultAction
openFile
--launcher.appendVmargs
-vmargs
-Dosgi.requiredJavaVersion=1.6
-Xms4096m
-Xmx4096m
-Duser.name=Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;</pre>


<h2>Tips</h2>

<h3>Authorの設定</h3>

<pre class="code" data-unlink>-Duser.name=Wataru Noguchi &lt;wnoguchi.0727@gmail.com&gt;</pre>


<h2>参考文献</h2>

<ol>
<li><a href="http://d.hatena.ne.jp/kanonji/20090212/1234468760">eclipse.iniでJVMを指定してメモリ関係(ヒープ)のエラーを回避する。ロケールを変更してhtmlエディタのバグを回避する。 - kanonjiの日記</a></li>
<li><a href="http://d.hatena.ne.jp/learn/20090218/p1">Javaメモリ、GCチューニングとそれにまつわるトラブル対応手順まとめ - 日記のような何か</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/0508/31/news091_2.html">Javaパフォーマンスチューニング（6）：HotSpot VMの特性を知る (2/2) - ＠IT</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/0403/11/news096.html">チューニングのためのJava VM講座（前編）：Hotspot VMの基本構造を理解する (1/2) - ＠IT</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 「夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～」に行ってきました
BASENAME: 2014/07/13/183107
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/13/2014 18:31:07
CATEGORY: 勉強会
CATEGORY: DNS
CATEGORY: インフラ
CATEGORY: Unbound
CATEGORY: NSD
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140705/20140705132347.jpg
-----
BODY:
<p>先週の7/5に開催されました「夏の<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>祭り 2014 ～入門セミナ＆ハンズオン～」に行ってまいりました！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140705/20140705132347.jpg" alt="f:id:wnoguchi0727:20140705132347j:plain" title="f:id:wnoguchi0727:20140705132347j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>概要</h2>

<p>【自宅ラック勉強会 8.0】 この夏「ワタシハディエヌエスチョットデキル」ことを目標とします。</p>

<ul>
<li><a href="http://rack.connpass.com/event/7024/">夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～ - connpass</a></li>
<li><a href="http://rack.connpass.com/event/7319/">【懇親会】夏のDNS祭り 2014 - connpass</a></li>
</ul>


<h3>講師の方</h3>

<p>滝澤 隆史 氏(<a href="https://twitter.com/ttkzw">@ttkzw</a>)</p>

<p>インフラで有名な株式会社ハートビーツの方です。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ustream">Ustream</a></h3>

<p><a href="http://ustre.am/IWlq">http://ustre.am/IWlq</a></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a></h3>

<p><a href="https://twitter.com/search?q=%23%E8%87%AA%E5%AE%85DNS%20%23%E8%87%AA%E5%AE%85%E3%83%A9%E3%83%83%E3%82%AF%E5%8B%89%E5%BC%B7%E4%BC%9A&amp;src=typd">#自宅DNS #自宅ラック勉強会</a></p>

<h3>質問<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a></h3>

<p><a href="https://twitter.com/search?q=%23%E8%87%AA%E5%AE%85DNS-Q&amp;src=typd">#自宅DNS-Q</a></p>

<h2>会場到着</h2>

<p>最近はだいぶ東京の電車にも慣れてきたので、あまり緊張すること無くいけました。
午前中は土曜日でもやってる区民事務所に行って、疲れていたので、時間が空いたらスタバで一杯飲もうかと思っていましたが、今度は会場が渋谷なので慣れないこともあり、場所の確認も兼ねて渋谷駅に行ったらおおむね時間通りになってしまいました。<br/>
いい時間なので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%B3%A5%A4%A5%C1">ココイチ</a>でカレーを食べました。<br/>
カレーはいつ食べても美味しいです。<br/>
前は車も持ってなくて、気軽にファミレスに行くこともなかったので、便利になったなと思います。</p>

<h2>受付</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BB%A5%EB%A5%EA%A5%A2%A5%F3%A5%BF%A5%EF%A1%BC">セルリアンタワー</a>のビジネスフロアに行くと警備員の方が立ってました。<br/>
駅の改札みたいなところで結構厳重に警備されていました。<br/>
さすが<a class="keyword" href="http://d.hatena.ne.jp/keyword/GMO">GMO</a>。<br/>
13:00ちょうどに受付の方がいらっしゃいました。<br/>
名刺を渡してチェックゲストカードを受け取ると<a class="keyword" href="http://d.hatena.ne.jp/keyword/Suica">Suica</a>と同じ要領で通過しました。<br/>
そして11Fへ。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GMO">GMO</a>の華やかなフロアが見えてきました。
奥に行くと<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>祭り開場が。</p>

<h2>準備</h2>

<p>ちょっとスタッフの方に質問して、人以外なら撮影の許可が降りましたので、いくつか撮影させてもらいました。</p>

<p>着席するととてもかわいらしいConoHa関連のパンフレットやシールが置いてありました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140705/20140705132618.jpg" alt="f:id:wnoguchi0727:20140705132618j:plain" title="f:id:wnoguchi0727:20140705132618j:plain" class="hatena-fotolife" itemprop="image"></span></p>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140713/20140713221628.jpg" alt="f:id:wnoguchi0727:20140713221628j:plain" title="f:id:wnoguchi0727:20140713221628j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>ひとまずConoHaへの<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>接続試験。
事前にconfigとキーペアの取得は済んでいたので一発でした。</p>

<pre class="code" data-unlink>ssh conoha-dns</pre>


<p>ここで、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ustream">Ustream</a>を会場で見るのはご勘弁ください！と会場に注意が促されました。<br/>
たしかに帯域を圧迫しそうですからね・・・。</p>

<h2>開始</h2>

<p>司会進行役は 鮭の切り身 さんです。</p>

<h3>注意点</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GMO">GMO</a>様の会議室をご利用させていただくのでいろいろと注意。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/UStream">UStream</a>配信されています等々。</p>

<p><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>の基本的な知識はとりあえず知ってるし、BINDの使い方も少しは知ってるから補欠の人には悪かったかな・・・と思ったのが大間違いでした。<br/>
ついていくのがやっとでした・・・。
自分がどれだけ知らないことがあるか思い知らされたセッションでした。</strong></p>

<h2>開始</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/GMO%A5%A4%A5%F3%A5%BF%A1%BC%A5%CD%A5%C3%A5%C8">GMOインターネット</a> タカノ様 が登壇されました。</p>

<p>こういった勉強会に対する会場の提供といったサポートをされているようです。</p>

<p>ここでConoHaのサービス紹介。</p>

<ul>
<li>ConoHaはCompute Nodes With Hi-flexible Architectureの略。</li>
<li>OpenStack+<a class="keyword" href="http://d.hatena.ne.jp/keyword/KVM">KVM</a>で実装されたサービス。</li>
<li>スナップショット機能もついてる。</li>
</ul>


<p>OpenStackは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon%20Web%20Services">Amazon Web Services</a>のEC2の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%D7%A5%F3%A5%BD%A1%BC%A5%B9">オープンソース</a>版に近いものです。</p>

<p>OpenStackは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A1%BC%A5%EB%A5%A4%A5%F3%A5%EF%A5%F3">オールインワン</a>構成でインストールしたことはありますが、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のコンピュートノードをぶら下げて実装できなかった悔しい思い出があります。</p>

<p>色々な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%DD%A1%BC%A5%CD%A5%F3%A5%C8">コンポーネント</a>で構成されているのでこのインフラをメンテナンスするのは大変だろうなあと思います。</p>

<p>ところで、ConoHaのコントロールパネルは</p>

<ul>
<li>.NET</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ASP.NET">ASP.NET</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/WCF">WCF</a></li>
</ul>


<p>で実装されているそうです。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Python">Python</a>(<a class="keyword" href="http://d.hatena.ne.jp/keyword/Django">Django</a>)で実装されているやつとは別なんですね・・・。とても好感が持てます。</p>

<p>ここで、このはモードにしたことはありますか？との投げかけがありましたが何のことやらわからなかったのですが、<br/>
言語を 日本語 から このは 言語</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140709/20140709222517.png" alt="f:id:wnoguchi0727:20140709222517p:plain" title="f:id:wnoguchi0727:20140709222517p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>に変更すると</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140709/20140709222519.png" alt="f:id:wnoguchi0727:20140709222519p:plain" title="f:id:wnoguchi0727:20140709222519p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>三雲このはちゃんが背景にお目見えしました。<br/>
とてもかわいいですね。<br/>
会場のみなさんも知らなかったようで驚いてましたｗ</p>

<p>ぜひ、<a href="https://twitter.com/MikumoConoHa">美雲このは</a> ちゃんをフォローして下さいねとのことでした。</p>

<ul>
<li>ConoHaちゃーじが増えた</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Suica">Suica</a>っぽいデザイン</li>
</ul>


<p>ご清聴ありがとうございました。</p>

<p>ちなみに、近いうちに同じフロアで</p>

<p><a href="http://conoha.doorkeeper.jp/events/11848">TechOYAJI～ドキッ！おやじだらけのLT大会！ポロリもあるよ - ConoHa | Doorkeeper</a>
のご案内</p>

<p>といったイベントも開催されるそうです。ポロリはどうかわかりませんが・・・。</p>

<h2>講演開始</h2>

<p>いよいよ滝澤氏による講演が始まりました。<br/>
資料は以下を参照とのことです。</p>

<p><a href="http://rack.connpass.com/event/7024/presentation/">夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～ - 資料一覧 - connpass</a></p>

<h3>まずは<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>のポートを開けるところから</h3>

<p>資料はこちら。</p>

<ul>
<li><a href="http://emaillab.jp/wp/wp-content/uploads/2014/07/hands-on_1_preparation.pdf">ハンズオン - 準備編</a></li>
</ul>


<p>rootユーザでやるのが気持ち悪い人は一般ユーザを作ってからやってくださいと言われました。<br/>
私もずっとrootで作業するのは気持ち悪いたちなので空き時間を見つけてやりました。<br/>
言われた時点でやるのは難しかったですね・・・。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>(FW)の設定</h3>

<p>基本的な流れは次の様な感じですね。</p>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>のルールを確認</li>
<li>Inboundの<a class="keyword" href="http://d.hatena.ne.jp/keyword/TCP">TCP</a>, <a class="keyword" href="http://d.hatena.ne.jp/keyword/UDP">UDP</a>の53番ポートの穴を開ける</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>のルールが変わったことを確認</li>
<li>ルールを保存</li>
</ol>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv4">IPv4</a>のFWを開ける</h4>

<pre class="code" data-unlink>sudo iptables -nvL INPUT --line-numbers
sudo iptables -I INPUT 5 -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT 
sudo iptables -I INPUT 6 -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT 
sudo iptables -nvL INPUT --line-numbers
sudo service iptables save</pre>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv6">IPv6</a>のFWを開ける</h4>

<pre class="code" data-unlink>sudo ip6tables -nvL INPUT --line-numbers
sudo ip6tables -I INPUT 5 -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT
sudo ip6tables -I INPUT 6 -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT
sudo service ip6tables save</pre>


<p>digコマンドが使えることを確認。</p>

<pre class="code" data-unlink>[root@v157-7-234-198 ~]# dig +short . soa
a.root-servers.net. nstld.verisign-grs.com. 2014070401 1800 900 604800 86400</pre>


<p>で、用意ができたらGoogleDocsの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%D7%A5%EC%A5%C3%A5%C9%A5%B7%A1%BC%A5%C8">スプレッドシート</a>を案内されました。
ここに自分のConoHa <a class="keyword" href="http://d.hatena.ne.jp/keyword/VPS">VPS</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv4">IPv4</a>アドレスと好きなラベル名を設定するようです。<br/>
<strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%20Docs">Google Docs</a>のリアルタイムコラボレーション機能を遺憾なく使った良い例だと思います。</strong></p>

<p>最初は <code>ifconfig</code> やっちゃったけど、本当は <code>ip addr</code> が本式。obsolete ですから。</p>

<pre class="code" data-unlink># ip addr | head
1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether fa:16:3e:01:b2:d0 brd ff:ff:ff:ff:ff:ff
    inet 157.7.234.198/23 brd 157.7.235.255 scope global eth0
    inet6 2400:8500:1301:813:a157:7:234:198f/64 scope global 
       valid_lft forever preferred_lft forever</pre>


<p>ところで、ConoHaの<a class="keyword" href="http://d.hatena.ne.jp/keyword/VPS">VPS</a>は<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv6">IPv6</a>アドレスが豊富に割り当てられていますねー。<br/>
使い方がわからなかったので使わなかったですが・・・。</p>

<p>もりだくさんでした・・・。</p>

<h3>ここで<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>に関する基本的な説明</h3>

<p>ホスト名を<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>に解決するものをリゾルバと呼ぶ</p>

<p><code>/etc/hosts</code> で見つからなかったらリゾルバは<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>にアクセスに行く。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>のプレイヤー</h3>

<ul>
<li>スタブリゾルバ（このPC）</li>
<li>フルサービスリゾルバ（リカーシブサーバ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>キャッシュサーバとも）<code>/etc/resolv.conf</code> に指定するサーバ</li>
<li>権威ネームサーバ(Authoritative Name Server)</li>
</ul>


<h3>ここから本番</h3>

<p><strong>RFC1034/RFC1035</strong> が基本的な使用。
それ以外は拡張仕様。</p>

<p><strong>RFC2181</strong> が曖昧な部分を明確にしようとしたもの</p>

<p>ルートのためにはnullラベルが用意されている。
ノードの</p>

<pre class="code" data-unlink>www.example.jp.</pre>


<p><strong>最後がドットで終わるのは空のラベルがあるから。</strong></p>

<p>っていう理由があるのはかなり腑に落ちました。</p>

<ul>
<li>マスターファイルは絶対<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>名で記述される</li>
<li>最後にドットがついていないと相対<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>として扱われる。</li>
<li>digでも絶対<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>名で使用する</li>
<li>0オクテットは空のラベルで予約されている</li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%C8%A5%B3%A5%EB">プロトコル</a>上は8bitコードも許容されている</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SRV">SRV</a>レコード</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DKIM">DKIM</a></li>
</ul>
</li>
<li><p><strong>ケースインセンシティブ</strong></p></li>
<li><strong>可能な限り大文字小文字を維持する</strong></li>
<li>興味のある方はRFC4343を参照。</li>
</ul>


<p>ようやく休憩となりました。けっこうもりだくさんです。</p>

<p>一般ユーザーを作成する暇がなかったのでここで作成 visudo でパス無しで sudo できるように ec2-user を作成。<br/>
ここでも ec2-user を使いたくなるのは<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>に毒されている・・・。</p>

<p>休憩中によく聞こえてきたのはEC2のときはセキュリティグループでフィルタリングしちゃうから<a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>忘れちゃったというお話でした。<br/>
あーなるほどなーと思いました。<br/>
僕の場合は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%AB%BB%AA">自鯖</a>で参考にする<a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>の自動生成<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8">スクリプト</a>ばっかり使ってたから戸別のルールを確認するのが疎かになってなってたのが仇になった感じです。</p>

<p>ちなみに<a class="keyword" href="http://d.hatena.ne.jp/keyword/iptables">iptables</a>の設定ファイルは以下のファイルで定義されています。(<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv4">IPv4</a>)</p>

<pre class="code" data-unlink># cat /etc/sysconfig/iptables
# Generated by iptables-save v1.4.7 on Sun Jul 13 08:30:43 2014
*filter
:INPUT ACCEPT [4278:5161614]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [1971:96049]
-A INPUT -p udp -m state --state NEW -m udp --dport 53 -j ACCEPT 
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT 
-A INPUT -p tcp -m state --state NEW -m tcp --dport 53 -j ACCEPT 
COMMIT
# Completed on Sun Jul 13 08:30:43 2014</pre>


<ul>
<li>権威の委任</li>
<li>RRs記述</li>
<li>親ゾーン</li>
<li><p>グルーRR</p></li>
<li><p>IANA（アイアナ）</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ICANN">ICANN</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%B8%A5%B9%A5%C8%A5%EA">レジストリ</a></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%B8%A5%B9%A5%C8%A5%E9">レジストラ</a></p></li>
<li><p>gTLD(generic)</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ccTLD">ccTLD</a>(country-code)</li>
</ul>


<pre class="code" data-unlink>.tokyo
.nagoya</pre>


<p>これもgTLD。最初、私はエイプリルフールのネタかと思いました。</p>

<h3>予約済み<a class="keyword" href="http://d.hatena.ne.jp/keyword/TLD">TLD</a></h3>

<ul>
<li>test</li>
<li>examle</li>
<li>invalid</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/localhost">localhost</a></li>
<li><p>local</p></li>
<li><p><code>.local</code> は使っちゃダメ。とのことでした。</p></li>
<li>理由はRFC6762を読んでくださいだそうです。</li>
</ul>


<p>こんなところに理由が書いてありました。</p>

<p><a href="http://ya.maya.st/d/201406c.html#s20140626_2">どさにっき</a></p>

<ul>
<li>ARPA<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a></li>
<li>ip6.arpa</li>
<li>リソースレコード(RR)</li>
<li>ホスト名や<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>とと言った資源に関するデータ</li>
<li>これらをまとめて</li>
<li>RRsetとする</li>
</ul>


<pre class="code" data-unlink>OWNER TTL CLASS TYPE RDATA</pre>


<ul>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/TTL">TTL</a>=0のときはキャッシュ禁止を表す</p></li>
<li><p>CLASS</p></li>
<li>IN(Internet)</li>
<li>CH</li>
<li>HS</li>
</ul>


<p>CHはネームサーバの情報の取得に使われている</p>

<pre class="code" data-unlink>dig TXT CH…</pre>


<ul>
<li>TYPE</li>
<li>RRの種類</li>
<li>A, NS, CNAME, <a class="keyword" href="http://d.hatena.ne.jp/keyword/SOA">SOA</a></li>
<li><p>RDATA（資源データ）</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/SOA">SOA</a></p></li>
<li>ゾーンの権威の開始</li>
<li><p>ゾーン転送はこのRRの設定によって動作する</p></li>
<li><p>ネガティブキャッシュの<a class="keyword" href="http://d.hatena.ne.jp/keyword/TTL">TTL</a>であるため、86400のような大きな値を設定しないように。</p></li>
<li><p>NSにはCNAMEを使用してはいけない</p></li>
<li>AAAA（クワッドエイと読む）</li>
<li><code>.in-addr.arpa.</code></li>
<li><p>1つのアドレスに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のPTRレコードを記述できる</p></li>
<li><p>TXT</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SPF">SPF</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DKIM">DKIM</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNSBL">DNSBL</a></li>
</ul>


<p>様々な目的で使用される</p>

<p>RRは1行で示される</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>行になる場合はカッコ <code>()</code>で括るそうです。</p>

<pre class="code" data-unlink>$ORIGIN example.com.</pre>


<ul>
<li>@はオリジンを意味する</li>
<li><p>ゾーン頂点の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%E1%A5%A4%A5%F3">ドメイン</a>名</p></li>
<li><p><code>$TTL TTL</code></p></li>
<li><p>デフォルトの<a class="keyword" href="http://d.hatena.ne.jp/keyword/TTL">TTL</a>を指定した値に変更する</p></li>
<li><p>クラスINは省略可能</p></li>
<li><p>$INCLUDE ファイル名のファイルを挿入する</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>メッセージ</li>
<li>EDNS0を使うと<a class="keyword" href="http://d.hatena.ne.jp/keyword/UDP">UDP</a>でも</li>
</ul>


<p>ちょっとここで怒涛のハンズオンが展開されましたが、ページをの大半を割いてしまうため、省略します。</p>

<p><a href="http://emaillab.jp/wp/wp-content/uploads/2014/07/hands-on_2_dig.pdf">ハンズオン - dig編</a></p>

<p>ゾーン転送が成功しているか調べる（シリアル値）ときはセカンダリサーバのシリアル値がプライマリサーバのシリアル値と一致していることを確認するそうです。目からうろこですね。</p>

<pre class="code" data-unlink>[ec2-user@v157-7-234-198 ~]$ dig conoha.jp. +nssearch
SOA ns1.gmointernet.com. hostmaster.gmointernet.com. 2014012105 3600 300 3600000 7200 from server 157.7.32.254 in 2 ms.
SOA ns1.gmointernet.com. hostmaster.gmointernet.com. 2014012105 3600 300 3600000 7200 from server 157.7.33.254 in 1 ms.
SOA ns1.gmointernet.com. hostmaster.gmointernet.com. 2014012105 3600 300 3600000 7200 from server 2400:8500:3fff::254 in 2 ms.
SOA ns1.gmointernet.com. hostmaster.gmointernet.com. 2014012105 3600 300 3600000 7200 from server 2400:8500:3000::254 in 1 ms.</pre>


<p>ちなみに <code>+multiline</code> オプションをつけると綺麗に整形されて表示されるそうです。<br/>
便利ですね。</p>

<pre class="code" data-unlink>[ec2-user@v157-7-234-198 ~]$ dig @8.8.8.8 jp. SOA +dnssec +multiline

; &lt;&lt;&gt;&gt; DiG 9.8.2rc1-RedHat-9.8.2-0.23.rc1.el6_5.1 &lt;&lt;&gt;&gt; @8.8.8.8 jp. SOA +dnssec +multiline
; (1 server found)
;; global options: +cmd
;; Got answer:
;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 20695
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags: do; udp: 512
;; QUESTION SECTION:
;jp.            IN SOA

;; ANSWER SECTION:
jp.         21592 IN SOA z.dns.jp. root.dns.jp. (
                1404543604 ; serial
                3600       ; refresh (1 hour)
                900        ; retry (15 minutes)
                1814400    ; expire (3 weeks)
                900        ; minimum (15 minutes)
                )
jp.         21592 IN RRSIG SOA 8 1 86400 20140728174502 (
                20140628174502 33429 jp.
                RX0UdYgW3YBVNfIjvuyB8t1G630o7x2XZgIAZ0Ab8jyZ
                G7YTCh2kdfFodJKdJYC9Xi+k9ecydB7V1cNqKm4/u1io
                ejmKPGoU8SqYX+W5iUpH8JRMtXhi9tPg2+f1roZocuhc
                tsgdEj7GzZLJzaWvjfPCLnDwhPjy7j6idxp9kkA= )

;; Query time: 66 msec
;; SERVER: 8.8.8.8#53(8.8.8.8)
;; WHEN: Sat Jul  5 16:10:52 2014
;; MSG SIZE  rcvd: 240</pre>


<h3>リゾルバについて</h3>

<h4>スタブリゾルバ</h4>

<ul>
<li>キャッシュはMAY</li>
</ul>


<h4>フルサービスリゾルバ</h4>

<ul>
<li><p>キャッシュはMUST</p></li>
<li><p>全世界に公開するとオープンリゾルバになってしまう</p></li>
</ul>


<p>前々から気になっていて、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C1%B5%BF%B1%FE%C5%FA">質疑応答</a>の時に<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%20Public%20DNS">Google Public DNS</a>(8.8.8.8, 8.8.4.4)はオープンリゾルバですかと確認したのですが、<br/>
オープンリゾルバだそうです。だけど受けるところと出すところを別にしていたりシてかなり工夫しているらしいです。<br/>
すごいなー。</p>

<ul>
<li>セカンダリは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>OK</li>
<li>マスター、スレーブ</li>
<li><p>スレーブからゾーン転送要求を行う</p></li>
<li><p>AXFRには<a class="keyword" href="http://d.hatena.ne.jp/keyword/TCP">TCP</a></p></li>
<li><p>IXFRには<a class="keyword" href="http://d.hatena.ne.jp/keyword/UDP">UDP</a></p></li>
<li><p>伝搬遅延</p></li>
<li><p>NOTIFYで解決</p></li>
<li><p>ゾーン転送(NOTIFY)についてはRFC1996</p></li>
</ul>


<h3>オープンリゾルバであることの何が悪いのか</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/UDP">UDP</a>のソースIPは簡単に詐称できる</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>リフレクション</li>
<li>毒入れをしやすくなる</li>
</ul>


<p>講師さんが前述の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%D7%A5%EC%A5%C3%A5%C9%A5%B7%A1%BC%A5%C8">スプレッドシート</a>の別のシートに転写した内容をコピペして makezone.sh で自動生成されました。<br/>
シェル芸職人・・・。</p>

<h3>Unbound</h3>

<p>今回はBINDを使わないそうです。
というかBINDはBIND10で開発が終了してしまったらしく、次のものも微妙？なのだそうです。</p>

<p>ここではフルサービスリゾルバにUnbound、権威サーバに<a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>を使います。</p>

<p><a href="http://unbound.jp/">日本Unboundユーザー会</a></p>

<p>滝澤氏が翻訳されたサイトとのことです。</p>

<h3>Unbound</h3>

<ul>
<li>Unbound 1.4.14以降、この2年間は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>はみつかっていない</li>
<li>RHEL7は標準でUnboundはインストールできる。</li>
<li>デフォルトの設定でローカル動作可能（オープンリゾルバとはならない）</li>
<li>NXDOMAIN</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a></h3>

<ul>
<li>権威サーバ</li>
<li>名称は<a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%CA%A5%B0%A5%E9%A5%E0">アナグラム</a></li>
<li>バージョン4系列</li>
<li>ルートサーバのうちH, K, Lが<a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>で運用されている。</li>
<li>BINDに対する<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BC%A5%ED%A5%C7%A5%A4%B9%B6%B7%E2">ゼロデイ攻撃</a>対策</li>
</ul>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>の特徴</h4>

<ul>
<li>リゾルバ機能なし</li>
<li>設定ファイルがシンプル</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a> 3.2.13以降は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>は見つかっていない</li>
<li>昨年NSD4がリリース</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/nsd">nsd</a>-controlによる制御</li>
<li>パターン

<ul>
<li>動的にゾーンの追加・削除が可能</li>
</ul>
</li>
</ul>


<p><a href="http://emaillab.jp/wp/wp-content/uploads/2014/07/hands-on_3_unbound.pdf">ハンズオン - Unbound編</a></p>

<p>ConoHaの<a class="keyword" href="http://d.hatena.ne.jp/keyword/VPS">VPS</a>では標準でEPELの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>が登録されているそうです。</p>

<pre class="code" data-unlink>sudo yum --enablerepo=epel install unbound
cd /etc/unbound 
sudo cp -p unbound.conf{,.orig} 
sed &#39;/^.*#/ d;/^$/ d&#39; unbound.conf</pre>


<p>設定ファイルをコメント抜きで俯瞰すると以下のとおり。<br/>
なんだか<a class="keyword" href="http://d.hatena.ne.jp/keyword/YAML">YAML</a>っぽい。</p>

<pre class="code" data-unlink>server:
    verbosity: 1
    statistics-interval: 0
    statistics-cumulative: yes
    extended-statistics: yes
    num-threads: 2
    interface-automatic: no
    outgoing-port-permit: 32768-65535
    outgoing-port-avoid: 0-32767
    max-udp-size: 3072
    chroot: &#34;&#34;
    username: &#34;unbound&#34;
    directory: &#34;/etc/unbound&#34;
    log-time-ascii: yes
    pidfile: &#34;/var/run/unbound/unbound.pid&#34;
    harden-glue: yes
    harden-dnssec-stripped: yes
    harden-below-nxdomain: yes
    harden-referral-path: yes
    use-caps-for-id: no
    unwanted-reply-threshold: 10000000
    prefetch: yes
    prefetch-key: yes
    rrset-roundrobin: yes
    minimal-responses: yes
    dlv-anchor-file: &#34;/etc/unbound/dlv.isc.org.key&#34;
    trusted-keys-file: /etc/unbound/keys.d/*.key
    auto-trust-anchor-file: &#34;/var/lib/unbound/root.anchor&#34;
    val-clean-additional: yes
    val-permissive-mode: no
    val-log-level: 1
    include: /etc/unbound/local.d/*.conf
remote-control:
    control-enable: yes
    server-key-file: &#34;/etc/unbound/unbound_server.key&#34;
    server-cert-file: &#34;/etc/unbound/unbound_server.pem&#34;
    control-key-file: &#34;/etc/unbound/unbound_control.key&#34;
    control-cert-file: &#34;/etc/unbound/unbound_control.pem&#34;
include: /etc/unbound/conf.d/*.conf</pre>


<ul>
<li>必要に応じて、interface, <a class="keyword" href="http://d.hatena.ne.jp/keyword/access">access</a>-controlを</li>
<li>設定
 - デフォルト値は⼩規模向けなので⼤規模向け</li>
<li>⽤途の場合にはチューニングも⾏う。</li>
</ul>


<p>このへんのハンズオンはかなり複雑なので省略します。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>編</h3>

<p><a href="http://emaillab.jp/wp/wp-content/uploads/2014/07/hands-on_4_nsd.pdf">ハンズオン – NSD編</a></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a> 4の<a class="keyword" href="http://d.hatena.ne.jp/keyword/RPM">RPM</a>パッケージは提供されていない。ので滝澤氏自身がビルドされた<a class="keyword" href="http://d.hatena.ne.jp/keyword/RPM">RPM</a>をインストールしました。</p>

<pre class="code" data-unlink>[ec2-user@v157-7-234-198 ~]$ wget http://www.sub.emaillab.jp/nsd-4.0.3-1.el6.x86_64.rpm
--2014-07-05 17:29:52--  http://www.sub.emaillab.jp/nsd-4.0.3-1.el6.x86_64.rpm
www.sub.emaillab.jp をDNSに問いあわせています... 2400:8500:1301:813:a157:7:234:430, 157.7.234.43
www.sub.emaillab.jp|2400:8500:1301:813:a157:7:234:430|:80 に接続しています... 接続しました。
HTTP による接続要求を送信しました、応答を待っています... 404 Not Found
2014-07-05 17:29:52 エラー 404: Not Found。</pre>


<p>おっと、<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv4">IPv4</a>でダウンロードしないといけなかったですか。</p>

<pre class="code" data-unlink>[ec2-user@v157-7-234-198 ~]$ wget --4 http://www.sub.emaillab.jp/nsd-4.0.3-1.el6.x86_64.rpm
wget: unrecognized option &#39;--4&#39;
使い方: wget [オプション]... [URL]...

詳しいオプションは `wget --help&#39; を実行してください。
[ec2-user@v157-7-234-198 ~]$ wget -4 http://www.sub.emaillab.jp/nsd-4.0.3-1.el6.x86_64.rpm
--2014-07-05 17:30:47--  http://www.sub.emaillab.jp/nsd-4.0.3-1.el6.x86_64.rpm
www.sub.emaillab.jp をDNSに問いあわせています... 157.7.234.43
www.sub.emaillab.jp|157.7.234.43|:80 に接続しています... 接続しました。
HTTP による接続要求を送信しました、応答を待っています... 200 OK
長さ: 792320 (774K) [application/x-redhat-package-manager]
`nsd-4.0.3-1.el6.x86_64.rpm&#39; に保存中

100%[====================================================================================================================================&gt;] 792,320     --.-K/s 時間 0.04s   

2014-07-05 17:30:47 (19.8 MB/s) - `nsd-4.0.3-1.el6.x86_64.rpm&#39; へ保存完了 [792320/792320]</pre>


<p>インストール。</p>

<pre class="code" data-unlink>[ec2-user@v157-7-234-198 ~]$ sudo rpm -ivh nsd-4.0.3-1.el6.x86_64.rpm 
準備中...                ########################################### [100%]
   1:nsd                    ########################################### [100%]</pre>


<p>これ以降のハンズオンもかなり複雑でしたので省略します。</p>

<p>怒涛のハンズオンが終了していよいよLTに突入です。</p>

<h2>LT</h2>

<h3>@tukiyo3 さんによる「 Web系,社内インフラ担当向けTips紹介 」</h3>

<p><a href="http://qiita.com/tukiyo3/items/18411315a05b80e574bc">LT資料 (夏のDNS祭り 2014 ～入門セミナ＆ハンズオン～) - Qiita</a>
<a href="http://www.mindmeister.com/ja/359570180/tips">Tips - MindMeister 思考マップ</a></p>

<ul>
<li>メールの送り合戦になってしまった</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/nagios">nagios</a>が上がると電話がかかるようにした</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/whois">whois</a>で所属する社員一覧をとってきたり</li>
<li>シェル芸職人。</li>
</ul>


<h3>@toshi__ya さんによる「 <a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>キャッシュサーバの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D9%A5%F3%A5%C1%A5%DE%A1%BC%A5%AF">ベンチマーク</a>テスト 」</h3>

<p><a href="https://twitter.com/toshi__ya">@toshi__ya</a></p>

<p>スライドはこちら。</p>

<p><a href="http://www.slideshare.net/ToshiyaOkita/dns-20140705-upver-36655108">Dns 20140705 up_ver</a></p>

<ul>
<li>dnsperfを用いて<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>サーバの負荷試験を実施する。</li>
<li>BIND10を起動しただけだと権威サーバにもならなければキャッシュサーバにもならない</li>
<li>unbound.confのチューニングが必要だ！！</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AD%A5%E3%A5%C3%A5%B7%A5%E5%A5%E1%A5%E2%A5%EA">キャッシュメモリ</a>の量とか増やせばいい？</li>
</ul>


<h3>@twovs さんによる「パケットが教えてくれたルートサーバが 13個の理由 」</h3>

<p><a href="https://twitter.com/twovs">@twovs</a></p>

<p>スライドはこちら。</p>

<p><a href="http://www.slideshare.net/twovs/13-36661577">パケットが教えてくれた ルートサーバが 13個の理由</a></p>

<p>512バイト中に13個入るか試してみたそうです。</p>

<p>だが、途中で13個も入らないんじゃないかという結論に達しそうになり、</p>

<p><strong>I can compress RRs a little. ワタシハ アッシュク チョットデキル</strong></p>

<p>という事実に気付いたそうです。</p>

<p>Message Compressionを頑張って頑張って収まることがわかりました。<br/>
14個目も入るか試してみたそうです。
収まったそうです・・・。</p>

<p><strong>がんばればrootサーバ14個もいける。</strong></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>勉強会の開場ネットワークを作ってみた</h3>

<p>LTではありませんが、最後にこの勉強会のインフラを構築してくれた方々よりご紹介がありました。</p>

<ul>
<li>PyConのネットワークを構築する</li>
<li>快適なネットワークを皆様に届けたい！！</li>
<li>splunk</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/VPN">VPN</a> Gate</li>
<li>L2スイッチの下に</li>
</ul>


<h4>routerboard</h4>

<ul>
<li>syslogや<a class="keyword" href="http://d.hatena.ne.jp/keyword/SNMP">SNMP</a>の取得が可能</li>
<li>持ち込んだスイッチのSpanning-treeが生きておりUplinkがShutdown</li>
</ul>


<p><strong>BuffaloのAP買ってこようかとした！</strong></p>

<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv6">IPv6</a>をどうやって構築したか</h4>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/SoftEther">SoftEther</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/PacketiX">PacketiX</a>で自宅に<a class="keyword" href="http://d.hatena.ne.jp/keyword/VPN">VPN</a>して<a class="keyword" href="http://d.hatena.ne.jp/keyword/IPv6">IPv6</a>貫通してた。<br/>
会場で驚きの声があがりました。</p>

<h4>Splunk</h4>

<p>リアルタイムにログを可視化できる。</p>

<h2>まとめ</h2>

<p>怒涛のハンズオンは終了いたしました・・・。<br/>
うーん、最後の<a class="keyword" href="http://d.hatena.ne.jp/keyword/NSD">NSD</a>のハンズオンは苦戦してしまいうまくいきませんでした。</p>

<p>ただ、自分の知っているようで知らなかった事実が色々とあって、<br/>
BINDとか少し設定できるし、ちょっと復習的な感じになるのかなーと思っていましたが、<br/>
大違いで、いい感じで期待を裏切られました。</p>

<h3>懇親会に参加しました</h3>

<p>渋谷人多い！</p>

<p>その後は生まれ始めて勉強会の懇親会にも参加して色々な方とお話することができました。<br/>
自宅ラック勉強会の方々やハートビーツの講師滝澤さんともお話することができました。<br/>
ガチでインフラ系のエンジニアの方々の生の声が聞けてかなりネットワーク関係の自分の知識不足感を実感して
いい刺激を受けることができました。</p>

<p>どちらかというとWeb系の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%A5%A8%A5%F3%A5%B8%A5%CB%A5%A2">システムエンジニア</a>なので、異なった視点の話題を交わすことができてとても面白かったです。</p>

<p>以上、<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>がちょっとできるようになった体験記でした。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: WiresharkをMac OS X Mavericks(10.9.4)に入れる
BASENAME: 2014/07/08/231557
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/08/2014 23:15:57
CATEGORY: Wireshark
CATEGORY: Mac
CATEGORY: OS X
CATEGORY: Mavericks
CATEGORY: ネットワーク
-----
BODY:
<p>ここからダウンロードしてインストール。</p>

<p><a href="http://www.wireshark.org/download.html">Wireshark · Download</a></p>

<p>しかし！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140708/20140708231314.png" alt="f:id:wnoguchi0727:20140708231314p:plain" title="f:id:wnoguchi0727:20140708231314p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/X11">X11</a>を入れろと言われてしまいました。そして飛んだ先が以下。</p>

<p><a href="http://support.apple.com/kb/HT5293">About X11 and OS X</a></p>

<blockquote><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/X11">X11</a> is no longer included with <a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a>, but <a class="keyword" href="http://d.hatena.ne.jp/keyword/X11">X11</a> server and client libraries for <a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a> are available from the XQuartz project: <a href="http://xquartz.macosforge.org.">http://xquartz.macosforge.org.</a> You should use the latest available version of XQuartz.</p></blockquote>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/X11">X11</a>はもう<a class="keyword" href="http://d.hatena.ne.jp/keyword/OS%20X">OS X</a>には含まれない予定だよ、代わりにXQuartzを使ってね的なやる気のないメッセージが書きなぐられています。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B0%A4%B0%A4%EB">ぐぐる</a>。</p>

<p><a href="http://qiita.com/isaoshimizu/items/da3e74d5a8e9b1d6b6a4">MacOSX - Mac OS X MavericksでWiresharkを使う＆Wiresharkフィルタサンプル - Qiita</a></p>

<p>そして公式サイトに飛び、</p>

<p><a href="http://xquartz.macosforge.org/landing/">XQuartz</a></p>

<p>ここでダウンロード、インストールまですませました。</p>

<p>ログアウトするか再起動してね的なダイアログが表示されるので従います。<br/>
再起動しました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140708/20140708231345.png" alt="f:id:wnoguchi0727:20140708231345p:plain" title="f:id:wnoguchi0727:20140708231345p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>そして<a class="keyword" href="http://d.hatena.ne.jp/keyword/Wireshark">Wireshark</a>を起動・・・できなかった。<br/>
「<a class="keyword" href="http://d.hatena.ne.jp/keyword/X11">X11</a>どこよ？」的なダイアログが出てきてしまいました。知らんがな・・・。<br/>
XQuartzインストールしたのにどこにも見当たらない。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140708/20140708231420.png" alt="f:id:wnoguchi0727:20140708231420p:plain" title="f:id:wnoguchi0727:20140708231420p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>さらに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B0%A4%B0%A4%EB">ぐぐる</a>。</p>

<p><a href="http://tekcert.com/blog/2014/02/10/how-get-wireshark-work-os-x-mavericks">How to get Wireshark to work in OS X Mavericks | tekcert.com</a></p>

<p>ありましたー！ユーティリティの下にありましたー！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140708/20140708231441.png" alt="f:id:wnoguchi0727:20140708231441p:plain" title="f:id:wnoguchi0727:20140708231441p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>でも<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>が表示されない。なぜ・・・。<br/>
上に書いてありました。</p>

<p>いったんターミナルを立ち上げて</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% /Applications/Wireshark.app/Contents/MacOS/Wireshark
2014-07-07 <span class="synConstant">23</span>:<span class="synConstant">30</span>:<span class="synConstant">10.849</span> defaults[<span class="synConstant">933</span>:<span class="synConstant">507</span>] 
The domain/default pair of (kCFPreferencesAnyApplication, AppleAquaColorVariant) does not exist
2014-07-07 <span class="synConstant">23</span>:<span class="synConstant">30</span>:<span class="synConstant">10.857</span> defaults[<span class="synConstant">934</span>:<span class="synConstant">507</span>] 
The domain/default pair of (kCFPreferencesAnyApplication, AppleHighlightColor) does not exist

(process:<span class="synConstant">916</span>): Gtk-WARNING **: Locale not supported by C library.
    Using the fallback <span class="synConstant">'C'</span> locale.

(wireshark-bin:<span class="synConstant">916</span>): Gtk-WARNING **: Unable to locate theme engine <span class="synStatement">in</span> module_path: <span class="synConstant">&quot;clearlooks&quot;</span>,
Fontconfig warning: ignoring sjis.UTF-8: not a valid language tag
</pre>


<p>とすると<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>がお目見え。
これ以降はわざわざターミナル立ち上げなくても<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>が立ち上がるようになりました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140708/20140708231519.png" alt="f:id:wnoguchi0727:20140708231519p:plain" title="f:id:wnoguchi0727:20140708231519p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>References</h2>

<ol>
<li><a href="http://www.wireshark.org/download.html">Wireshark · Download</a></li>
<li><a href="http://support.apple.com/kb/HT5293">About X11 and OS X</a></li>
<li><a href="http://qiita.com/isaoshimizu/items/da3e74d5a8e9b1d6b6a4">MacOSX - Mac OS X MavericksでWiresharkを使う＆Wiresharkフィルタサンプル - Qiita</a></li>
<li><a href="http://xquartz.macosforge.org/landing/">XQuartz</a></li>
<li><a href="http://tekcert.com/blog/2014/02/10/how-get-wireshark-work-os-x-mavericks">How to get Wireshark to work in OS X Mavericks | tekcert.com</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: SSH config常套句
BASENAME: 2014/07/08/225633
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/08/2014 22:56:33
CATEGORY: SSH
CATEGORY: Linux
CATEGORY: インフラ
-----
BODY:
<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a> セッション切らない</li>
<li>OpenSSH <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>の回避</li>
</ol>


<pre class="code" data-lang="" data-unlink>Host *
  ServerAliveInterval 15
  UseRoaming no</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでec2インスタンスを操作する
BASENAME: 2014/07/08/225228
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/08/2014 22:52:28
CATEGORY: AWS
CATEGORY: インフラ
CATEGORY: コマンド
CATEGORY: awscli
-----
BODY:
<p>よく忘れるので基本的な操作方法のまとめ。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>の操作</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を作成</h3>

<ul>
<li>AMI IDを調べてメモる</li>
<li>立ち上げたい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>数</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>タイプ: 現状t2.microが最小（2014/7/8現在）</li>
<li>使用するキーペア</li>
<li>適用するセキュリティグループ</li>
</ul>


<pre class="code" data-lang="" data-unlink>% aws ec2 run-instances --image-id ami-29dc9228 --count 1 --instance-type t2.micro --key-name default --security-groups hoge | jq &#39;.&#39;</pre>


<h4>AZを指定する</h4>

<p><code>--placement AvailabilityZone=ap-northeast-1a</code> をつけてやればいい。</p>

<pre class="code" data-lang="" data-unlink>aws ec2 run-instances --image-id ami-29dc9228 --count 1 --instance-type t2.micro --key-name default --security-groups web --placement AvailabilityZone=ap-northeast-1a | jq &#39;.&#39;</pre>


<h4>DeleteOnTerminationを避ける</h4>

<p>今ではほとんどEBSから起動されるEC2<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>がほとんどだが、このままでは DeleteOnTermination=true となってしまっているので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>をterminateすると<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>に紐付けられているボリューム自体も削除されてしまう。</p>

<p>これを避けたいなら</p>

<pre class="code" data-lang="" data-unlink>% aws ec2 run-instances --image-id ami-29dc9228 --count 1 --instance-type t2.micro --key-name default --security-groups hoge \
                        --block-device-mappings &#34;[{\&#34;DeviceName\&#34;: \&#34;/dev/xvda\&#34;,\&#34;Ebs\&#34;:{\&#34;DeleteOnTermination\&#34;: \&#34;false\&#34;}}]&#34; | jq &#39;.&#39;</pre>


<p>としなければならない。面倒だが。</p>

<p>既に作成された<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>について DeleteOnTermination=true としたい場合は</p>

<pre class="code" data-lang="" data-unlink>% aws ec2 modify-instance-attribute --instance-id i-dfff36d1 --block-device-mappings &#34;[{\&#34;DeviceName\&#34;: \&#34;/dev/xvda\&#34;,\&#34;Ebs\&#34;:{\&#34;DeleteOnTermination\&#34;: \&#34;false\&#34;}}]&#34; | jq &#39;.&#39;</pre>


<p>とすればいい。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を起動</h3>

<pre class="code" data-lang="" data-unlink>% aws ec2 start-instances --instance-ids i-xxxxxxxx | jq &#39;.&#39;</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を停止</h3>

<pre class="code" data-lang="" data-unlink>% aws ec2 stop-instances --instance-ids i-xxxxxxxx | jq &#39;.&#39;          </pre>


<p>停まったかどうか確認。</p>

<pre class="code" data-lang="" data-unlink>% aws ec2 describe-instances --instance-ids i-xxxxxxxx | jq -r &#39;.Reservations [] .Instances [] .State .Name&#39;
stopped</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を削除(terminate)</h3>

<pre class="code" data-lang="" data-unlink>% aws ec2 terminate-instances --instance-ids i-xxxxxxxx | jq &#39;.&#39;</pre>


<h2>jqで欲しい値をとってくる</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>ID</h3>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 describe-instances <span class="synStatement">|</span> jq -r <span class="synConstant">'.Reservations [] .Instances [] .InstanceId'</span>
i-xxxxxxxx
</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B0%A5%ED%A1%BC%A5%D0%A5%EBIP%A5%A2%A5%C9%A5%EC%A5%B9">グローバルIPアドレス</a></h3>

<pre class="code" data-lang="" data-unlink>% aws ec2 describe-instances | jq -r &#39;.Reservations [] .Instances [] .PublicIpAddress&#39;
xxx.xxx.xxx.xxx</pre>


<h3>PublicDNS名</h3>

<pre class="code" data-lang="" data-unlink>% aws ec2 describe-instances | jq -r &#39;.Reservations [] .Instances [] .PublicDnsName&#39;
ec2-xxx-xxx-xxx-xxx.ap-northeast-1.compute.amazonaws.com</pre>


<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>で接続するとき</h2>

<p>単なる覚え書き。</p>

<pre class="code" data-lang="" data-unlink>ssh ec2-user@xxx.xxx.xxx.xxx -i ~/.ssh/foobar.pem</pre>


<h2>References</h2>

<ol>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html">run-instances — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/start-instances.html">start-instances — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/stop-instances.html">stop-instances — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/terminate-instances.html">terminate-instances — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html">describe-instances — AWS CLI 1.3.21 documentation</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでt1.microインスタンスをたちあげようとしたら怒られたでござる
BASENAME: 2014/07/08/223020
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/08/2014 22:30:20
CATEGORY: AWS
CATEGORY: インフラ
CATEGORY: awscli
-----
BODY:
<p><code>t1.micro</code> で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を<a class="keyword" href="http://d.hatena.ne.jp/keyword/aws">aws</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/cli">cli</a>から立ち上げようとAMI ID調べて立ち上げようとしたら失敗した。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 run-instances --image-id ami-29dc9228 --count <span class="synConstant">1</span> --instance-type t1.micro --key-name default --security-groups hoge <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
A client error (InvalidParameterCombination) occurred: Non-Windows instances with a virtualization <span class="synStatement">type</span> of <span class="synConstant">'hvm'</span> are currently not supported <span class="synStatement">for</span> this instance <span class="synStatement">type</span>.
</pre>


<p>この<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>タイプはサポートしてないぞゴルァ！と怒られてしまいました。<br/>
しかたなくManagement Consoleからどんなタイプが選べるのか確認してみると <code>t2.micro</code> という<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>タイプが・・・。<br/>
「無料枠に最適！」って書いてあったのでこれで立ち上げてみました。</p>

<pre class="code" data-lang="" data-unlink>% aws ec2 run-instances --image-id ami-29dc9228 --count 1 --instance-type t2.micro --key-name default --security-groups hoge | jq &#39;.&#39;
{
  &#34;Instances&#34;: [
    {
    (snip)
    }
  ],
  &#34;Groups&#34;: [],
  &#34;ReservationId&#34;: &#34;r-ffffaaaa&#34;,
  &#34;OwnerId&#34;: &#34;ffffffffffff&#34;
}</pre>


<p>うーん、今度からはt1.micro<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>じゃなくてt2.micro<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>っていう新しい最小の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>タイプが追加された？変更された？みたいだ。<br/>
発表は2014/7/1とタイムリー。<br/>
T2<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>にはCPUクレジットという概念が追加されたみたい。<br/>
バーストするけど、クレジット消費してしまっても極端には性能は落ちませんよってことかな？</p>

<h2>References</h2>

<ol>
<li><a href="http://dogmap.jp/2014/07/04/t2-micro/">dogmap.jp を t1.micro から t2.micro に変更してみました | dogmap.jp</a></li>
<li><a href="http://aws.typepad.com/aws_japan/2014/07/low-cost-burstable-ec2-instances.html">Amazon Web Services ブログ: 【AWS発表】バースト可能な性能を持つ新しい低コストEC2インスタンス</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでセキュリティグループを定義する
BASENAME: 2014/07/08/220844
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/08/2014 22:08:44
CATEGORY: AWS
CATEGORY: インフラ
CATEGORY: awscli
-----
BODY:
<p>このへんは手でやったほうが早い気がしないでもない。<br/>
CloudFormationとかだといろいろよろしくやってくれるんだろうか。<br/>
まだその辺の境地にも達してないけど・・・。</p>

<h2>セキュリティグループの作成</h2>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 create-security-group --group-name web --description <span class="synConstant">&quot;Web server role security group.&quot;</span>
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>, 
    <span class="synConstant">&quot;GroupId&quot;</span>: <span class="synConstant">&quot;sg-ffffffff&quot;</span>
}
</pre>


<h2>Inbound方向の規則を定義する</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>(ICMP)応答</h3>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>aws ec2 authorize-security-group-ingress --group-name web --protocol icmp --port -1 --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
{
  <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a></h3>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 authorize-security-group-ingress --group-name web --protocol tcp --port <span class="synConstant">22</span> --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
{
  <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
</pre>


<h3>HTTP</h3>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 authorize-security-group-ingress --group-name web --protocol tcp --port <span class="synConstant">80</span> --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
{
  <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
</pre>


<h2>Outbound方向</h2>

<p>Outbound(authorize-security-group-egress)方向はデフォルトで全通過。</p>

<p>まとめると</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>aws ec2 create-security-group --group-name web --description <span class="synConstant">&quot;Web server role security group.&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
aws ec2 authorize-security-group-ingress --group-name web --protocol icmp --port -1 --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
aws ec2 authorize-security-group-ingress --group-name web --protocol tcp --port <span class="synConstant">22</span> --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
aws ec2 authorize-security-group-ingress --group-name web --protocol tcp --port <span class="synConstant">80</span> --cidr <span class="synConstant">&quot;0.0.0.0/0&quot;</span> <span class="synStatement">|</span> jq <span class="synConstant">'.'</span>
</pre>


<h2>逆の操作</h2>

<p>セキュリティグループに対して以下の様な操作を行うと22番ポートが封じられるので<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>不能になる。<br/>
CIDRまできちんと記述しないといけないので注意。</p>

<pre class="code" data-lang="" data-unlink>aws ec2 revoke-security-group-ingress --group-name web --protocol tcp --port 22 --cidr &#34;0.0.0.0/0&#34; | jq &#39;.&#39;</pre>


<p>ただし、ICMP規則を削除するときは</p>

<pre class="code" data-lang="" data-unlink>aws ec2 revoke-security-group-ingress --group-name web --protocol icmp --port -1 --cidr &#34;0.0.0.0/0&#34; | jq &#39;.&#39;</pre>


<p>に関してはいったん<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を止めないと<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>をずっと受け入れ続けてしまうみたいなので、いったん <code>Ctrl+C</code> でとめてからもう一回<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を打ってみると通らなくなることが確認できる。</p>

<h2>References</h2>

<ol>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html">authorize-security-group-ingress — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-egress.html">authorize-security-group-egress — AWS CLI 1.3.21 documentation</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでキーペア（鍵ペア）を生成する
BASENAME: 2014/07/06/220505
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/06/2014 22:05:05
CATEGORY: AWS
CATEGORY: シェルスクリプト
CATEGORY: awscli
-----
BODY:
<p>意外と簡単。あとは jq で見せ方を工夫すればOK。<br/>
ここでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>のinsecure private keyをダミーとして使用。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 create-key-pair --key-name default <span class="synStatement">|</span> jq -r <span class="synConstant">'.KeyMaterial'</span> <span class="synStatement">|</span> tee ~/.ssh/aws-ec2-default.pem &amp;&amp; chmod <span class="synConstant">600</span> ~/.ssh/aws-ec2-default.pem
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEA6NF8iallvQVp22WDkTkyrtvp9eWW6A8YVr+kz4TjGYe7gHzI
w+niNltGEFHzD8+v1I2YJ6oXevct1YeS0o9HZyN1Q9qgCgzUFtdOKLv6IedplqoP
kcmF0aYet2PkEDo3MlTBckFXPITAMzF8dJSIFo9D8HfdOV0IAdx4O7PtixWKn5y2
hMNG0zQPyUecp4pzC6kivAIhyfHilFR61RGL+GPXQ2MWZWFYbAGjyiYJnAmCP3NO
Td0jMZEnDkbUvxhMmBYSdETk1rRgm+R4LOzFUGaHqHDLKLX+FIPKcF96hrucXzcW
yLbIbEgE98OHlnVYCzRdK8jlqm8tehUc9c9WhQIBIwKCAQEA4iqWPJXtzZA68mKd
ELs4jJsdyky+ewdZeNds5tjcnHU5zUYE25K+ffJED9qUWICcLZDc81TGWjHyAqD1
Bw7XpgUwFgeUJwUlzQurAv+/ySnxiwuaGJfhFM1CaQHzfXphgVml+fZUvnJUTvzf
TK2Lg6EdbUE9TarUlBf/xPfuEhMSlIE5keb/Zz3/LUlRg8yDqz5w+QWVJ4utnKnK
iqwZN0mwpwU7YSyJhlT4YV1F3n4YjLswM5wJs2oqm0jssQu/BT0tyEXNDYBLEF4A
sClaWuSJ2kjq7KhrrYXzagqhnSei9ODYFShJu8UWVec3Ihb5ZXlzO6vdNQ1J9Xsf
4m+2ywKBgQD6qFxx/Rv9CNN96l/4rb14HKirC2o/orApiHmHDsURs5rUKDx0f9iP
cXN7S1uePXuJRK/5hsubaOCx3Owd2u9gD6Oq0CsMkE4CUSiJcYrMANtx54cGH7Rk
EjFZxK8xAv1ldELEyxrFqkbE4BKd8QOt414qjvTGyAK+OLD3M2QdCQKBgQDtx8pN
CAxR7yhHbIWT1AH66+XWN8bXq7l3RO/ukeaci98JfkbkxURZhtxV/HHuvUhnPLdX
3TwygPBYZFNo4pzVEhzWoTtnEtrFueKxyc3+LjZpuo+mBlQ6ORtfgkr9gBVphXZG
YEzkCD3lVdl8L4cw9BVpKrJCs1c5taGjDgdInQKBgHm/fVvv96bJxc9x1tffXAcj
3OVdUN0UgXNCSaf/3A/phbeBQe9xS+3mpc4r6qvx+iy69mNBeNZ0xOitIjpjBo2+
dBEjSBwLk5q5tJqHmy/jKMJL4n9ROlx93XS+njxgibTvU6Fp9w+NOFD/HvxB3Tcz
<span class="synConstant">6</span>+jJF85D5BNAG3DBMKBjAoGBAOAxZvgsKN+JuENXsST7F89Tck2iTcQIT8g5rwWC
P9Vt74yboe2kDT531w8+egz7nAmRBKNM751U/95P9t88EDacDI/Z2OwnuFQHCPDF
llYOUI+SpLJ6/vURRbHSnnn8a/XG+nzedGH5JGqEJNQsz+xT2axM0/W/CRknmGaJ
kda/AoGANWrLCz708y7VYgAtW2Uf1DPOIYMdvo6fxIB5i9ZfISgcJ/bbCUkFrhoH
+vq/5CIWxCPp0f85R4qxxQ5ihxJ0YDQT9Jpx4TMss4PSavPaBH3RXow5Ohe+bYoQ
NE5OgEXk2wVfZczCZpigBKbKZHNYcelXtTt/nP3rsCuGcM4h53s=
-----END RSA PRIVATE KEY-----
</pre>


<p>ダブルクォーテーションを消すのには jq の <code>-r</code> オプションを使ってます。<br/>
teeコマンドは標準出力にもちゃんとできたこと見せたいから。</p>

<h2>References</h2>

<ol>
<li><a href="http://docs.aws.amazon.com/cli/latest/reference/ec2/create-key-pair.html">create-key-pair — AWS CLI 1.3.21 documentation</a></li>
<li><a href="http://open-groove.net/other-tools/jq-practice-with-aws/">jqに痺れた … AWS CLIで演習など - OpenGroove</a></li>
<li><a href="http://qiita.com/wnoguchi/items/2fc3ec11043d139dc6bb">teeコマンドの使い方 - Qiita</a></li>
<li><a href="https://github.com/mitchellh/vagrant/blob/master/keys/vagrant">vagrant/keys/vagrant at master · mitchellh/vagrant</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでキーペア（鍵ペア）を一括削除する
BASENAME: 2014/07/06/214608
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/06/2014 21:46:08
CATEGORY: AWS
CATEGORY: Bash
CATEGORY: シェルスクリプト
CATEGORY: コマンド
CATEGORY: awscli
-----
BODY:
<h2>概要</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>の練習と<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%A7%A5%EB%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8">シェルスクリプト</a>の練習も兼ねてる。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>を叩く練習をしていてキーペアをいっぱい作っちゃいました。<br/>
こんな感じ。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 describe-key-pairs<span class="synStatement">|</span> jq -r <span class="synConstant">'.KeyPairs [] .KeyName'</span>
default
default2
default3
default4
default5
default6
default7
default8
</pre>


<p>ちなみにjqの <code>-r</code> オプションはダブルクォーテーションを消してくれるオプション。</p>

<p>これらのキーペアを消したい。</p>

<h2>find+xargsを使う（失敗）</h2>

<p>find+xargsの組合せに慣れてるから以下の様な感じにしたくなる。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>aws ec2 describe-key-pairs <span class="synStatement">|</span> jq -r <span class="synConstant">'.KeyPairs [] .KeyName'</span> <span class="synStatement">|</span> xargs aws ec2 delete-key-pair --key-name
Unknown options: default3, default4, default5, default6, default7, default8, default2
</pre>


<p>でもエラー。xargsのmanページをよく見てみる。</p>

<p><a href="http://linuxjm.sourceforge.jp/html/GNU_findutils/man1/xargs.1.html">Man page of XARGS</a></p>

<blockquote><p>xargs は標準入力から読み込んだ一連の項目をその後ろに 追加していく (訳注: 作成された<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3">コマンドライン</a>が、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3">コマンドライン</a>長の上限を 越える場合や、オプションによる特別な指定がある場合は、入力を適宜分割して、
command を<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4%B2%F3">複数回</a>実行することになる)。標準入力における空行は無視する。</p></blockquote>

<p>そういえば</p>

<pre class="code lang-sh" data-lang="sh" data-unlink><span class="synStatement">find</span> | xargs <span class="synStatement">rm</span>
</pre>


<p>や</p>

<pre class="code lang-sh" data-lang="sh" data-unlink><span class="synStatement">find</span> | xargs <span class="synStatement">grep</span> hoge
</pre>


<p>は引数に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のエントリをもたせられた気がする・・・。</p>

<p><strong>1個ずつ削除したいのでこれは使えない。</strong></p>

<h2>while+readを組み合わせる（成功）</h2>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>aws ec2 describe-key-pairs <span class="synStatement">|</span> jq -r <span class="synConstant">'.KeyPairs [] .KeyName'</span> <span class="synStatement">|</span> <span class="synStatement">while</span> <span class="synStatement">read</span> key; <span class="synStatement">do</span>
  aws ec2 delete-key-pair --key-name <span class="synPreProc">$key</span>
<span class="synStatement">done</span>
</pre>


<p>これならどうだ。</p>

<pre class="code lang-zsh" data-lang="zsh" data-unlink>% aws ec2 describe-key-pairs <span class="synStatement">|</span> jq -r <span class="synConstant">'.KeyPairs [] .KeyName'</span> <span class="synStatement">|</span> <span class="synStatement">while</span> <span class="synStatement">read</span> key; <span class="synStatement">do</span>
pipe pipe <span class="synStatement">while&gt;</span> aws ec2 delete-key-pair --key-name <span class="synPreProc">$key</span>
pipe pipe <span class="synStatement">while&gt;</span> <span class="synStatement">done</span>
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
{
    <span class="synConstant">&quot;return&quot;</span>: <span class="synConstant">&quot;true&quot;</span>
}
</pre>


<p>あっ、うまくいった。<br/>
やったきもちいいいいい。</p>

<h2>References</h2>

<ol>
<li><a href="http://stedolan.github.io/jq/">jq</a></li>
<li><a href="http://open-groove.net/other-tools/jq-practice-with-aws/">jqに痺れた … AWS CLIで演習など - OpenGroove</a></li>
<li><a href="http://mknkisk.github.io/blog/2013/06/28/jq_command/">jqコマンドを使ってみた - mknkisk report</a></li>
<li><a href="http://qiita.com/kawaz/items/6fd4cd86ca98af644a05">Bash - パイプ出力を<strong>現在のシェル</strong>上のwhileに喰わせる上手いやり方 - Qiita</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 「ドワンゴC++勉強会 #1」に行ってきました
BASENAME: 2014/07/05/010322
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 07/05/2014 01:03:22
CATEGORY: 勉強会
CATEGORY: C++
CATEGORY: ドワンゴ
CATEGORY: ニコニコ動画
IMAGE: http://ecx.images-amazon.com/images/I/61wiuMiblCL.jpg
-----
BODY:
<p>行ってまいりました！<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>勉強会#1。</p>

<p><a href="http://connpass.com/event/6560/">ドワンゴC++勉強会 #1 - connpass</a></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a>: <a href="https://twitter.com/search?q=%23dwangocpp">#dwangocpp</a></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CB%A5%B3%A5%CB%A5%B3%C0%B8%CA%FC%C1%F7">ニコニコ生放送</a>でも放送されていましたので、今なら今日中まで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BF%A5%A4%A5%E0%A5%B7%A5%D5%A5%C8">タイムシフト</a>再生で見ることができます。<br/>
私もこの記事を書きながら<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BF%A5%A4%A5%E0%A5%B7%A5%D5%A5%C8">タイムシフト</a>再生してライブとの違いを実感しています。</p>

<p><a href="http://live.nicovideo.jp/gate/lv183986593">ドワンゴC++勉強会 #1 - 2014/06/28 14:00開始 - ニコニコ生放送</a></p>

<h2>現地</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%CE%C9%F1%B4%EC%BA%C2">歌舞伎座</a>タワーに行くには地下鉄を乗り継いで行かなければなりません。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B4%DD%A5%CE%C6%E2%C0%FE">丸ノ内線</a>と日比谷線を乗り継いだ記憶があります。<br/>
地下鉄は不慣れなのでやっぱり早めに出発しました。</p>

<p>1時間も前に着いて、とりあえず場所だけ確認しようと思って地下直結の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%CE%C9%F1%B4%EC%BA%C2">歌舞伎座</a>タワー14Fを目指しました。<br/>
お姉さんにどちらまで行かれるか聞かれて14Fまでと伝えると行っていいよと案内されます。<br/>
とても立派なエレベーターでした。</p>

<p>まずは7Fのスカイロビーに行かなければならないようです。<br/>
直行はできないんですね。<br/>
さて、14Fに行きましょうとエレベーターに乗ったら「押された階には止まりません」とエレベーターに怒られてしまいました。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a>のタイムラインを確認しているとやっぱり上に行けない人もいたようで、どうもエレベーターの認証を通す必要があったようです。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a>社員の方がピストン輸送してくださいました。</p>

<h2>開場</h2>

<p>2列目に着席。</p>

<ul>
<li>肝心のでちまるさんがこない。</li>
<li>エクストリーム資料作成。</li>
<li>マサカリを常備しておこう。</li>
</ul>


<p>などなどの会話が聞こえてきました。
ニコニコらしい。</p>

<p>あとで調べてわかりましたがマサカリとは斧のことですね。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%BF%A5%BF%A5%D3">マタタビ</a>ぐらいにゆるいものを想像していました。</p>

<p>なんだかんだで最近<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a>に移籍された江添さんが普通にいらっしゃいました。</p>

<p><a href="http://cpplover.blogspot.jp/2014/02/blog-post_13.html">本の虫: ドワンゴに入社した</a></p>

<p>ここまで有名な人にお目にかかれるとは思っていなかったのでびっくりです。</p>

<p>ここで接続テスト。</p>

<p><strong>まさかの<a class="keyword" href="http://d.hatena.ne.jp/keyword/WindowsXP">WindowsXP</a>が登場。</strong></p>

<p>あれっ、サポート切れたんじゃなかったでしたっけ・・・そうかEmbeddedか！</p>

<p>本当はでちまるさんが発表される番だったようですが柔軟に順番変更。</p>

<p>ここで <a href="https://twitter.com/bolero_MURAKAMI">@bolero_MURAKAMI</a> さんのご紹介。</p>

<ul>
<li>本職が陶芸家。</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%EB%A5%B9%A5%BF%A5%C3%A5%AF">フルスタック</a>陶芸家。</li>
<li>薪割りから自分でやる。</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a>にろくろはあるのか
→ございません。</li>
</ul>


<h2>wnoguchiの<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>レベルについて</h2>

<ul>
<li>VC6の<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>コードをガチャガチャ削りまくることはできる。</li>
<li>インクルードガードぐらいまでは知ってる。</li>
</ul>


<p>幼稚園児並ですね。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%B8%C0%B8%EC">C言語</a>とか<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>はめちゃくちゃ奥が深いですね・・・。<br/>
たぶん私が書いていた<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>は規格として<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11にもかすってないんじゃないかと思います。</p>

<p>それでは本編です。</p>

<h2>constexpr関数は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時処理。これはいい。実行時が霞んで見える。CPUの嬌声が聞こえてきそうだ</h2>

<p>スライドはこちらにあがっています。</p>

<p><a href="http://www.slideshare.net/GenyaMurakami/onstexprcpu">ｃonstexpr関数はコンパイル時処理。これはいい。実行時が霞んで見える。cpuの嬌声が聞こえてきそうだ</a></p>

<ul>
<li>趣味はconstexpr</li>
<li>constexprを知らないで許されるのは小学生まで</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14はconstexprの時代</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時処理だけじゃないconstexpr</li>
</ul>


<p><strong>今この記事を書いている最中に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CB%A5%B3%A5%CB%A5%B3%C0%B8%CA%FC%C1%F7">ニコニコ生放送</a>の機器トラブルで映像が途絶したようです。</strong></p>

<h3>目標</h3>

<ul>
<li>モダンな<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>ライブラリ設計とは何なのか</li>
<li>constexpr（コンストエクスプレッション）</li>
<li>定数式を記述するためのもの</li>
<li>constexpr指定の関数＝<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時に呼び出し可能</li>
<li>このような<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時に評価可能な式を定数式という
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%C6%A5%E9%A5%EB">リテラル</a>型がconstexprで扱える</li>
<li>定数を返す関数を<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時評価にするため</li>
</ul>


<p><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C6%FC%B7%D0%A5%BD%A5%D5%A5%C8%A5%A6%A5%A7%A5%A2">日経ソフトウェア</a>2014年5月号の記事によく書かれているのでよく読んでね</strong></p>

<p>とのことでしたのでご案内しておきます。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/kindle">kindle</a>ならすぐに手に入れられますね。</p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00JF0F40W/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/61wiuMiblCL._SL160_.jpg" class="hatena-asin-detail-image" alt="日経ソフトウエア 2014年 05月号 [雑誌]" title="日経ソフトウエア 2014年 05月号 [雑誌]"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00JF0F40W/blogpg1xcom01-22/">日経ソフトウエア 2014年 05月号 [雑誌]</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C6%FC%B7%D0%A5%BD%A5%D5%A5%C8%A5%A6%A5%A8%A5%A2">日経ソフトウエア</a>編集部</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%C6%FC%B7%D0BP">日経BP</a>社</li><li><span class="hatena-asin-detail-label">発売日:</span> 2014/03/27</li><li><span class="hatena-asin-detail-label">メディア:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Kindle">Kindle</a>版</li><li><a href="http://d.hatena.ne.jp/asin/B00JF0F40W/blogpg1xcom01-22" target="_blank">この商品を含むブログを見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11時点のつらい点</h3>

<h4>最初は関数の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BA%C6%B5%A2">再帰</a>さえ許可されない予定だった</h4>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BA%C6%B5%A2">再帰</a>がダメ派</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%E9">コンパイラ</a>の実装が面倒</li>
<li>濫用される恐れがある</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BA%C6%B5%A2">再帰</a>が許可された結果、濫用され<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%A4%A5%C8%A5%EC%A1%BC%A5%B7%A5%F3%A5%B0">レイトレーシング</a>ということをやる方が出てきたようです。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14での制限緩和</h3>

<p>いろいろできるようになった</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11だといろいろ工夫が必要になった</li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14だとかなり実装がすっきりする</p></li>
<li><p>merge<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%EB%A5%B4%A5%EA%A5%BA%A5%E0">アルゴリズム</a>は
<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11ではconstexprでは同じ<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B0%A5%CD%A5%C1%A5%E3">シグネチャ</a>では実現不可能</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/gcc">gcc</a>は<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11 constexprにはよく対応している</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14はまだ</li>
<li>メモ化のおかげで高速だがメモリバカ食い</li>
<li>32x32の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%A4%A5%C8%A5%EC%A1%BC%A5%B7%A5%F3%A5%B0">レイトレーシング</a>で8GB</li>
</ul>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%E9">コンパイラ</a>比較</h4>

<h5>Clang</h5>

<ul>
<li>Clangは<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11,<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14 constexpr対応が進んでいる</li>
<li>constexpr関係の大きなバグが残っている</li>
</ul>


<h5><a class="keyword" href="http://d.hatena.ne.jp/keyword/ICC">ICC</a>(<a class="keyword" href="http://d.hatena.ne.jp/keyword/Intel">Intel</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a> Compiler)</h5>

<p>ま、バグがある</p>

<h5><a class="keyword" href="http://d.hatena.ne.jp/keyword/VC%2B%2B">VC++</a></h5>

<ul>
<li>November 2013 CTP <a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a> constexprを使える</li>
<li>複雑な処理はまったく書けない</li>
</ul>


<p>江添さんは仰天。開場は大笑いに包まれました。</p>

<p><strong>「これ・・・何？？」</strong></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>+らしいライブラリ設計とは</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>のライブラリといえばBoost。</p>

<h4>Boostとは</h4>

<ul>
<li>とにかくテンプレート</li>
<li>静的ダック・タイピング</li>
<li>機能の非メッンバ関数化</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C1%C2%B7%EB%B9%E7">疎結合</a>な機能群</li>
</ul>


<p><strong>機能分割がしっかりしている</strong></p>

<h3>非<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%F3%A5%D0%B4%D8%BF%F4">メンバ関数</a>のススメ</h3>

<p>機能は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%F3%A5%D0%B4%D8%BF%F4">メンバ関数</a>よりも非<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%F3%A5%D0%B4%D8%BF%F4">メンバ関数</a>として追い出したほうがよい。</p>

<p><code>Rng.size()</code> よりも <code>size(Rng)</code></p>

<p>constexpr課すると抽象クラスの継承関係を排除しなければならなくなる。</p>

<h4>Sproutライブラリ</h4>

<ul>
<li><a href="https://github.com/bolero-MURAKAMI/Sprout">bolero-MURAKAMI/Sprout</a></li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DC%A5%EC%A5%ED">ボレロ</a>村上さん自信が書かれたconstexprベースのライブラリらしいです。</p>

<ul>
<li>とにかく大規模なライブラリ</li>
<li>実行時<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%A4%A5%C8%A5%EC%A1%BC%A5%B7%A5%F3%A5%B0">レイトレーシング</a></li>
<li>データ型はすべてTupleとして定義されている</li>
<li>大概のデータはタプルの組合せで表現できる</li>
<li>ベクトル、色、光線、材質、衝突情報、・・・</li>
</ul>


<p>これまでの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EC%A5%A4%A5%C8%A5%EC%A1%BC%A5%B7%A5%F3%A5%B0">レイトレーシング</a>の最長記録は</p>

<ul>
<li>8196x8196</li>
<li>約160時間（7日）</li>
<li>4pxずつ分割してビルド</li>
</ul>


<p>だそうです・・・。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14に向けてconstexpr対応を進めるべく多くの提案が消化されている</p>

<p>最後に、実行時<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%B8%A4%E3%A4%CA%A4%A4%A4%AB%A4%E9%C3%D1%A4%BA%A4%AB%A4%B7%A4%AF%A4%CA%A4%A4">じゃないから恥ずかしくない</a>。<br/>
のスライドが表示されて幕引きとなりました。<br/>
ごめんなさい、ついていけませんでした・・・。</p>

<p>でちまるさんのエクストリーム資料作成が完了したようです。</p>

<h2>休憩</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>のアダプタに延長のケーブルを持っていくのを忘れたので不要なサービスを立ち上げてると
モリモリバッテリーを食いつぶしていくのでメモるのに最低限必要なアプリだけにしました。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a>のタイムラインを確認するとsekicocoというの単語がちらほら見られました。<br/>
自分がどこの席にいるかを<a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a>アカウントと紐付けて表示するサービスのようです。<br/>
こんなサービスもあるんですねー。</p>

<p><a href="http://sekico.co/zaseki/333">#dwangocpp #1 第1回ドワンゴC++勉強会の座席表 - セキココ</a></p>

<h2>The Define and Expansion of CPP Macro</h2>

<p><a href="https://twitter.com/decimalbloat">@decimalbloat</a></p>

<ul>
<li>C<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%EA%A5%D7%A5%ED%A5%BB%A5%C3%A5%B5">プリプロセッサ</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%BF%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0">メタプログラミング</a>とは</li>
<li>C<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%EA%A5%D7%A5%ED%A5%BB%A5%C3%A5%B5">プリプロセッサ</a>で<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>のコードを出力するプログラムを書く行為</li>
</ul>


<p><strong>「何事も暴力で解決するのが一番だ」</strong></p>

<p>笑いが起こる。</p>

<h3>名前が衝突する</h3>

<ul>
<li>BOOST_PP_ とかそういうprefixつければ普通衝突しない。</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>エラーがひどい</h3>

<ul>
<li>ただし関数マクロでやった場合の話</li>
<li>include主体でやればそうでもない</li>
</ul>


<h3>制限が多い</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BA%C6%B5%A2">再帰</a>展開できないとか</li>
<li>アプリケーション開発でコード生成が必要になったならC<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%EA%A5%D7%A5%ED%A5%BB%A5%C3%A5%B5">プリプロセッサ</a>ではなく<a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>とか<a class="keyword" href="http://d.hatena.ne.jp/keyword/Perl">Perl</a>で書けば良い</li>
</ul>


<h3>ここまでのまとめ</h3>

<p><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>使えよ</strong></p>

<p>とのことです。</p>

<h3>関数マクロ乱用スタイルにおける基本的な<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%BB%CB%A1">技法</a></h3>

<ul>
<li>C<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%EA%A5%D7%A5%ED%A5%BB%A5%C3%A5%B5">プリプロセッサ</a>には数値という概念はない</li>
<li>必要な数だけ並べる</li>
<li>繰り返しについて</li>
<li>これも同様必要なだけ並べる</li>
</ul>


<h3>Sequence</h3>

<pre class="code" data-lang="" data-unlink>(a)(b)(c)</pre>


<ul>
<li>今のは<a class="keyword" href="http://d.hatena.ne.jp/keyword/gcc">gcc</a>, Clangの実装の話</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/VC%2B%2B">VC++</a>は異なる</li>
</ul>


<p>「実際のコード例をオンラインで見てみましょう」</p>

<p>「あれ、どうなるの、これ？」</p>

<p>笑いが起こる。</p>

<p>「どこ見たらいいのこれ？」</p>

<p>再び笑いが起こる。</p>

<h3>Tuple</h3>

<p><code>(a, b, c)</code> のような形式のもの
長さを変更できないが要素へのアクセスは <code>O(1)</code> なデータ構造</p>

<p>「これもオンラインで見てみましょう。」</p>

<p>64個の引数を扱える</p>

<p><strong>ものすごいコードが表示される。</strong></p>

<h3>まとめ</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>を使え</li>
<li>置換とトークン連結だけでも足し算は作れる</li>
<li>たとえ貧弱な機能でも人間は乱用する</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>を使えで爆笑されてました。</p>

<p>でちまるさんの<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>はこちら。</p>

<p><a href="https://github.com/dechimal/desalt">dechimal/desalt</a></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C1%B5%BF%B1%FE%C5%FA">質疑応答</a></h3>

<ol type="a">
<li>展開を見やすくするためには？</li>
<li>改行を入れるとか？</li>
</ol>


<p>笑いが起こる。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>の歴史</h2>

<p><a href="https://twitter.com/EzoeRyou">@EzoeRyou</a> さんの発表です。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a>の社員</li>
<li>仕事: <a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>の啓蒙活動</li>
</ul>


<p>スライドはこちら。</p>

<p><a href="http://ezoeryou.github.io/cpp-history/#/">C++の歴史</a></p>

<h3>1979年</h3>

<ul>
<li>Simulaを作った、その利点</li>
<li>リンクが遅い</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AC%A5%D9%A1%BC%A5%B8%A5%B3%A5%EC%A5%AF%A5%B7%A5%E7%A5%F3">ガベージコレクション</a>が遅い</li>
<li><p>実行時間の80%が<a class="keyword" href="http://d.hatena.ne.jp/keyword/GC">GC</a>に費やされる</p></li>
<li><p>BCPLで書いた</p></li>
<li><p>BCPLに比べればCがとても高級な言語に見えた</p></li>
<li><p>Bell Labの特徴</p></li>
<li>十分なコンピューター資源が与えられる</li>
<li>K&amp;Rが同僚だった</li>
<li>面白いことをやるのが仕事</li>
</ul>


<p>Cpre<br/>
↓<br/>
C with Classes</p>

<h3>1982年</h3>

<ul>
<li>C with Classesは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%A3%BF%F4">複数</a>のプロジェクトで使われるようになった</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>という名前</li>
<li>Ken TompthonのB言語</li>
<li>CFront</li>
</ul>


<p>「ぼくのかんがえたさいきょうのげんごきかく」では普及しないので、
リファレンス実装が必要だった。</p>

<p>当時は移植性が重要視された
↓
Cコードを出力する</p>

<ul>
<li>普及のためには無料であることが必要だった</li>
<li>ところが商用の需要が出てきた</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C6%A5%F3%A5%D7%A5%EC%A1%BC%A5%C8%A5%E1%A5%BF%A5%D7%A5%ED%A5%B0%A5%E9%A5%DF%A5%F3%A5%B0">テンプレートメタプログラミング</a>が花開く</li>
</ul>


<p>当時は</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ANSI">ANSI</a>: 下院</li>
<li>ISO: 上院</li>
</ul>


<p>のような位置づけだったようです。
ISO規格制定は全会一致。</p>

<p>現在は弱肉強食の世界になっています。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>財団が設立された。<br/>
ドラフトは現在<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>に上がっているそうです。<br/>
モダンですね。</p>

<p><a href="https://github.com/cplusplus/draft">cplusplus/draft</a></p>

<h3>1998年</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>98</li>
<li>最新技術に追い付くため標準委員会は縮小</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>03</h3>

<ul>
<li>マイナーバージョンアップ</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B0x">C++0x</a></h3>

<ul>
<li>ふたたび活発化</li>
</ul>


<p>200x年にできると思うじゃないですか。
遅れに遅れて<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11が規格制定されました。</p>

<p><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B0x">C++0x</a>のxは16進数というジョークまで出たようです。</strong></p>

<ul>
<li>コンセプト機能でもめた</li>
<li>これを取り除くだけで一年半以上送れた</li>
<li><p>取り除く価値があった</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>1y/<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>14?</p></li>
<li>Clangはすでに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C2%C1%F5%BA%D1">実装済</a>み</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/GCC">GCC</a>も積極的に</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>17</h3>

<p>次のメジャーアップデート</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a> Working Group Japan</h3>

<h3>EC++(Embedded <a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>)という<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B9%F5%CE%F2%BB%CB">黒歴史</a></h3>

<p>あまり語りたくない話題だったようです。</p>

<ul>
<li>複雑になりすぎた<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>のサブセットにしようと思う</li>
<li>作者が諭す</li>
</ul>


<p><strong>EC++失敗は失敗したそうです。</strong></p>

<ul>
<li>1社で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%E9">コンパイラ</a>を開発できることがアドバンテージだった</li>
<li><p>某M社は開発している</p></li>
<li><p>2007年人材不足</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>規格は230xページある</li>
</ul>


<p>ここで新たな動き見られたようです。</p>

<p><strong>2014年に江沢亮が<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C9%A5%EF%A5%F3%A5%B4">ドワンゴ</a>に移籍！！</strong></p>

<ul>
<li>2009年に1人だけ行った人がいる</li>
<li>議長のお友達として行った</li>
<li>ITSCJは金がほしい</li>
<li>金が無い</li>
<li>ISOの価値が下がっている</li>
<li>ソフトウェアの規格と相性が悪い</li>
<li>ISOは政治的な組織</li>
</ul>


<p><strong>これは政治だ。</strong></p>

<p>で締めでした。</p>

<p>これ以降はLTです。<br/>
私が理解できる内容が少なかったため、ここでは簡単なご紹介にとどめます。</p>

<h2>templateを依存型っぽく使ってみる</h2>

<p><a href="https://twitter.com/minamiyama1994">@minamiyama1994</a> さんの発表です。</p>

<p>スライドはこちら。</p>

<p><a href="https://docs.google.com/presentation/d/1gyL7LBOzkVOCjV9p9PsHAPoAptKH9nfO0Tce8mS_a6I/edit?pli=1#slide=id.p">#dwangocpp #1 templateを依存型っぽく使ってみる - Google スライド</a></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/slideshare">slideshare</a>等にあげられる方が多い中、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%20Docs">Google Docs</a>のプレゼンテーションを使ってのプレゼンをされるという新しいスタイルの発表でした。<br/>
興味深いのでプレゼンテーションにアクセスします。<br/>
この見ている人がニョキニョキっと出てくる仕様、面白いです。<br/>
今までに見たことない数の閲覧数を誇っていました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140705/20140705005843.png" alt="f:id:wnoguchi0727:20140705005843p:plain" title="f:id:wnoguchi0727:20140705005843p:plain" class="hatena-fotolife" itemprop="image"></span></p>




<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140705/20140705010059.png" alt="f:id:wnoguchi0727:20140705010059p:plain" title="f:id:wnoguchi0727:20140705010059p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>constexprで使えるイディオム</h2>

<p><a href="https://twitter.com/fimbul11">@fimbul11</a> さんの発表です。</p>

<p>スライドはこちら。</p>

<p><a href="http://www.slideshare.net/fimbul/constexpr-idioms">constexpr idioms</a></p>

<h2>Cocos2dxの闇</h2>

<p><a href="https://twitter.com/ponkotuy">@ponkotuy</a> さんの発表です。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C7%AD%BC%AA">猫耳</a>で登場されました。</li>
</ul>


<p>スライドはこちら。</p>

<p><a href="https://dl.dropboxusercontent.com/u/629338/pdf/Cocos2dx.pdf">Cocos2dx(Ver2)が闇な話</a></p>

<h3>Cocos2dxについて</h3>

<p><a href="http://www.cocos2d-x.org/">Cocos2d-x: World’s #1 Open Source Game Development Platform</a></p>

<ul>
<li>リッチな<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3">スマートフォン</a>アプリ（ネイティブ）</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%C1%A5%D7%A5%E9%A5%C3%A5%C8%A5%D5%A5%A9%A1%BC%A5%E0">マルチプラットフォーム</a>アプリが作成可能</li>
<li>Cocos2dx開発者が<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>をわかっていない？</li>
<li>つらいらしい</li>
<li>CCFloat</li>
<li>Cocos2dxは初期の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A5%DB">スマホ</a>ゲーム開発で強力だった</li>
</ul>


<p>私は触ったことがないのでわからないのですが、けっこうCocos2dxでの開発はつらいらしいです。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>初心者書が<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11でparserを書いてみた話</h2>

<p><a href="https://twitter.com/karupanerura">@karupanerura</a> さんの発表です。</p>

<p>勉強会にいけば体系的に知ることができるんじゃないか<br/>
↓<br/>
でも補欠いっぱいだし<br/>
↓<br/>
<strong>そうだLTをしよう！！</strong></p>

<h2>valgrindは実行時メモリチェッカー。これはいい。<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%F3%A5%D1%A5%A4%A5%EB">コンパイル</a>時チェックは結局頼りにならない。メモリの悲鳴が聞こえてきそうだ</h2>

<p><a href="https://twitter.com/tikal">@tikal</a> さんの発表です。<br/>
この方が一番<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D1%A5%AF">インパク</a>トが強かったですねｗ</p>

<p>コスプレは「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%A4%A4%CA%A4%EA%A1%A2%A4%B3%A4%F3%A4%B3%A4%F3%A1%A2%CE%F8%A4%A4%A4%ED%A4%CF%A1%A3">いなり、こんこん、恋いろは。</a>」の「コン」ちゃんの格好だそうです。</p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/404715668X/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/510vbZtwglL._SL160_.jpg" class="hatena-asin-detail-image" alt="いなり、こんこん、恋いろは。　（１） (角川コミックス・エース 326-1)" title="いなり、こんこん、恋いろは。　（１） (角川コミックス・エース 326-1)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/404715668X/blogpg1xcom01-22/">いなり、こんこん、恋いろは。　（１） (角川コミックス・エース 326-1)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> よしだもろへ</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%D1%C0%EE%BD%F1%C5%B9%28%B3%D1%C0%EE%A5%B0%A5%EB%A1%BC%A5%D7%A5%D1%A5%D6%A5%EA%A5%C3%A5%B7%A5%F3%A5%B0%29">角川書店(角川グループパブリッシング)</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2011/04/04</li><li><span class="hatena-asin-detail-label">メディア:</span> コミック</li><li><span class="hatena-asin-detail-label">購入</span>: 5人 <span class="hatena-asin-detail-label">クリック</span>: 120回</li><li><a href="http://d.hatena.ne.jp/asin/404715668X/blogpg1xcom01-22" target="_blank">この商品を含むブログ (39件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>スライドはこちら。</p>

<p><a href="http://www.slideshare.net/ledyba/cpp-36404945">valgrindは実行時メモリチェッカー。これはいい。コンパイル時チェックは結局頼りにならない。メモリの悲鳴が聞こえてきそうだ</a></p>

<p>ニコ動再現・保存ソフト「 <a href="http://saccubus.sourceforge.jp/">さきゅばす</a> 」の作者の方とのことです。</p>

<ul>
<li>実行時処理</li>
<li>SIGSEGVで落ちる分にはまだわかる</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/gdb">gdb</a> -S odjdump -D</li>
<li><strong>グローバル領域はどうにもならない Cocos2dx</strong></li>
</ul>


<p>ひたすらCocos2d-xのディスりが続きます。</p>

<p>そこで新星のごとくValgrindが登場します。</p>

<p>私もGitでクローンするパスが異常に長いときにmsysgitが必ずクラッシュするバグを修正しようとした時に薦められたような気が・・・。
ある最適化オプションを外すと直るんですが、どうも根の深い問題でパッチに問題があって受け入れられることはありませんでした。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E1%A5%E2%A5%EA%A5%EA%A1%BC%A5%AF">メモリリーク</a>を検出できる</li>
<li>ただし遅い</li>
<li>クソblob</li>
</ul>


<p>そして<a class="keyword" href="http://d.hatena.ne.jp/keyword/Linus">Linus</a>のfuck画像で締め。</p>

<p><a href="http://gihyo.jp/admin/clip/01/linux_dt/201206/18">2012年6月18日　Linusが吠えた! ─中指立てて「NVIDIAは世界最悪の企業」：Linux Daily Topics｜gihyo.jp … 技術評論社</a></p>

<h2>最後に</h2>

<h3>江添さん最後のコメント</h3>

<p>「発表してなんぼですよ！」</p>

<h3>その他</h3>

<p><a href="https://twitter.com/karupanerura">@karupanerura</a> さんのそうだ京都に行こう的なノリでLTをする姿勢は見習いたいと思いました。<br/>
私自身プレゼンテーション力が圧倒的に不足しているので、なんかのタイミングでLT、してみたいものです。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: VirtualBoxでポートフォワーディングするときの注意点
BASENAME: 2014/06/20/234518
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 06/20/2014 23:45:18
CATEGORY: VirtualBox
CATEGORY: 開発
CATEGORY: ネットワーク
CATEGORY: Mac
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140620/20140620231607.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>とかでもポートフォワーディング多用してるっぽいし、いつもブリッジして甘えてた自分にさよならバイバイして、<a class="keyword" href="http://d.hatena.ne.jp/keyword/VirtualBox">VirtualBox</a>にNATかませてビッグウェーブに乗ることにしました。</p>

<h2>目標</h2>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/localhost">localhost</a>でポート指定してゲストOSのWebがみれて、<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>できるようにする。</p>

<h2>NATの設定をする</h2>

<p>NATにしなくちゃ話が始まらない。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140620/20140620231607.png" alt="f:id:wnoguchi0727:20140620231607p:plain" title="f:id:wnoguchi0727:20140620231607p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>ではポートフォワーディングの設定をします。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a></li>
<li>HTTP</li>
</ul>


<h2>悪い例</h2>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140620/20140620234312.png" alt="f:id:wnoguchi0727:20140620234312p:plain" title="f:id:wnoguchi0727:20140620234312p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>でやってると<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>標準の<a class="keyword" href="http://d.hatena.ne.jp/keyword/Apache">Apache</a>が返事をして <code>It Works!</code> とか意味分かんない感じで言われると思います。</li>
</ul>


<pre class="code" data-unlink>sudo apachectl stop</pre>


<p>でプロセスを殺してもあまり変わらず。代わりにシークレットウィンドウ立ち上げるのですが、これでもアクセスできない。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>も駄目です。</p>

<pre class="code" data-unlink>$ ssh -p 222 vagrant@localhost
ssh: connect to host localhost port 222: Connection refused</pre>


<h2>良い例</h2>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140620/20140620234337.png" alt="f:id:wnoguchi0727:20140620234337p:plain" title="f:id:wnoguchi0727:20140620234337p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>待てよ、と思い直してみました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Tomcat">Tomcat</a>とかのトラブルでウェルノンポートで立ち上げようとしたらroot権限が必要だったこと思い出して、これかなあと思いウェルノンポートから外したところでリッスンするようにしてみました。</p>

<p>バッチリでした。</p>

<p>これでブラウザ起動して <code>http://localhost:8888/</code> でゲストOSのコンテンツが表示できればOKです（たぶんキャッシュ効いちゃってるからシークレットウィンドウでやったほうが確実）。<br/>
ついでに以下の様な感じで<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>も通ります。</p>

<pre class="code" data-unlink>$ ssh -p 2222 vagrant@localhost</pre>


<p>いい感じに<a class="keyword" href="http://d.hatena.ne.jp/keyword/Vagrant">Vagrant</a>っぽくなりました。</p>

<h2>まとめ</h2>

<ul>
<li>フォワーディング便利。</li>
<li><strong>ウェルノンポートじゃフォワーディングできない。</strong></li>
<li>シークレットモード便利。</li>
</ul>


<h2>参考文献</h2>

<ul>
<li><a href="http://www.karakaram.com/virtualbox-port-fowarding">VirtualBox上のゲストOSにホストOSからNATでアクセスする</a></li>
<li><a href="http://ja.wikipedia.org/wiki/TCP%E3%82%84UDP%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E3%83%9D%E3%83%BC%E3%83%88%E7%95%AA%E5%8F%B7%E3%81%AE%E4%B8%80%E8%A6%A7#.E3.82.A6.E3.82.A7.E3.83.AB.E3.83.8E.E3.82.A6.E3.83.B3.E3.83.9D.E3.83.BC.E3.83.88.E7.95.AA.E5.8F.B7_.280.E2.80.931023.29">TCPやUDPにおけるポート番号の一覧 - Wikipedia</a></li>
<li><a href="http://ja.wikipedia.org/wiki/%E3%83%9D%E3%83%BC%E3%83%88%E7%95%AA%E5%8F%B7">ポート番号 - Wikipedia</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 「Security Casual Talks 2014#2 (すみだセキュリティ勉強会)」に行ってきました
BASENAME: 2014/06/18/233351
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 06/18/2014 23:33:51
CATEGORY: 勉強会
CATEGORY: セキュリティ
CATEGORY: ハッキング
CATEGORY: インフラ
CATEGORY: ネットワーク
CATEGORY: Web
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140618/20140618224655.png
-----
BODY:
<p>6/7に開催されたすみだセキュリティ勉強会に行ってきました！</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140607/20140607120537.jpg" alt="f:id:wnoguchi0727:20140607120537j:plain" title="f:id:wnoguchi0727:20140607120537j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>開催して3, 4日のうちには書くぞって思ってたのにこんなに時間が空いてしまいました。<br/>
いかんいかん・・・。</p>

<p><strong>私の妄想がふんだんに盛り込まれている可能性が高いので雰囲気だけ味わってください。</strong></p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a>: <a href="https://twitter.com/search?q=%23sumida_sec">#sumida_sec</a></li>
<li><a href="http://atnd.org/events/51137">Security Casual Talks 2014#2 (すみだセキュリティ勉強会) : ATND</a></li>
<li><a href="http://ozuma.sakura.ne.jp/sumida/">すみだセキュリティ勉強会</a></li>
</ul>


<h2>現地まで</h2>

<p>総武線で一本で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%B5%B8%CD%B1%D8">亀戸駅</a>までゆるりと・・・。<br/>
会場はすぐに見つかり、池袋よりは迷うことはありませんでした。<br/>
池袋は迷路ですわあ・・・。</p>

<h2>現地についてから</h2>

<p>9:30ころに到着。<br/>
ちょっと早めに着いてしまったので、会場の設営のお手伝いをさせていただきました。<br/>
椅子を前に移動する。ちょっともたついてしまった。（汗）</p>

<p>事前に買っておいた<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DC%A5%A4%A5%B9%A5%EC%A5%B3%A1%BC%A5%C0%A1%BC">ボイスレコーダー</a>で録音してもいいですかと確認しましたが、<br/>
一部の方はOKですが、他の方は確認が必要とのことでした。残念。<br/>
でも、セキュリティの勉強会ですし、仕方ないですよね。</p>

<h2>発表順スライド</h2>

<ol>
<li><a href="http://www.slideshare.net/ozuma5119/ozuma2-note">無線LANデンパゆんゆん観察</a></li>
<li><a href="http://www.slideshare.net/inaz2/cryptyou-understand-today">CRYPT+YOU, UNDERSTAND TODAY!</a></li>
<li><a href="http://www.slideshare.net/super_a1ice/msf-advanced">Metasploitでペネトレーションテスト</a></li>
</ol>


<h2>開場</h2>

<p>な、なんと</p>

<p><strong>会場内に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>の設備はありません（すみません）</strong></p>

<p>の文字が・・・。</p>

<p>とのことでしたので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C6%A5%B6%A5%EA%A5%F3%A5%B0">テザリング</a>で実況中継等してました。<br/>
ノートは適宜<a class="keyword" href="http://d.hatena.ne.jp/keyword/Evernote">Evernote</a>と<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%EA%BD%F1%A4%AD">手書き</a>ノートで。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%EA%BD%F1%A4%AD">手書き</a>ノートは結局タイトルしか書かなかったな・・・。</p>

<p>と、ここで</p>

<p>「Metasploitやったことありますかー？」→ちらほら挙手</p>

<p>ぼくはやったことも聞いたこともなかったので挙手しませんでした。</p>

<ul>
<li><a href="http://ja.wikipedia.org/wiki/Metasploit">Metasploit - Wikipedia</a></li>
</ul>


<h2>簡単な自己紹介タイム</h2>

<p>「wnoguchiと申します。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DE">プログラマ</a>ですが、インフラ全般に興味があります。」</p>

<p>終了。</p>

<p><strong>人がいっぱいです！！</strong></p>

<h2>発表：<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>デンパゆんゆん観察 (<a href="https://twitter.com/ozuma5119">@ozuma5119</a>)</h2>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ISP">ISP</a> 4月転職</li>
<li>理科っぽい写真をとってる</li>
</ul>


<p><strong>みんなWEPキーを破りたい！</strong></p>

<h3>その前に電波法</h3>

<p>電波法とかやっとかないと逮捕者が出てしまいます。</p>

<p><strong>セキュリティエンジニアやるには法律には気をつけて欲しい。</strong></p>

<h4>電波法59条</h4>

<blockquote><p>何人も法律に別段の定めがある場合を除くほか、特定の相手方に対して行われる無線通信
（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%C5%B5%A4%C4%CC%BF%AE%BB%F6%B6%C8%CB%A1">電気通信事業法</a>第４条第１項又は第164条第２項の通信であるものを除く。
第109条並びに第109条の２第２項及び第３項において同じ。）を傍受して
その存在若しくは内容を漏らし、又はこれを窃用してはならない。</p></blockquote>

<h5>Wirsharkとかのパケットキャプチャについて</h5>

<ul>
<li>傍受は大丈夫。</li>
<li><strong>公共の場で無線APの<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSID">SSID</a>を公開したらかなり黒に近いグレー</strong></li>
</ul>


<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140618/20140618224655.png" alt="f:id:wnoguchi0727:20140618224655p:plain" title="f:id:wnoguchi0727:20140618224655p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>航空無線も漏らしてはいけない！！</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B1%A9%C5%C4%B6%F5%B9%C1">羽田空港</a>で聞いてる人がいる。でも内容は決して教えてくれないはずです。</li>
<li>電車オタクも同様。</li>
</ul>


<h5>電波法59条まとめ</h5>

<ul>
<li>傍受はいくらでもOK。</li>
<li>漏らしちゃダメよ。</li>
</ul>


<h4>電波法60条</h4>

<blockquote><p>無線局には、正確な時計及び無線業務日誌その他<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C1%ED%CC%B3%BE%CA">総務省</a>令で定める書類を備え付けておかなければならない。
ただし、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C1%ED%CC%B3%BE%CA">総務省</a>令で定める無線局については、これらの全部又は一部の備付けを省略することができる。</p></blockquote>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>を運用していたら無線日誌をつけなきゃいけない？</p>

<p><strong>自宅の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>は無線業務日誌は省略してかまわない。</strong></p>

<h3>電波法の注意点がわかったところでさっそくWEPをやぶってみよう</h3>

<ul>
<li>WPA2は一般的</li>
<li><p>WEPは超弱い</p></li>
<li><p>IV(initialization <a class="keyword" href="http://d.hatena.ne.jp/keyword/vector">vector</a>)キー</p></li>
<li>暗号キー（WEPに設定するパスワード）</li>
<li>これらから鍵（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%BC%BB%F7%CD%F0%BF%F4">擬似乱数</a>列）になる</li>
</ul>


<h3>WEPの破りやすさ</h3>

<ul>
<li>IV初期化ベクトルが24bitで弱い</li>
<li>認証と暗号の鍵が同一で鍵を変えない</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Wireshark">Wireshark</a>で<a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>に慣れる</h3>

<ul>
<li>アイトリプルイーエイトオートぅ～どっとわんわん</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/IEEE802">IEEE802</a>.11</li>
</ul>


<pre class="code" data-unlink>wlan.bssid == 00:ff:ff:ff:ff:ff</pre>


<ul>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>のフレームはBSSIDで絞り込むのがおすすめ</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>フレームのサンプル：ビーコンを見てみたい</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%B5%C0%FELAN">無線LAN</a>の一覧はこのビーコンで拾ってる</p></li>
<li><p>暗号化しても<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSID">SSID</a>は見れる</p></li>
<li><p>WEPで暗号化されたパケット</p></li>
<li><p>IV（初期化ベクトル）は平文で送られてくる</p></li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Wireshark">Wireshark</a>飽きた</h3>

<ul>
<li>aircrack-ngという<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a><br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>だとインストールがめっちゃめんどくさい</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>という神の手によって作られたディストリなら一発</li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/kari">kari</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/linux">linux</a>というものがある</p></li>
<li><p>BSSID:ESSIDは違う</p></li>
<li>チャンネル番号をメモしとくと便利</li>
</ul>


<p><a href="http://zokugo-dict.com/01a/ancyoko.htm">あんちょこ</a>を用意してましたー</p>

<p><strong>～１０分程度でやぶれる</strong></p>

<ul>
<li>WEPが使われているのは（<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%D8%C2%A7%BB%F6%B9%E0">禁則事項</a>）のせい</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C1%B5%BF%B1%FE%C5%FA">質疑応答</a></h3>

<ul>
<li>アダプタをモニタモードにしないといけない</li>
<li>対応していないのもあるから<a class="keyword" href="http://d.hatena.ne.jp/keyword/NIC">NIC</a>を変えてみたら？</li>
</ul>


<p><code>@inaz2</code> さん</p>

<ul>
<li>マルチ<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSID">SSID</a></li>
<li>WEP</li>
<li>WPA2</li>
<li>同じパスにしちゃだめだよ。</li>
</ul>


<h2>発表：CRYPT＋YOU, UNDERSTAND TODAY! (<a href="https://twitter.com/inaz2">@inaz2</a>) </h2>

<ul>
<li>Practical Crypt</li>
<li><a href="http://inaz2.hatenablog.com/">ももいろテクノロジー</a></li>
</ul>


<p><strong>暗号大事</strong></p>

<ul>
<li>X.509とか802.11Xとかのキーワードが交じる</li>
<li>PEM, <a class="keyword" href="http://d.hatena.ne.jp/keyword/CSR">CSR</a>, <a class="keyword" href="http://d.hatena.ne.jp/keyword/RADIUS">RADIUS</a></li>
</ul>


<p><strong>暗号という概念に限って言えばそれほど難しくない</strong></p>

<ul>
<li>換字式暗号</li>
<li>文字単位、あるいはブロック単位で置き換える</li>
</ul>


<h3>2014/05/05 <a class="keyword" href="http://d.hatena.ne.jp/keyword/NSA">NSA</a>採用担当さんがなんか言った</h3>

<p><blockquote class="twitter-tweet" lang="HASH(0x8da9770)"><p>tpfccdlfdtte pcaccplircdt dklpcfrp?qeiq lhpqlipqeodf gpwafopwprti izxndkiqpkii krirrifcapnc dxkdciqcafmd vkfpcadf. <a href="https://twitter.com/hashtag/MissionMonday?src=hash">#MissionMonday</a> <a href="https://twitter.com/hashtag/NSA?src=hash">#NSA</a> <a href="https://twitter.com/hashtag/news?src=hash">#news</a></p>&mdash; <a class="keyword" href="http://d.hatena.ne.jp/keyword/NSA">NSA</a> (@NSACareers) <a href="https://twitter.com/NSACareers/statuses/463321993878994945">May 5, 2014</a></blockquote><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<ul>
<li><a href="http://jp.techcrunch.com/2014/05/08/20140505the-nsas-code-tweet-deciphered/">簡単に解読されてしまったNSAの暗号ツイート | TechCrunch Japan</a></li>
</ul>


<p>全自動解読機あります。</p>

<ul>
<li><a href="http://quipqiup.com/">quippiuq - cryptoquip and cryptogram solver</a></li>
</ul>


<h4>解読後</h4>

<blockquote><p>want to know what it takes to work at <a class="keyword" href="http://d.hatena.ne.jp/keyword/nsa">nsa</a>?
check back eachmong ad in mad as we explore careersessential to protect in your nation.</p></blockquote>

<h3>XOR<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%E9%A5%F3">スクラン</a>ブルの復元</h3>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/RC4">RC4</a></h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%A6%C4%CC%B8%B0%B0%C5%B9%E6">共通鍵暗号</a>方式のうち、ストリーム暗号と呼ばれるもののひとつ</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Winny">Winny</a>でもこれが使われている</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/RC4">RC4</a>のバイアス問題</li>
</ul>


<h3>AES</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B6%A6%C4%CC%B8%B0%B0%C5%B9%E6">共通鍵暗号</a>方式のうち、ブロック暗号と呼ばれる</li>
<li>いい感じにぐちゃぐちゃになる</li>
<li>でも鍵がわかれば元に戻せるよ</li>
</ul>


<h3>暗号利用モード</h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ADOBE">ADOBE</a> PASSWORD BREACH</li>
<li>暗号化されていたがECB Mode。使っちゃいけない</li>
</ul>


<p><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/CBC">CBC</a>モードが有効</strong></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/RSA">RSA</a></h3>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B8%F8%B3%AB%B8%B0%B0%C5%B9%E6%CA%FD%BC%B0">公開鍵暗号方式</a>の一つ</li>
<li>暗号、復号は平文、暗号文をそれぞれ累乗する</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C1%C7%B0%F8%BF%F4%CA%AC%B2%F2">素因数分解</a>すれば<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>が分かる</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C2%BF%B9%E0%BC%B0">多項式</a>時間（現実的な時間では終わらない）</li>
</ul>


<pre class="code" data-unlink>openssl genrsa 192 | openssl rsa -modulus</pre>


<ul>
<li>768ならまずむり</li>
<li><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%D1%A5%B3%A5%F3">スパコン</a>が本気だせば半年で終わる</strong></li>
<li>2048, 4096が一般的</li>
</ul>


<h4><a class="keyword" href="http://d.hatena.ne.jp/keyword/RSA">RSA</a>の使われ方</h4>

<ul>
<li>データそのものの暗号化にはほとんど用いられない</li>
<li>鍵共有</li>
<li>デジタル署名</li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/BIG%20BROTHER">BIG BROTHER</a> MIGHT BE WATCHING YOU</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/RSA">RSA</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>を盗まれたら鍵共有で交換していた共通鍵がばれる。</p>

<h3>DH(<a class="keyword" href="http://d.hatena.ne.jp/keyword/Diffie-Hellman">Diffie-Hellman</a>)</h3>

<p>鍵共有<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%C8%A5%B3%A5%EB">プロトコル</a>。</p>

<p>PERFECT FORWARD SECRECY</p>

<ul>
<li>通信のセッションごとに違う共通鍵を使って暗号化</li>
<li>セッションごとに鍵を変える場合を特にDHE(Ephemeral)と呼ぶ</li>
<li>最近<a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a>がこれを適用した</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>/<a class="keyword" href="http://d.hatena.ne.jp/keyword/TLS">TLS</a>’S CIPHERSUITE</h3>

<ul>
<li>デッキみたいなもの</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/SSL">SSL</a>/<a class="keyword" href="http://d.hatena.ne.jp/keyword/TLS">TLS</a>にて、使用する暗号の組み合わせを表したもの</li>
<li><strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/TLS">TLS</a>_ECDHE_<a class="keyword" href="http://d.hatena.ne.jp/keyword/RSA">RSA</a>_WITH_AES_128_<a class="keyword" href="http://d.hatena.ne.jp/keyword/CBC">CBC</a>_SHA</strong></li>
</ul>


<p><strong>基礎は大事！！</strong></p>

<h2>発表：Metasploitで<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DA%A5%CD%A5%C8%A5%EC%A1%BC%A5%B7%A5%E7%A5%F3%A5%C6%A5%B9%A5%C8">ペネトレーションテスト</a> (<a href="https://twitter.com/super_a1ice">@super_a1ice</a>) </h2>

<ul>
<li>大学院生</li>
<li>池袋セキュリティ勉強会参加してた</li>
</ul>


<h3>Metasploit Framework基本</h3>

<ul>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/kari">kari</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/linux">linux</a></p></li>
<li><p><a href="http://www.exploit-db.com/">Exploits Database by Offensive Security</a></p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A8%A5%AF%A5%B9%A5%D7%A5%ED%A5%A4%A5%C8">エクスプロイト</a></li>
<li><p><a href="http://www.exploit-db.com/exploits/32752/">WinRAR Filename Spoofing</a></p></li>
<li><p>C&amp;C</p></li>
<li><p>command and controlサーバ</p></li>
<li><p>リバースコネクション</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A5%C3%A5%AF%A5%C9%A5%A2">バックドア</a></li>
<li><p>サーバ側からクライアント側にコマンドが送られる</p></li>
<li><p>LHOST</p></li>
<li><p>LPORT</p></li>
<li><p>winrar spoofing</p></li>
<li>winrarからCCサーバに接続される</li>
</ul>


<p>ここまでで聞いているのがやっとなくらいに難しい単語が並ぶ＠＠；</p>

<h3>Webアプリケーションの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>をついてみよう</h3>

<p>代表的な例で「OSコマンドインジェクション」。</p>

<pre class="code" data-unlink><span class="synSpecial">&lt;?php</span>
<span class="synStatement">$</span><span class="synIdentifier">cmd</span><span class="synStatement">=</span>‘whois ‘ <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">_GET</span><span class="synSpecial">[</span>‘ip’<span class="synSpecial">]</span>;
<span class="synStatement">$</span><span class="synIdentifier">result</span> <span class="synStatement">=</span> 
</pre>


<p>こういうのをやるときは周りに迷惑をかけないように<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>でやるといい。<br/>
<strong><a class="keyword" href="http://d.hatena.ne.jp/keyword/VirtualBox">VirtualBox</a>ならHostOnlyAdapterなどを使うなどして細心の注意を払ってやってください。</strong></p>

<ul>
<li>Metasploit<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a></li>
<li>Xssf</li>
<li>Metasploitで<a class="keyword" href="http://d.hatena.ne.jp/keyword/XSS">XSS</a>を行うための<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%B0%A5%A4%A5%F3">プラグイン</a></li>
<li>auto_<a class="keyword" href="http://d.hatena.ne.jp/keyword/exploit">exploit</a></li>
<li>データベースに登録された<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>に対して<a class="keyword" href="http://d.hatena.ne.jp/keyword/exploit">exploit</a>する</li>
<li>postauto</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Exploit">Exploit</a>を使って電卓を起動してみよう</h3>

<p>方法は2つある。</p>

<ol>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/exploit">exploit</a>-dbから探す</li>
<li>自作する</li>
</ol>


<p>.</p>

<ul>
<li>Immunity Debugger</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/mona">mona</a></li>
</ul>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/WinXP">WinXP</a>にて・・・</p>

<p>さっきの<a class="keyword" href="http://d.hatena.ne.jp/keyword/python">python</a>のコードを実行して、生成されたHTMLをメモ帳で開く。<br/>
閉じようとするとcalcが立ち上がる！<br/>
普通に動かせる。</p>

<p><strong>すごい以外の言葉が見つからない。</strong></p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%BC%C1%B5%BF%B1%FE%C5%FA">質疑応答</a></h3>

<h4>このあたりの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>を前向きないいことに使う方法はありますか？</h4>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DE%A5%EB%A5%A6%A5%A7%A5%A2">マルウェア</a>検知に使えたり</li>
<li>防御側として攻撃手法を知っていく必要があるため、実際にやってみるのは有益</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%C0%C8%BC%E5%C0%AD">脆弱性</a>検査をお願いされた場合はこういう確認の意味として使用することも有用である</li>
</ul>


<h2>まとめ</h2>

<p>無線APのWEPキーを破るのとかとても興味深いテーマで、解読していく過程や、電波法に関する豆知識もとても勉強になりました。
試しに無線AP手に入ったらやってみたいです。あーでもやりたいこといっぱいある。</p>

<p>暗号化理論は難しくて私にはよくわからないけど、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Diffie-Hellman">Diffie-Hellman</a>とか認証関係で頭悩まされた単語なので親しみ深かったです。</p>

<p><a href="http://e-words.jp/w/E3839AE3838DE38388E383ACE383BCE382B7E383A7E383B3E38386E382B9E38388.html">ペネトレーションテスト</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>である？Metasploit Frameworkをとても興味深い<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C4%A1%BC%A5%EB">ツール</a>でした。<br/>
攻撃者の攻撃手法を身をもって体感してみるのもセキュリティエンジニアとしての努めかなと思ってみたり。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/kari">kari</a>-<a class="keyword" href="http://d.hatena.ne.jp/keyword/linux">linux</a>は近いうちに触ってみたい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%B9%A5%C8%A5%EA%A5%D3%A5%E5%A1%BC%A5%B7%A5%E7%A5%F3">ディストリビューション</a>ですね。</p>

<p>とりあえず登壇された方はフォローさせていただきました。</p>

<p>残って食事会にでも参加してみたかったのですが、駅前でかき揚げ天玉そばを食べて帰りました。</p>

<p>また今度ご一緒したいです！</p>

<h2>参考文献</h2>

<ol>
<li><a href="http://ozuma.sakura.ne.jp/sumida/">すみだセキュリティ勉強会</a></li>
<li><a href="http://atnd.org/events/51137">Security Casual Talks 2014#2 (すみだセキュリティ勉強会) : ATND</a></li>
<li><a href="http://inaz2.hatenablog.com/">ももいろテクノロジー</a></li>
<li><a href="http://ja.wikipedia.org/wiki/Metasploit">Metasploit - Wikipedia</a></li>
<li><a href="http://furandon-pig.hatenablog.com/entry/2014/06/08/004054">Security Casual Talks 2014#2(すみだセキュリティ勉強会)に参加してきました - 夜はいよいよ冴えたのだ。</a></li>
<li><a href="http://quipqiup.com/">quippiuq - cryptoquip and cryptogram solver</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: 「はじめてのOSコードリーディング 読書会 (15)」に行ってきました
BASENAME: 2014/05/27/231456
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 05/27/2014 23:14:56
CATEGORY: UNIX
CATEGORY: V6
CATEGORY: OS
CATEGORY: 読書会
CATEGORY: 勉強会
CATEGORY: バイナリ
IMAGE: http://ecx.images-amazon.com/images/I/519D-9b0bfL.jpg
-----
BODY:
<p>先週の5/24（土）に生まれて初めて勉強会に行ってまいりました。<br/>
※正確には読書会です。</p>

<p><a href="http://connpass.com/event/6163/">はじめてのOSコードリーディング 読書会 (15) - connpass</a></p>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774154644/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/519D-9b0bfL._SL160_.jpg" class="hatena-asin-detail-image" alt="はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)" title="はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4774154644/blogpg1xcom01-22/">はじめてのOSコードリーディング ~UNIX V6で学ぶカーネルのしくみ (Software Design plus)</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> 青柳隆宏</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%BB%BD%D1%C9%BE%CF%C0%BC%D2">技術評論社</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/01/09</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><span class="hatena-asin-detail-label">購入</span>: 56人 <span class="hatena-asin-detail-label">クリック</span>: 1,959回</li><li><a href="http://d.hatena.ne.jp/asin/4774154644/blogpg1xcom01-22" target="_blank">この商品を含むブログ (29件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a> V6とは<a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のバージョン6の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9">ソースコード</a>で、10,000行程度でOSに必要な実装がなされているため、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のコードリーディングにはちょうどよい教材なのだそうです。<br/>
ただ、それでもLions本は読み解くのが相当難しいらしいですが・・・。</p>

<p>こういった集まりに参加するのはほんとに初めてなので、<br/>
会場はどういったものなのか、どのような人たちが集まって<br/>
どのような会話が繰り広げられるのかといったいろいろと想像してドキドキでした。</p>

<h2>辿り着くまで</h2>

<p>会場は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C3%D3%C2%DE%B1%D8">池袋駅</a>近くのビルでした。<br/>
まだ東京に来て慣れないので、迷う可能性も考えて2時間前には出発しました。<br/>
・・・案の定迷いました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C3%D3%C2%DE%B1%D8">池袋駅</a>まで来たのは良かったけれども、いったいどこから地上に出られるのかわからない！<br/>
案内図を見ると出口がいっぱいある・・・。<br/>
どれかそれっぽい出口を出て看板を見るとそこには<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C5%EC%B5%FE%A5%E1%A5%C8%A5%ED">東京メトロ</a>のロゴが・・・。<br/>
僕は確かにJRの駅で降りたはず・・・と混乱しながら<a class="keyword" href="http://d.hatena.ne.jp/keyword/Google%A5%DE%A5%C3%A5%D7">Googleマップ</a>をたよりにやっとこさ会場にたどり着きました。</p>

<h2>会場についてから</h2>

<p>会場にはもうすでに2名ほどの方がいらっしゃいました。
少しくして主催者の <a href="http://connpass.com/user/7shi/">@7shi</a> さんまでそろい、僕も含めて9名で開催されました。</p>

<p>念のため自分の<a class="keyword" href="http://d.hatena.ne.jp/keyword/MBA">MBA</a>も持って行っていたのですが、みなさんも全員ノートPCやらMBPやらお持ちでした。
メモをとったり、<a class="keyword" href="http://d.hatena.ne.jp/keyword/UNIX">UNIX</a> V6の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9">ソースコード</a>を見たりするときに便利でした。</p>

<p>さりげなくまわりを見渡すと</p>

<ul>
<li><a href="http://www.radiokaikan.jp/press/?p=62998">人気投票艦娘一覧</a>のポスターが！</li>
<li>本棚には技術系の本がいっぱい。</li>
</ul>


<p>なんだかとても親近感を覚えながらも読書会は開幕しました。</p>

<h2>@7shi さんのプレゼンテーション</h2>

<p>ここで @7shi さんが次の日のイベントで発表されるプレゼンのリハーサルを聞かせていただきました。</p>

<ul>
<li><a href="http://www.kernelvm.org/">カーネル／VM探検隊</a></li>
<li><a href="http://kernelvm10.peatix.com/">第十回 カーネル／VM探検隊＆懇親会 | Peatix</a></li>
</ul>


<p>に参加されるとのことでした。</p>

<ul>
<li>UNIXV1～V7～<a class="keyword" href="http://d.hatena.ne.jp/keyword/OpenBSD">OpenBSD</a>までの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9">ソースコード</a>発展の流れ</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/PDP">PDP</a>-11を勉強していたが不人気</li>
<li>教材として<a class="keyword" href="http://d.hatena.ne.jp/keyword/x86">x86</a> OSの検討

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Minix">Minix</a>(ack)　意図的な断絶</li>
<li>xv6(<a class="keyword" href="http://d.hatena.ne.jp/keyword/gcc">gcc</a>)　むずい</li>
<li>V7/x88(ack)　むずい</li>
</ul>
</li>
</ul>


<p>↓</p>

<p>V6の<a class="keyword" href="http://d.hatena.ne.jp/keyword/PDP">PDP</a>-11から<a class="keyword" href="http://d.hatena.ne.jp/keyword/x86">x86</a>プロセッサへの移植作業をし始めた！</p>

<ul>
<li>16bit（リアルモード＝8086）動作限定</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/BIOS">BIOS</a>経由の同期アクセスのみ</li>
</ul>


<p>その他やることとしては</p>

<ul>
<li>libcのトランスレート</li>
<li>ユーザーランドの移植</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の移植</li>
<li>最終的には<a class="keyword" href="http://d.hatena.ne.jp/keyword/VMware">VMware</a>や<a class="keyword" href="http://d.hatena.ne.jp/keyword/Qemu">Qemu</a>で動くようにする</li>
</ul>


<p>ちょっとした小話ですが、V1は全部<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%BB%A5%F3%A5%D6%A5%E9">アセンブラ</a>で書かれているそうです（！）<br/>
ちなみにEXEを作って遊ばれていたとのことでしたが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/C%B8%C0%B8%EC">C言語</a>のソースをVSでビルドするというレベルの話ではなくて、<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B5%A1%B3%A3%B8%EC">機械語</a>を自分の手で書いて遊ばれていたそうです、すごい・・・。</p>

<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/BSD">BSD</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の設計と実装 読書会</h2>

<p>これから本題かと思いましたが、「<a class="keyword" href="http://d.hatena.ne.jp/keyword/BSD">BSD</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>の設計と実装 読書会 (22)」が同時に開催されるようです。<br/>
これについては僕も予想していなかったのですが、隣の方に本を見せていただきながら<br/>
読書会に参加させていただきました。
ありがとうございます！</p>

<ul>
<li><a href="http://connpass.com/event/6165/">BSDカーネルの設計と実装 読書会 (22) - connpass</a></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a>: <a href="https://twitter.com/search?q=%23readDaemon&amp;src=typd">#readDaemon</a></li>
</ul>


<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4756146791/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51WFHJB9MZL._SL160_.jpg" class="hatena-asin-detail-image" alt="BSDカーネルの設計と実装―FreeBSD詳解" title="BSDカーネルの設計と実装―FreeBSD詳解"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4756146791/blogpg1xcom01-22/">BSDカーネルの設計と実装―FreeBSD詳解</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> マーシャル・カークマキュージック,ジョージ・V.ネヴィル‐ニール,砂原秀樹,Marshall Kirk McKusick,George V. Neville‐Neil,歌代和正</li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%B9%A5%AD%A1%BC">アスキー</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2005/10/18</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本</li><li> <span class="hatena-asin-detail-label">クリック</span>: 122回</li><li><a href="http://d.hatena.ne.jp/asin/4756146791/blogpg1xcom01-22" target="_blank">この商品を含むブログ (57件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<p>こちらの本は絶版になっています。購入するには中古で購入する必要があります。</p>

<p>歌代和正さん訳の本とのことで、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Perl">Perl</a>界隈で有名な方だそうです。<br/>
って、あとで調べてみたら jcode.pl を開発された方ですか！<br/>
そりゃ有名なはずですね・・・。</p>

<p>以降の話は全体的に8.6ソフトアップデートに関するお話でした。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B8%A5%E3%A1%BC%A5%CA%A5%EA%A5%F3%A5%B0">ジャーナリング</a>とは根本的に違うようです。</p>

<h3>8.6.8 新規ディレクトリエントリの依存管理</h3>

<h3>8.6.9 新規ディレクトリの依存管理</h3>

<p>以下、かいつまんで単語レベルでぶつ切りに並べてありますが、<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DC%A5%A4%A5%B9%A5%EC%A5%B3%A1%BC%A5%C0%A1%BC">ボイスレコーダー</a>等で正確にトレースしたわけではないので、<br/>
私の書いていることは話半分に聞いてください。</p>

<ul>
<li>ビットマップ</li>
<li>ディスク上の対応</li>
<li>依存関係がある</li>
<li>ビットマップを作成する前にinodeを作成するとまずい</li>
<li>どの段階で電源が切れても大丈夫なように依存関係を管理する手法</li>
<li>あとで<a class="keyword" href="http://d.hatena.ne.jp/keyword/fsck">fsck</a>をかければ直る程度になる</li>
</ul>


<h3>8.6.10 ディレクトリエントリの削除にかかわる依存処理</h3>

<ul>
<li>ソフトアップデート</li>
<li>ディスク上の話</li>
</ul>


<h3>8.6.11 ファイルの短縮</h3>

<p>100MB→0バイトにすること。ファイルの削除ではない。</p>

<ul>
<li><p>8.6.13 ディレクトリエントリの名称変更にかかわる依存性管理</p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%ED%A1%BC%A5%EB%A5%D0%A5%C3%A5%AF">ロールバック</a></p></li>
<li>diradd</li>
<li>dirrem</li>
<li>BをXに変える</li>
</ul>


<h3>8.6.14 ファイルの削除に関する依存管理</h3>

<ul>
<li>ソフトアップデートは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B8%A5%E3%A1%BC%A5%CA%A5%EA%A5%F3%A5%B0">ジャーナリング</a>とは異なる技術</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B8%A5%E3%A1%BC%A5%CA%A5%EA%A5%F3%A5%B0">ジャーナリング</a>はもってから書き出す</li>
<li>メタ情報を守るためのもの</li>
</ul>


<h3>8.6.15 ソフトアップデートがfsyncをサポートするための条件</h3>

<ul>
<li>inodeのビットマップ書き出しが完了しているか</li>
<li>FreeBSD3.xのころにソフトアップデートが導入された</li>
</ul>


<p>ここで 7shi さんからこんな体験談を聞きました。</p>

<ul>
<li>大量の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9">ソースコード</a>削除してみる</li>
<li>プロンプトは戻ってきてもずっとディスクアクセスが続く</li>
<li>dfの結果がなかなか減らない</li>
<li><p>これがソフトアップデートの結果？</p></li>
<li><p>今やってる本はFreeBSD5.2の本</p></li>
</ul>


<p>このあたりで<a href="http://ja.wikipedia.org/wiki/ZFS">ZFS（ズィーエフエス）</a>や<a href="http://ja.wikipedia.org/wiki/Btrfs">Btrfs（バター エフエス）</a>の話も出ましたね。
<a class="keyword" href="http://d.hatena.ne.jp/keyword/ZFS">ZFS</a>は使ったことがありますが、重複排除機能がすばらしいですね、
2GBのファイルをcpしてもディスク上の使用量は4GBとはならずほぼ2GBでとどまります。
ただ面白いことにdfの結果は全体的な容量が増えたような結果を返すんですよね。
ただ、お話にも出てましたがメモリは積んだら積んだ分だけめっちゃくちゃメモリ食います。</p>

<p>ここで巨大なファイルの読み込みの仕組みの話。</p>

<ul>
<li>ディスクとメモリがマップされる</li>
<li>必要になったらメモリに読み込む</li>
<li>4GBとかデカイ動画ファイルはメモリマップしてファイルの中身を読み書きするらしい。</li>
<li>ページキャッシュ</li>
</ul>


<p><strong>今年の秋頃新板が出る予定（ただし英語、<a class="keyword" href="http://d.hatena.ne.jp/keyword/ZFS">ZFS</a>の話とかも入る）</strong></p>

<ul>
<li><p>8.6.17 <a class="keyword" href="http://d.hatena.ne.jp/keyword/fsck">fsck</a>に必要なソフトアップデートの条件</p></li>
<li><p>ソフトアップデート + <a class="keyword" href="http://d.hatena.ne.jp/keyword/fsck">fsck</a>では</p></li>
<li><code>lost+found</code> ディレクトリに退避される</li>
<li>いっぱいになっちゃう（何がいっぱいになっちゃうのかは忘れてしまいました。。。）</li>
</ul>


<h3>8.6.18 ソフトアップデートの性能</h3>

<ul>
<li>同期とソフトアップデートではかなり性能差がある</li>
<li>同期: 27時間15分</li>
<li>ソフトアップデート: 19時間50分</li>
</ul>


<h2>はじめてのOSコードリーディング 読書会 (15)</h2>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%CF%A5%C3%A5%B7%A5%E5%A5%BF%A5%B0">ハッシュタグ</a>: <a href="https://twitter.com/search?q=%23firstv6&amp;src=typd">#firstv6</a></li>
</ul>


<p>10分ほど休憩を挟んでいよいよ本題です。<br/>
本日の内容は 第11章のパイプ(p.348) からです。<br/>
僕はp.60のfork<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%A5%B3%A1%BC%A5%EB">システムコール</a>のところまで。<br/>
さすがにここまで追いつくことはできませんでした・・・。</p>

<h3>第11章 パイプ</h3>

<p>パイプはパイプのストレージ領域 <code>PIPSIZ(4096)</code> に少しずつためながら流し込んでいますが、</p>

<pre class="code" data-lang="" data-unlink>ls | sort</pre>


<p>この場合の sort コマンドを実行した時はどうなるの？
という疑問が上がりました。
ソート側のバッファにパイプから流れてくる内容をためてからソートしているはずとの予測が出てきました。</p>

<p>@7shiさんから、V6のソートの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%BD%A1%BC%A5%B9%A5%B3%A1%BC%A5%C9">ソースコード</a>は短いですよ～とのお話を頂いたので、この場で読み込んでみる形と相成りました。</p>

<p>このころはlibc自体は発展途上
sort.cの中でテンポラリファイルの作成処理等をやってる</p>

<pre class="code lang-c" data-lang="c" data-unlink><span class="synComment">/* src/s2/sort.c */</span>
    i = lspace = sbrk(<span class="synConstant">0</span>);<span class="synComment">/* 135 */</span>
    <span class="synStatement">while</span>(brk(a) == -<span class="synConstant">1</span>)
        a =- <span class="synConstant">512</span>;
    brk(a =- <span class="synConstant">512</span>); <span class="synComment">/* for recursion */</span>
    a =- i;
    nlines = ((a-L)&gt;&gt;<span class="synConstant">1</span>) &amp; <span class="synPreProc">0</span><span class="synConstant">77777</span>;
    nlines =/ <span class="synConstant">5</span>;
    ntext = nlines*<span class="synConstant">8</span>;
    tspace = lspace+nlines;<span class="synComment">/* 143 */</span>
    file = <span class="synConstant">&quot;/usr/tmp/stmXaa&quot;</span>;
<span class="synStatement">loop</span>:
    filep = file;
    <span class="synStatement">while</span>(*filep != <span class="synConstant">'X'</span>)
        filep++;
    <span class="synStatement">for</span>(*filep = <span class="synConstant">'a'</span>;;(*filep)++) {
        <span class="synStatement">if</span>(stat(file, lspace) &lt; <span class="synConstant">0</span>) {
            a = creat(file, <span class="synPreProc">0</span><span class="synConstant">600</span>);
            <span class="synStatement">if</span>(a &gt;= <span class="synConstant">0</span>)
                <span class="synStatement">break</span>;
        }
        <span class="synStatement">if</span>(*filep == <span class="synConstant">'z'</span>) {
            <span class="synStatement">if</span>(file[<span class="synConstant">1</span>] != <span class="synConstant">'t'</span>) {
                file = <span class="synConstant">&quot;/tmp/stmXaa&quot;</span>;
                <span class="synStatement">goto</span> loop;
            }
            mess(<span class="synConstant">&quot;Cannot locate temp</span><span class="synSpecial">\n</span><span class="synConstant">&quot;</span>);
            exit(<span class="synConstant">1</span>);
        }
    }
    close(a);
    filep++;
    <span class="synStatement">if</span> ((signal(<span class="synConstant">2</span>, <span class="synConstant">1</span>) &amp; <span class="synPreProc">0</span><span class="synConstant">1</span>) == <span class="synConstant">0</span>)
        signal(<span class="synConstant">2</span>, term);
    nfiles = eargc;
    <span class="synStatement">if</span>(!mflg) {
        ibuf[<span class="synConstant">0</span>] = -<span class="synConstant">1</span>;
        sort();
        close(<span class="synConstant">0</span>);
    }
    <span class="synStatement">for</span>(a = mflg?<span class="synConstant">0</span>:eargc; a+N &lt; nfiles; a=+N) {
        newfile();
        merge(a, a+N);
    }
    <span class="synStatement">if</span>(a != nfiles) {
        oldfile();
        merge(a, nfiles);
    }
    error = <span class="synConstant">0</span>;
    term();
}

sort()
{
    <span class="synType">register</span> <span class="synType">char</span> *cp;
    <span class="synType">register</span> *lp, c;
    <span class="synType">int</span> done;
    <span class="synType">int</span> i;
    <span class="synType">int</span> f;

    done = <span class="synConstant">0</span>;
    i = <span class="synConstant">0</span>;
    <span class="synStatement">do</span> {
        cp = tspace;<span class="synComment">/* 197 */</span>
        lp = lspace;<span class="synComment">/* 198 */</span>
        <span class="synStatement">while</span>(lp &lt; lspace+nlines &amp;&amp; cp &lt; tspace+ntext) {<span class="synComment">/* 199 */</span>
            *lp++ = cp;
            <span class="synStatement">while</span>((*cp++ = c = getc(ibuf)) != <span class="synSpecial">'\n'</span>) {
                <span class="synStatement">if</span>(c &gt;= <span class="synConstant">0</span>) <span class="synStatement">continue</span>;
                cp--;
                close(ibuf[<span class="synConstant">0</span>]);
                <span class="synStatement">if</span>(i &lt; eargc) {
                    <span class="synStatement">if</span>((f = setfil(i++)) == <span class="synConstant">0</span>)
                        ibuf[<span class="synConstant">0</span>] = <span class="synConstant">0</span>;
                    <span class="synStatement">else</span> <span class="synStatement">if</span>(fopen(f, ibuf) &lt; <span class="synConstant">0</span>)
                        cant(f);
                } <span class="synStatement">else</span>
                    <span class="synStatement">break</span>;
            }
            <span class="synStatement">if</span>(c &lt; <span class="synConstant">0</span>) {
                done++;
                lp--;
                <span class="synStatement">break</span>;
            }
        }
</pre>


<p>私には難しくてあんまり理解できませんでした・・・。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/gnu">gnu</a> global?</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>側とlibc側のgetcがある</li>
<li>getcは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%A5%B3%A1%BC%A5%EB">システムコール</a>のもの？</li>
<li>一般的なパイプ</li>
<li>isatty</li>
<li><p>パイプから来てるのか、標準入力から来てるのか</p></li>
<li><p>teeコマンドの動き</p></li>
<li><p>今なら<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>のバッファに</p></li>
<li><p>パイプを何段もつないだ場合にエラーとなる</p></li>
<li>pipe<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%A5%B3%A1%BC%A5%EB">システムコール</a>がいくつも呼ばれてFILE構造体がたくさん確保されてENFILEエラーが発生する</li>
</ul>


<p>ちょっとここで小話がありました。</p>

<ul>
<li>V1<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%BB%A5%F3%A5%D6%A5%E9">アセンブラ</a>はプリントアウトしたソースから<a class="keyword" href="http://d.hatena.ne.jp/keyword/OCR">OCR</a>で復元したものだそうですｗ</li>
<li><p>V2, V3の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>ソースは失われている。ソースはあっても逆<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%BB%A5%F3%A5%D6%A5%EB">アセンブル</a>したものなので見るものによって見た目が違う。</p></li>
<li><p>prele(リリース)は <code>root/usr/sys/ken/pipe.c</code> に定義されているのにパイプと関係ないところからいくつも呼ばれているｗ</p></li>
</ul>


<pre class="code lang-c" data-lang="c" data-unlink><span class="synComment">/*</span>
<span class="synComment"> * Unlock a pipe.</span>
<span class="synComment"> * If WANT bit is on,</span>
<span class="synComment"> * wakeup.</span>
<span class="synComment"> * This routine is also used</span>
<span class="synComment"> * to unlock inodes in general.</span>
<span class="synComment"> */</span>
prele(ip)
<span class="synType">int</span> *ip;
{
    <span class="synType">register</span> *rp;

    rp = ip;
    rp-&gt;i_flag =&amp; ~ILOCK;
    <span class="synStatement">if</span>(rp-&gt;i_flag&amp;IWANT) {
        rp-&gt;i_flag =&amp; ~IWANT;
        wakeup(rp);
    }
}
</pre>


<h4>plock()</h4>

<ul>
<li>トイレと同じ原理</li>
<li>開けて！</li>
</ul>


<p>参考としては</p>

<ul>
<li>p.161, 166</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/lightning%20bolt">lightning bolt</a></li>
<li>割り込み</li>
</ul>


<p>以下、覚書です。</p>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/PDP">PDP</a>-11のシミュレータ</li>
<li>コルーチン</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/dup">dup</a></li>
<li>STDOUTを保存しとかないと失われる</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/daemon">daemon</a>の作法としてSTDOUTを閉じる</li>
<li>initの子</li>
</ul>


<h2>雑談</h2>

<p>読書会も終盤にさしかかりました。
あまった時間で参加者の方からこういった勉強会に参加してきたよというお話を伺えました。</p>

<ul>
<li><a href="http://connpass.com/event/6191/">OSvもくもく会#1 〜OSvで遊んでみよう〜 - connpass</a></li>
<li><p><a href="http://www.slideshare.net/yandex/5-31659962">OSv – The OS designed for the Cloud</a></p></li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/C%2B%2B">C++</a>11で実装されている</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/KVM">KVM</a>を開発してた人が書いたOS</li>
<li>Library OS</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/VM">VM</a>ごとに1つのアプリ</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AB%A1%BC%A5%CD%A5%EB">カーネル</a>空間とユーザ空間の区別がない</li>
<li><p><a class="keyword" href="http://d.hatena.ne.jp/keyword/POSIX">POSIX</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>互換</p></li>
<li><p>言語：<a class="keyword" href="http://d.hatena.ne.jp/keyword/JVM">JVM</a>上でうごくものならだいたい動く(<a class="keyword" href="http://d.hatena.ne.jp/keyword/Java">Java</a>, <a class="keyword" href="http://d.hatena.ne.jp/keyword/JRuby">JRuby</a>, <a class="keyword" href="http://d.hatena.ne.jp/keyword/Scala">Scala</a>, Groovy, ...)</p></li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%DF%A5%C9%A5%EB%A5%A6%A5%A7%A5%A2">ミドルウェア</a>としてはCassandra, <a class="keyword" href="http://d.hatena.ne.jp/keyword/Tomcat">Tomcat</a>も当然動く</li>
<li>mrubyも動くらしいがELFがそのまま動くわけじゃない</li>
<li>PICK(?)をつけて共有ライブラリで・・・</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/memcached">memcached</a>, haproxyも動く</li>
<li>ファイルサイズは<a class="keyword" href="http://d.hatena.ne.jp/keyword/JVM">JVM</a>を入れるとかなりでかい</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/ZFS">ZFS</a> intent log ジャーナルみたいなもの</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Fedora">Fedora</a>向けのOpenJDKには一切手を入れていない</li>
</ul>


<p>要約すると1つのOS単位でAPサーバが気軽に立てられる、いかにも<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%E9%A5%A6%A5%C9">クラウド</a>指向なOSのようです。</p>

<h2>おわりに</h2>

<p>と、ここで18時も過ぎた頃でお開きとなりました。<br/>
この場で引き続き<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%E9%A5%C6%A5%F3%B8%EC">ラテン語</a>講座も開かれるようでしたが、僕はこのへんで失礼させていただきました。</p>

<p><a href="http://connpass.com/event/6166/">新・初級ラテン語リーディング(7) - connpass</a></p>

<p>今回勉強会に参加されていた方たちともいろいろなお話ができてとても刺激になりました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C3%D3%C2%DE%B1%D8">池袋駅</a>までの帰り道では勉強会に参加されていた方といろいろな世間話をさせていただきました。<br/>
さっそく<a class="keyword" href="http://d.hatena.ne.jp/keyword/Twitter">Twitter</a>でフォロー申請させていただきました。<br/>
いろいろとコアな方と交流出来て楽しかったです。</p>

<p>次回6/21（土）も続きがあるようですので、是非参加してみたいと思います。<br/>
今度は迷わないようにするぞ。</p>

<p>それではそれでは。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: WindowsでGitがパーミッションの変更を検知してしまうとき
BASENAME: 2014/05/19/224124
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 05/19/2014 22:41:24
CATEGORY: Git
CATEGORY: Windows
CATEGORY: SourceTree
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140519/20140519223915.png
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>から<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a>に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EA%A5%DD%A5%B8%A5%C8%A5%EA">リポジトリ</a>固めて持ってきたらこんなんなっちゃいました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140519/20140519223915.png" alt="f:id:wnoguchi0727:20140519223915p:plain" title="f:id:wnoguchi0727:20140519223915p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>ターミナル立ち上げて、</p>

<pre class="code" data-unlink>git config core.filemode false</pre>


<p>F5でリフレッシュしたら</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140519/20140519224112.png" alt="f:id:wnoguchi0727:20140519224112p:plain" title="f:id:wnoguchi0727:20140519224112p:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>すっきり。<code>.DS_Store</code> は本質と関係ないので無視。</p>

<h2>References</h2>

<ul>
<li><a href="http://madroom-project.blogspot.jp/2012/01/git.html">madroom project: gitでファイルのパーミッション変更を無視する</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: クレジットカードと銀行口座の関係に関する考察
BASENAME: 2014/05/05/155759
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 05/05/2014 15:57:59
CATEGORY: ORM
CATEGORY: クレジットカード
CATEGORY: 銀行
CATEGORY: ActiveRecord
-----
BODY:
<p>最近東京に引越ししました。
久しぶりの更新だなあ。</p>

<p>新たに銀行口座を作っていてふと思ったのですが、
クレジットカードってO/Rマッパーみたいなものだよなあと思いました。</p>

<p>今まで公共料金の決済に銀行の口座を指定していたのですが、生活圏が変わると当然口座も代わるわけです。</p>

<p>前の口座はもう使わないので、これを変えなきゃいけないのですが電気、水道、ガス、その他もろもろ全部手続きするのがすごく大変なわけです。</p>

<p>なんか、つまり今まで<a class="keyword" href="http://d.hatena.ne.jp/keyword/MySQL">MySQL</a>使ってたけど、今度からDBは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Oracle">Oracle</a>にしたくて、でも全部のクライアントにDBに直接接続するような設定がしてあったり、各DBエンジン固有の方言が含まれた生<a class="keyword" href="http://d.hatena.ne.jp/keyword/SQL">SQL</a>がベタ書きしてあって全部書き換えなきゃならない。
みたいな状況にすごく似てる。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AF%A5%EC%A5%B8%A5%C3%A5%C8%A5%AB%A1%BC%A5%C9%B2%F1%BC%D2">クレジットカード会社</a>は<a class="keyword" href="http://d.hatena.ne.jp/keyword/ActiveRecord">ActiveRecord</a>だったり、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Hibernate">Hibernate</a>とかいったORMや、共通のデータ入出力<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>に似ているなって思いました。</p>

<p>請求に関する<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D3%A5%B8%A5%CD%A5%B9%A5%ED%A5%B8%A5%C3%A5%AF">ビジネスロジック</a>はクレジットカードにまかせて、口座は純粋なデータを格納するDBに徹させることによって変更が少なくなるわけですね。</p>

<p>いくつも口座引き落としの書類を書いていて思ったぼくの妄想でした。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: lsof -i:69のシンタックス
BASENAME: 2014/03/16/014346
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/16/2014 01:43:46
CATEGORY: Linux
CATEGORY: コマンド
CATEGORY: ネットワーク
-----
BODY:
<p>次の例はリッスンしてるポート番号、またはサービス名を指定してプロセスを一覧表示するみたい。</p>

<pre class="code" data-unlink>% sudo lsof -i:69
COMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
launchd   1 root  108u  IPv6 0x4b902fe355279297      0t0  UDP *:tftp
launchd   1 root  111u  IPv4 0x4b902fe35672a667      0t0  UDP *:tftp</pre>


<p><strong>manページからの抜粋</strong></p>

<blockquote><p>Service names and port numbers may be combined in a list whose
entries are  separated  by  commas  and  whose  numeric  range
entries  are separated by minus signs.  There may be no embed-
ded spaces, and all service names must belong to the specified
protocol.   Since  service  names  may  contain embedded minus
signs, the starting entry of a range can't be a seoirvice  name;
it can be a port number, however.</p></blockquote>

<p>ちなみに、rootで実行しないと結果は空になるっぽい。</p>

<p>また、69はTFTPのポート番号なので以下のようにサービス名を指定してもいける。</p>

<pre class="code" data-unlink>% sudo lsof -i:tftp
COMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
launchd   1 root  108u  IPv6 0x4b902fe355279297      0t0  UDP *:tftp
launchd   1 root  111u  IPv4 0x4b902fe35672a667      0t0  UDP *:tftp</pre>


<h2>参考文献</h2>

<ul>
<li><a href="http://fujiyama443.blog102.fc2.com/blog-entry-9.html">linuxやるブログ lsof -i</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550にTFTPサーバーから設定ファイルを引っ張ってくる
BASENAME: 2014/03/16/013236
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/16/2014 01:32:36
CATEGORY: Cisco
CATEGORY: TFTP
CATEGORY: 設定
CATEGORY: 保存
CATEGORY: ネットワーク
-----
BODY:
<p>RTX1200みたいにUSBから設定ファイルを読み込む、保存するなんていう便利機能は本来オプションみたいなものなんだね。。。<br/>
慣れてくるとUSBの抜き差し面倒くさいし、TFTPのほうがいいかも。</p>

<pre class="code" data-unlink>Switch#copy tftp running-config
Address or name of remote host []? 192.168.11.2
Source filename []? switch-confg
Destination filename [running-config]? 
Accessing tftp://192.168.11.2/switch-confg...
Loading switch-confg from 192.168.11.2 (via Vlan1): !
[OK - 2635/5120 bytes]

2635 bytes copied in 0.612 secs</pre>


<p>で、 <code>running-config</code> の内容を <code>startup-config</code> に保存する。</p>

<pre class="code" data-unlink>Switch#copy running-config startup-config
Destination filename [startup-config]? 
Building configuration...
[OK]</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Raspberry PiをTFTPサーバーにする
BASENAME: 2014/03/16/012244
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/16/2014 01:22:44
CATEGORY: Raspberry Pi
CATEGORY: TFTP
CATEGORY: ネットワーク
-----
BODY:
<p>最近TFTPを触り始めたのですが、こんなの当たり前すぎてみんな誰も記事にしてないんですかねー・・・。<br/>
今回はRaspberry PiをTFTPサーバーにしてみました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140317/20140317083245.jpg" alt="f:id:wnoguchi0727:20140317083245j:plain" title="f:id:wnoguchi0727:20140317083245j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>以下のコマンドでインストール。</p>

<pre class="code" data-unlink>sudo apt-get -y update
sudo apt-get -y install tftpd-hpa</pre>


<p>でOKの、はずが</p>

<pre class="code" data-unlink>(snip)

Setting up tftpd-hpa (5.2-4) ...
tftpd user (tftp) already exists, doing nothing.

tftpd-hpa directory (/srv/tftp) already exists, doing nothing.
insserv: warning: script &#39;mathkernel&#39; missing LSB tags and overrides
[....] Starting HPA&#39;s tftpd: in.tftpdinvoke-rc.d: initscript tftpd-hpa, action &#34;start&#34; failed.
dpkg: error processing tftpd-hpa (--configure):
 subprocess installed post-installation script returned error exit status 71
Errors were encountered while processing:
 tftpd-hpa
E: Sub-process /usr/bin/dpkg returned an error code (1)</pre>


<p>エラーになった。。。</p>

<blockquote><p>Oh yes, there's this <a class="keyword" href="http://d.hatena.ne.jp/keyword/Debian">Debian</a> bug: <a href="http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=544089">http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=544089</a><br/>
<a href="http://forums.openmediavault.org/viewtopic.php?f=8&amp;t=352">OpenMediaVault • View topic - OpenMediaVault on the Home Media CE</a></p></blockquote>

<p>そのままだと<a class="keyword" href="http://d.hatena.ne.jp/keyword/ipv6">ipv6</a>で見に行こうとするのでだめらしい。<br/>
<code>--ipv4</code> を <code>TFTP_OPTIONS</code> に渡してあげないといけないようです。
というか、元記事にも書いてありましたね・・・。よく読まないと。</p>

<pre class="code" data-unlink>pi@raspberrypi ~ $ grep TFTP_OPTIONS /etc/default/tftpd-hpa
TFTP_OPTIONS=&#34;--secure&#34;</pre>


<p>たしかに <code>--ipv4</code> オプションがない。<br/>
<code>/etc/default/tftpd-hpa</code> を編集。</p>

<pre class="code" data-unlink>TFTP_OPTIONS=&#34;--secure&#34;
↓
TFTP_OPTIONS=&#34;--secure --ipv4&#34;</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%EF%A5%F3%A5%E9%A5%A4%A5%CA%A1%BC">ワンライナー</a>は以下。</p>

<pre class="code" data-unlink>sudo sed -i -e &#39;s/TFTP_OPTIONS=&#34;--secure&#34;/TFTP_OPTIONS=&#34;--secure --ipv4&#34;/g&#39; /etc/default/tftpd-hpa</pre>


<p>そしてぶっ壊れを修正してあげる。</p>

<pre class="code" data-unlink>pi@raspberrypi ~ $ sudo apt-get install -f
Reading package lists... Done
Building dependency tree       
Reading state information... Done
0 upgraded, 0 newly installed, 0 to remove and 7 not upgraded.
1 not fully installed or removed.
After this operation, 0 B of additional disk space will be used.
Setting up tftpd-hpa (5.2-4) ...
tftpd user (tftp) already exists, doing nothing.

tftpd-hpa directory (/srv/tftp) already exists, doing nothing.
insserv: warning: script &#39;mathkernel&#39; missing LSB tags and overrides
[ ok ] Starting HPA&#39;s tftpd: in.tftpd.</pre>


<p>立ち上がった。</p>

<p>デフォルトでは <code>/srv/tftp/</code> がTFTPサーバーのルートになります。
所有権を変えておく。</p>

<pre class="code" data-unlink>sudo chown pi. /srv/tftp/</pre>


<p>テストとして、WS-C3550のスイッチ設定ファイルをTFTPサーバーと化したRaspberry Pi(192.168.11.7)に送り込んでみる。</p>

<p>まずはTFTPサーバー側に空ファイルを用意しておく。こうしないとnot foundエラーになる。</p>

<pre class="code" data-unlink>pi@raspberrypi /srv/tftp $ touch switch-confg &amp;&amp; chmod 666 switch-confg</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>でスイッチ(192.168.11.50)に接続。</p>

<pre class="code" data-unlink>% telnet 192.168.11.50
Trying 192.168.11.50...
Connected to 192.168.11.50.
Escape character is &#39;^]&#39;.


User Access Verification

Password: Kerberos: No default realm defined for Kerberos!

Password: 
Switch&gt;enable
Password: 
Switch#copy run
Switch#copy running-config tftp
Address or name of remote host []? 192.168.11.7
Destination filename [switch-confg]? 
!!
2635 bytes copied in 7.320 secs (376 bytes/sec)</pre>


<p>送れたっぽいですね。<br/>
Raspberry Pi側で確認。</p>

<pre class="code" data-unlink>pi@raspberrypi /srv/tftp $ cat switch-confg | head

!
version 12.1
no service pad
service timestamps debug uptime
service timestamps log uptime
no service password-encryption
!
hostname Switch
!</pre>


<p>見れました。<br/>
こういう省電力で静音なマシンにわざわざ大層なサーバーをこしらえるまでもない、ちょっとしたユーティリティ的な仕事させるのっていいですね。</p>

<h2>参考文献</h2>

<ul>
<li><a href="http://www.jamesrobertson.eu/blog/2013/apr/18/installing-tftp-on-the-raspberry-pi.html">Installing TFTP on the Raspberry Pi [tftp] [raspberrypi] [rpi] [cisco7912g] [voip] | jamesrobertson.eu</a></li>
<li><a href="http://forums.openmediavault.org/viewtopic.php?f=8&amp;t=352">OpenMediaVault • View topic - OpenMediaVault on the Home Media CE</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550の設定ファイルをTFTPサーバーに保存する
BASENAME: 2014/03/15/234842
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 23:48:42
CATEGORY: Cisco
CATEGORY: ネットワーク
CATEGORY: TFTP
-----
BODY:
<p>はじめに、TFTPサーバー側に受け入れるファイルを用意しておきます。</p>

<pre class="code" data-unlink>% touch switch-confg &amp;&amp; chmod 666 switch-confg</pre>


<p>これをやらないと</p>

<pre class="code" data-unlink>TFTP: error code 1 received - File not found</pre>


<p>となってしまいます。では、 192.168.11.2 をTFTPサーバーに見立ててトライ。</p>

<pre class="code" data-unlink>Switch#copy running-config tftp
Address or name of remote host []? 192.168.11.2            
Destination filename [switch-confg]? 
!!
2635 bytes copied in 3.200 secs (878 bytes/sec)</pre>


<p>最初 not found になってしまったんですが、ファイル名って <code>switch-config</code> じゃなくて <code>switch-confg</code> なんですね。。。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550のIOSをTFTPサーバーにバックアップする
BASENAME: 2014/03/15/234036
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 23:40:36
CATEGORY: Cisco
CATEGORY: TFTP
CATEGORY: IOS
CATEGORY: バックアップ
CATEGORY: ネットワーク
-----
BODY:
<p>今までの前口上で一番やりたかったのはこの<a class="keyword" href="http://d.hatena.ne.jp/keyword/IOS">IOS</a>(Internetwork Operating System)のTFTPバックアップだったんですが、いろいろと手間取ってしまいました。
ですが、ここのエントリを書くまでに出荷時設定から<a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>の設定のところまでだいぶいい感じにこなれてきました。</p>

<p>ここまででスイッチに<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>が設定されていることを前提にします。</p>

<p>まずは<a class="keyword" href="http://d.hatena.ne.jp/keyword/IOS">IOS</a>のイメージの場所を調べる。</p>

<pre class="code" data-unlink>Switch#show flash

Directory of flash:/

    2  -rwx           0   Jan 01 1970 00:01:28  env_vars
    3  -rwx         342   Jan 01 1970 00:01:29  system_env_vars
    9  drwx         192   Mar 01 1993 00:03:40  c3550-i5q3l2-mz.121-8.EA1c

15998976 bytes total (10893824 bytes free)
Switch#cd c3550-i5q3l2-mz.121-8.EA1c
Switch#show flash

Directory of flash:/c3550-i5q3l2-mz.121-8.EA1c/

   10  drwx         640   Mar 01 1993 00:02:33  html
   21  -rwx     3290242   Mar 01 1993 00:03:40  c3550-i5q3l2-mz.121-8.EA1c.bin
   22  -rwx         252   Mar 01 1993 00:03:40  info

15998976 bytes total (10893824 bytes free)</pre>


<p>最初は<a class="keyword" href="http://d.hatena.ne.jp/keyword/flash">flash</a>のルートに置いてあるもんだとばかり思っていたのですが、どうも違うみたいでした。<br/>
今回は以下の場所においてありました。</p>

<pre class="code" data-unlink>/c3550-i5q3l2-mz.121-8.EA1c/c3550-i5q3l2-mz.121-8.EA1c.bin</pre>


<p>では、TFTPサーバーにコピーしてみます。<br/>
<code>192.168.11.2</code> はTFTPサーバーの<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>です。<br/>
FWが空いていることを確認するのを忘れずに。</p>

<pre class="code" data-unlink>Switch#copy flash tftp
Source filename [/c3550-i5q3l2-mz.121-8.EA1c/]? /c3550-i5q3l2-mz.121-8.EA1c/c3550-i5q3l2-mz.121-8.EA1c.bin
Address or name of remote host []? 192.168.11.2
Destination filename [c3550-i5q3l2-mz.121-8.EA1c.bin]? 
TFTP: error code 1 received - File not found

%Error opening tftp://192.168.11.2/c3550-i5q3l2-mz.121-8.EA1c.bin (Undefined error)</pre>


<p>ファイルが見つかりませんって言われてエラーになってしまいました。
ファイルがないって言うからコピー元のファイルのパスの指定の仕方が間違っていたのかと思って小一時間調べてしまいましたが、</p>

<blockquote><p>put コマンドで対象ファイル名を指定し、アップロードします。ただし、TFTP でファイルをアップロードする場合、アップロードしようとしているファイルが存在している必要があります（上書きしか出来ません）。TFTP サーバとして公開しているディレクトリに tmp.txt というファイルが無い状態で、tmp.txt をアップロードしようとすると、以下のエラーとなってしまいます。<br/>
<a href="http://d.hatena.ne.jp/eco31/20091028/1256687253">TFTP サーバを起動する - えこ日記</a></p></blockquote>

<p><strong>とのことで、ターゲットにファイルが存在しないとそもそもエラーになってしまうようです・・・。</strong></p>

<p>ところで、今回のTFTPサーバは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>を使用しています。
なので、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>側で所望のファイル名で空ファイルを作成します。</p>

<pre class="code" data-unlink>% touch /private/tftpboot/c3550-i5q3l2-mz.121-8.EA1c.bin</pre>


<p>今度はエラーメッセージが変わりました。</p>

<pre class="code" data-unlink>TFTP: error code 2 received - Access violation</pre>


<p>おそらく<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D1%A1%BC%A5%DF%A5%C3%A5%B7%A5%E7%A5%F3">パーミッション</a>がないだろうことなので</p>

<pre class="code" data-unlink>% chmod 666 /private/tftpboot/c3550-i5q3l2-mz.121-8.EA1c.bin</pre>


<p>再度トライ。</p>

<pre class="code" data-unlink>Switch#copy flash tftp                                           
Source filename [/c3550-i5q3l2-mz.121-8.EA1c/c3550-i5q3l2-mz.121-8.EA1c.bin]? 
Address or name of remote host []? 192.168.11.2   
Destination filename [c3550-i5q3l2-mz.121-8.EA1c.bin]? 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
(snip)
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
3290242 bytes copied in 13.352 secs (253095 bytes/sec)</pre>


<p>うまくいきましたー。</p>

<p>スイッチだけだけど、これでGNS3が使えるようになるかな？</p>

<h2>参考文献</h2>

<ul>
<li><a href="http://atnetwork.info/ccna/copy_ios_backup.html">IOSのバックアップ・アップグレード　CCNA実機で学ぶ</a></li>
<li><a href="http://www.cisco.com/cisco/web/support/JP/100/1008/1008064_190-j.html#concept7">コマンドライン インターフェイスを使用した Catalyst 3550 シリーズ スイッチでのソフトウェア イメージのアップグレード - Cisco Systems</a></li>
<li><a href="http://d.hatena.ne.jp/eco31/20091028/1256687253">TFTP サーバを起動する - えこ日記</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550を工場出荷時設定にする
BASENAME: 2014/03/15/231216
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 23:12:16
CATEGORY: Cisco
CATEGORY: ネットワーク
-----
BODY:

<pre class="code" data-unlink>Switch#write erase
Erasing the nvram filesystem will remove all files! Continue? [confirm] ←エンター
[OK]
Erase of nvram: complete
Switch#reload ←エンター

System configuration has been modified. Save? [yes/no]: no
Proceed with reload? [confirm] ←エンター

00:21:57: %SYS-5-RELOAD: Reload requested</pre>


<p>ポイントは "System configuration has been modified. Save?" の質問に no と答えること。
こうしないと running-config にメモリ上にある設定外書き込まれてまた再起動されてしまう？</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550でTelnetログインできるようにする
BASENAME: 2014/03/15/230652
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 23:06:52
CATEGORY: Cisco
CATEGORY: ネットワーク
CATEGORY: Telnet
CATEGORY: スイッチ
-----
BODY:
<p>スイッチに<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>も設定したし、よし、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>接続するぞって思いました。<br/>
（ほんとは<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>したい。）</p>

<pre class="code" data-unlink>% telnet 192.168.11.50
Trying 192.168.11.50...
Connected to 192.168.11.50.
Escape character is &#39;^]&#39;.


Password required, but none set
Connection closed by foreign host.</pre>


<p>蹴られました。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>のパスワード設定しないといけないようです。</p>

<p>シリアルコンソールで接続。回線の一覧を表示。
ちなみにコンソールポートの0番以外全部バーチャルターミナルみたい。
VTYが<a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>で使用される。</p>

<pre class="code" data-unlink>Switch&gt;enable
Switch#show line
   Tty Typ     Tx/Rx    A Modem  Roty AccO AccI   Uses   Noise  Overruns   Int
*    0 CTY              -    -      -    -    -      0       0     0/0       -
     1 VTY              -    -      -    -    -     17       0     0/0       -
     2 VTY              -    -      -    -    -      0       0     0/0       -
     3 VTY              -    -      -    -    -      0       0     0/0       -
     4 VTY              -    -      -    -    -      0       0     0/0       -
     5 VTY              -    -      -    -    -      0       0     0/0       -
     6 VTY              -    -      -    -    -      0       0     0/0       -
     7 VTY              -    -      -    -    -      0       0     0/0       -
     8 VTY              -    -      -    -    -      0       0     0/0       -
     9 VTY              -    -      -    -    -      0       0     0/0       -
    10 VTY              -    -      -    -    -      0       0     0/0       -
    11 VTY              -    -      -    -    -      0       0     0/0       -
    12 VTY              -    -      -    -    -      0       0     0/0       -
    13 VTY              -    -      -    -    -      0       0     0/0       -
    14 VTY              -    -      -    -    -      0       0     0/0       -
    15 VTY              -    -      -    -    -      0       0     0/0       -
    16 VTY              -    -      -    -    -      0       0     0/0       -</pre>


<p>設定方法は以下。</p>

<pre class="code" data-unlink>line vty 0 15
password hello
login
exit
enable password hello
exit</pre>


<p>一番最後の <code>enable password</code> がないと<a class="keyword" href="http://d.hatena.ne.jp/keyword/Telnet">Telnet</a>ログインできても特権EXECモードへは移行できない。<br/>
本当は暗号化したほうがいい。</p>

<h2>参考文献</h2>

<ul>
<li><a href="http://www.cisco.com/cisco/web/support/JP/100/1007/1007870_config-telnet-j.html">エラー メッセージを回避するための Cisco ルータでの Telnet パスワードの設定例 - Cisco Systems</a></li>
<li><a href="http://www.cisco.com/cisco/web/support/JP/100/1004/1004178_configpasswords.html">Cisco ルータでの Telnet、コンソールおよび AUX ポートのパスワード設定例 - Cisco Systems</a></li>
<li><a href="http://www.infraexpert.com/study/ciscorouter6.html">Ciscoルータをはじめから - ルータの基本的なセキュリティ設定</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS XでTFTPサーバーを起動する
BASENAME: 2014/03/15/222459
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 22:24:59
CATEGORY: ネットワーク
CATEGORY: Mac
CATEGORY: TFTP
-----
BODY:
<p>Mavericksです。</p>

<p>初めにサービスの設定ファイルを見てみる。</p>

<pre class="code" data-unlink>% cat /System/Library/LaunchDaemons/tftp.plist
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt;
&lt;!DOCTYPE plist PUBLIC &#34;-//Apple Computer//DTD PLIST 1.0//EN&#34; &#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&#34;&gt;
&lt;plist version=&#34;1.0&#34;&gt;
&lt;dict&gt;
    &lt;key&gt;Disabled&lt;/key&gt;
    &lt;true/&gt;
    &lt;key&gt;Label&lt;/key&gt;
    &lt;string&gt;com.apple.tftpd&lt;/string&gt;
    &lt;key&gt;ProgramArguments&lt;/key&gt;
    &lt;array&gt;
        &lt;string&gt;/usr/libexec/tftpd&lt;/string&gt;
        &lt;string&gt;-i&lt;/string&gt;
        &lt;string&gt;/private/tftpboot&lt;/string&gt;
    &lt;/array&gt;
    &lt;key&gt;inetdCompatibility&lt;/key&gt;
    &lt;dict&gt;
        &lt;key&gt;Wait&lt;/key&gt;
        &lt;true/&gt;
    &lt;/dict&gt;
    &lt;key&gt;InitGroups&lt;/key&gt;
    &lt;true/&gt;
    &lt;key&gt;Sockets&lt;/key&gt;
    &lt;dict&gt;
        &lt;key&gt;Listeners&lt;/key&gt;
        &lt;dict&gt;
            &lt;key&gt;SockServiceName&lt;/key&gt;
            &lt;string&gt;tftp&lt;/string&gt;
            &lt;key&gt;SockType&lt;/key&gt;
            &lt;string&gt;dgram&lt;/string&gt;
        &lt;/dict&gt;
    &lt;/dict&gt;
&lt;/dict&gt;
&lt;/plist&gt;</pre>


<p>まずはサンプルのファイルを用意。</p>

<pre class="code" data-unlink>% cat &lt;&lt;EOF | &gt;/private/tftpboot/hello.txt
Hello, and
GoodBye.
EOF</pre>


<p>まずはつないでみる。</p>

<pre class="code" data-unlink>% tftp localhost
tftp&gt; status
Connected to localhost.
Mode: netascii Verbose: off Tracing: off
Rexmt-interval: 5 seconds, Max-timeout: 25 seconds
tftp&gt; quit</pre>


<p><code>Connected</code> って出ておっ、つながったかなっておもうじゃないですか。</p>

<pre class="code" data-unlink>% tftp localhost
tftp&gt; get hello.txt
Transfer timed out.

tftp&gt; quit</pre>


<p>つながったと思った？残念、つながってませんでした！</p>

<pre class="code" data-unlink>% sudo lsof -i:69</pre>


<p>空っぽなのです。</p>

<p>サービスを立ち上げます。</p>

<pre class="code" data-unlink>% sudo launchctl load -w /System/Library/LaunchDaemons/tftp.plist
% sudo lsof -i:69                                                (git)-[master]
COMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
launchd   1 root  108u  IPv6 0x4b902fe356b26297      0t0  UDP *:tftp
launchd   1 root  110u  IPv4 0x4b902fe35704aec7      0t0  UDP *:tftp</pre>


<p>今度こそ立ち上がったっぽいです。</p>

<pre class="code" data-unlink>% tftp localhost
tftp&gt; get hello.txt
Received 26 bytes in 0.0 seconds
tftp&gt; quit</pre>


<p>中身を確認。</p>

<pre class="code" data-unlink>% pwd           
/Users/noguchiwataru/
% cat hello.txt
Hello, and
GoodBye.</pre>


<p>用が済んだらサービスを停止する。</p>

<pre class="code" data-unlink>% sudo launchctl unload -w /System/Library/LaunchDaemons/tftp.plist
% sudo lsof -i:69</pre>


<h2>参考文献</h2>

<ul>
<li><a href="http://d.hatena.ne.jp/eco31/20091028/1256687253">TFTP サーバを起動する - えこ日記</a></li>
<li><a href="http://kb.promise.com/KnowledgebaseArticle10139.aspx">How do I enable a TFTP server on Mac OS X</a></li>
<li><a href="http://hints.macworld.com/article.php?story=20070218233806794">10.4: TFTPd configuration and usage - Mac OS X Hints</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: WS-C3550のIPアドレスを設定する
BASENAME: 2014/03/15/205100
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 20:51:00
CATEGORY: Cisco
CATEGORY: ネットワーク
CATEGORY: スイッチ
-----
BODY:
<p>出荷時設定の段階から</p>

<p><code>conf ter</code> でもいける。</p>

<pre class="code" data-unlink>enable
configure terminal
interface Vlan 1
ip address 192.168.11.50
no shutdown
exit
ip route 0.0.0.0 0.0.0.0 192.168.11.1</pre>


<p><code>no shutdown</code> を忘れると全くつながらないので注意。</p>

<p>同じサブネットの場合は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%D5%A5%A9%A5%EB%A5%C8%A5%B2%A1%BC%A5%C8%A5%A6%A5%A7%A5%A4">デフォルトゲートウェイ</a>を指定しなくてもいける。</p>

<pre class="code" data-unlink>ping 192.168.11.2</pre>


<ul>
<li><a href="http://www.cisco.com/cisco/web/support/JP/100/1008/1008064_190-j.html#concept7">コマンドライン インターフェイスを使用した Catalyst 3550 シリーズ スイッチでのソフトウェア イメージのアップグレード - Cisco Systems</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliからEC2インスタンスを作成する(Amazon Linux + EBS + Elastic IP)
BASENAME: 2014/03/15/092101
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 09:21:01
CATEGORY: AWS
CATEGORY: awscli
CATEGORY: Amazon EC2
CATEGORY: EBS
-----
BODY:
<ul>
<li>jqコマンドがあるととても便利です。</li>
<li>事前にセキュリティグループとキーペア、Elastic IPは作成・割り当て済みとします。</li>
</ul>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>の作成</h3>

<pre class="code" data-unlink>aws ec2 run-instances --image-id ami-0d13700c --count 1 --instance-type t1.micro --key-name default --security-groups webserver | jq &#39;.&#39;</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>IDを調べる</h3>

<p>さっき起動した<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>IDを調べます。</p>

<pre class="code" data-unlink>aws ec2 describe-instances | jq &#39;.Reservations [] .Instances [] .InstanceId&#39;</pre>


<h3>Elastic IPの一覧を調べる</h3>

<pre class="code" data-unlink>aws ec2 describe-addresses| jq &#39;.&#39;</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>にElastic IPを割り当て</h3>

<pre class="code" data-unlink>aws ec2 associate-address --instance-id i-12345678 --public-ip 111.111.111.111</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>のAZ(Availability Zone)を調べる</h3>

<p>EBSを作成するときに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>のAZが違うとアタッチできないようです。</p>

<pre class="code" data-unlink>% aws ec2 describe-instances --instance-ids i-12345678 | jq &#39;.Reservations [] .Instances [] .Placement .AvailabilityZone&#39;
&#34;ap-northeast-1a&#34;</pre>


<h3>EBSボリューム作成</h3>

<p>2GBのボリュームをap-northeast-1aに作成します。</p>

<pre class="code" data-unlink>aws ec2 create-volume --size 2 --availability-zone ap-northeast-1a</pre>


<h3>作成されたボリュームのIDを調べる</h3>

<p>2番目(1)のボリュームIDを参照します。</p>

<pre class="code" data-unlink>aws ec2 describe-volumes | jq &#39;.Volumes [1] .VolumeId&#39;
&#34;vol-b5d722ab&#34;</pre>


<h3>EBSボリュームのアタッチ</h3>

<pre class="code" data-unlink>aws ec2 attach-volume --volume-id vol-b5d722ab --instance-id i-12345678 --device xvdf</pre>


<p>EC2<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>に<a class="keyword" href="http://d.hatena.ne.jp/keyword/SSH">SSH</a>接続してボリュームをフォーマットして<a class="keyword" href="http://d.hatena.ne.jp/keyword/ext4">ext4</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A1%A5%A4%A5%EB%A5%B7%A5%B9%A5%C6%A5%E0">ファイルシステム</a>を作成します。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D1%A1%BC%A5%C6%A5%A3%A5%B7%A5%E7%A5%F3">パーティション</a>作成。</p>

<pre class="code" data-unlink>fdisk /dev/xvdf
n
p
1
Enter
Enter
w</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/ext4">ext4</a><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A1%A5%A4%A5%EB%A5%B7%A5%B9%A5%C6%A5%E0">ファイルシステム</a>を作成。</p>

<pre class="code" data-unlink>mkfs.ext4 /dev/xvdf1</pre>


<p>マウント先を <code>/data</code> にします。</p>

<pre class="code" data-unlink>mkdir /data</pre>


<p>fstab編集。</p>

<pre class="code" data-unlink>vi /etc/fstab
/dev/xvdf1  /data       ext4    defaults,noatime  1   1</pre>


<p>マウント実行。</p>

<pre class="code" data-unlink>mount -a</pre>


<p>マウントされたか確認します。</p>

<pre class="code" data-unlink>[root@ip-172-31-5-123 ~]# df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/xvda1      7.9G  1.2G  6.7G  16% /
tmpfs           298M     0  298M   0% /dev/shm
/dev/xvdf1      2.0G   35M  1.9G   2% /data</pre>


<h3>おわりに</h3>

<p>大体終わりました。
ここではswapを作成していないのが問題です。</p>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を停止する</h3>

<pre class="code" data-unlink>aws ec2 stop-instances --instance-ids i-12345678 | jq &#39;.&#39;</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を起動する</h3>

<pre class="code" data-unlink>aws ec2 start-instances --instance-ids i-12345678 | jq &#39;.&#39;</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: awscliでAvailability Zoneの一覧を調べる
BASENAME: 2014/03/15/090959
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 09:09:59
CATEGORY: awscli
CATEGORY: AWS
CATEGORY: jq
-----
BODY:
<ul>
<li>jqコマンドを使っています。</li>
</ul>


<pre class="code" data-unlink>% aws ec2 describe-availability-zones --region ap-northeast-1 | jq &#39;.&#39;
{
  &#34;AvailabilityZones&#34;: [
    {
      &#34;ZoneName&#34;: &#34;ap-northeast-1a&#34;,
      &#34;Messages&#34;: [],
      &#34;RegionName&#34;: &#34;ap-northeast-1&#34;,
      &#34;State&#34;: &#34;available&#34;
    },
    {
      &#34;ZoneName&#34;: &#34;ap-northeast-1c&#34;,
      &#34;Messages&#34;: [],
      &#34;RegionName&#34;: &#34;ap-northeast-1&#34;,
      &#34;State&#34;: &#34;available&#34;
    }
  ]
}</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Linuxで秘密鍵から公開鍵を生成する
BASENAME: 2014/03/15/085731
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/15/2014 08:57:31
CATEGORY: Linux
CATEGORY: SSH
CATEGORY: 公開鍵
CATEGORY: 秘密鍵
-----
BODY:
<p>いつも忘れるのでメモ。</p>

<pre class="code" data-unlink>ssh-keygen -y -f ~/.ssh/private_key.pem</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Amazon Linux(2013.09)にnginxとPHPをインストールする
BASENAME: 2014/03/10/215137
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/10/2014 21:51:37
CATEGORY: AWS
CATEGORY: nginx
CATEGORY: PHP
CATEGORY: Amazon Linux
-----
BODY:
<p>一昨日あたりからnginxを始めました。</p>

<h2>インストール</h2>

<pre class="code" data-unlink>yum -y install nginx
yum -y install php-fpm
yum -y install php-mysql php-mbstring php-mcrypt</pre>


<h3>ドキュメントルートディレクトリを用意する</h3>

<pre class="code" data-unlink>mkdir -p /var/www/html</pre>


<h3>/etc/nginx/nginx.conf</h3>

<pre class="code" data-unlink>
        location / {
            root   /var/www/html;
            index  index.php index.html index.htm;
        }


        location ~ \.php$ {
            fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/html$fastcgi_script_name;
            include        fastcgi_params;
        }</pre>


<h3>/etc/<a class="keyword" href="http://d.hatena.ne.jp/keyword/php">php</a>-fpm.d/www.conf</h3>

<pre class="code" data-unlink>listen = 127.0.0.1:9000
↓
listen = /var/run/php-fpm/php-fpm.sock


;listen.owner = nobody
;listen.group = nobody
;listen.mode = 0666
↓
listen.owner = nginx
listen.group = nginx
listen.mode = 0664


; RPM: apache Choosed to be able to access some dir as httpd
user = apache
; RPM: Keep a group allowed to write in log dir.
group = apache
↓
; RPM: apache Choosed to be able to access some dir as httpd
user = nginx
; RPM: Keep a group allowed to write in log dir.
group = nginx</pre>


<h3>起動</h3>

<pre class="code" data-unlink>service php-fpm start
service nginx start
chkconfig php-fpm on
chkconfig nginx on</pre>


<h3>動作確認</h3>

<pre class="code" data-unlink>cat &lt;&lt;EOF &gt;/var/www/html/index.php
&lt;?php
phpinfo();
EOF</pre>


<h3>蛇足</h3>

<p>ちなみに、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon">Amazon</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a>のバージョン確認は</p>

<pre class="code" data-unlink>[root@ip-xxx-xxx-xxx-xxx html]# cat /etc/system-release
Amazon Linux AMI release 2013.09</pre>


<h2>参考文献</h2>

<ul>
<li><a href="http://codingsteps.com/install-php-fpm-nginx-mysql-on-ec2-with-amazon-linux-ami/">Install PHP-FPM, Nginx, and MySQL on Amazon Linux AMI - Coding Steps</a></li>
<li><a href="http://qiita.com/santos5150@github/items/8f9178610f345fa97727">CentOS-6.3 + nginx + php + php-fpm + MySQL-5.5 + Symfony-2.1 - Qiita</a></li>
<li><a href="http://qiita.com/semind/items/f49661dfdbd8c7e34956">EC2 - Amazon Linux のバージョンを確認する方法 - Qiita</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: NATディスクリプタの設定 - RTX1200
BASENAME: 2014/03/01/003637
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 03/01/2014 00:36:37
CATEGORY: RTX1200
CATEGORY: ネットワーク
-----
BODY:
<p>PPPoE接続のときのお話。</p>

<pre class="code" data-unlink>nat descriptor type 1 masquerade
nat descriptor address innter 1 192.168.0.1-192.168.0.254
nat descriptor address outer 1 ipcp
# 以下はIPsecに関する静的NATディスクリプタ
nat descriptor masquerade static 1 1 192.168.0.1 udp 500
nat descriptor masquerade static 1 2 192.168.0.1 esp</pre>


<p>以下はうまくいった。</p>

<pre class="code" data-unlink>nat descriptor address outer 1 ipcp</pre>


<p>以下はうまくいかない。</p>

<pre class="code" data-unlink>nat descriptor address outer 1 primary</pre>


<p>以下を見ると明白だ。</p>

<ul>
<li><a href="http://www.rtpro.yamaha.co.jp/RT/manual/rt-common/nat/nat_descriptor_address_outer.html">24.3 NAT 処理の外側 IP アドレスの設定</a></li>
</ul>


<pre class="code" data-unlink>nat descriptor address outer 1 primary</pre>


<p>のコマンドを叩いた瞬間に<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>が途切れることが分かった。<br/>
だからといって、その場で</p>

<pre class="code" data-unlink>nat descriptor address outer 1 ipcp</pre>


<p>に戻しても<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>がもどらないので困った。<br/>
<strong>こういう時はRTX1200を再起動するか、いったんLANケーブルを抜いてまた差すといい。</strong></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: PPPoEの設定（固定IP環境） - RTX1200
BASENAME: 2014/02/26/232712
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/26/2014 23:27:12
CATEGORY: RTX1200
CATEGORY: ネットワーク
-----
BODY:
<ul>
<li>ppインタフェースは<a class="keyword" href="http://d.hatena.ne.jp/keyword/ipsec">ipsec</a>の場合はPPPoEの時のみ使用する。</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/VPN">VPN</a>に<a class="keyword" href="http://d.hatena.ne.jp/keyword/PPTP">PPTP</a>を使用するときはこの限りではない。</li>
</ul>


<pre class="code" data-unlink>pp select 1
pppoe auto connect on
pppoe auto disconnect off
pppoe use lan2
pp auth accept pap chap
pp auth myname ユーザID パスワード
pp always-on on
ppp lcp mru on 1454
ppp ccp type none
ip pp address xxx.xxx.xxx.xxx/32
ppp ipcp msext on
ip pp mtu 1454
ip pp nat descriptor 1
pp enable 1
ip route default gateway pp 1</pre>


<h3>pp1から抜け出したいとき</h3>

<pre class="code" data-unlink>pp1# pp select none
#</pre>


<p>インターネット接続はすぐに反映されないみたいなので</p>

<pre class="code" data-unlink>restart</pre>


<h3>インターネット接続試験</h3>

<p>まずはppインタフェースの接続状況を確認しましょう。</p>

<pre class="code" data-unlink># show status pp 1
PP[01]:
Description: 
Current PPPoE session status is Connected.
Access Concentrator: BAS
1 minute 49 seconds  connection.
Received: 14 packets [840 octets]  Load: 0.0%
Transmitted: 13 packets [511 octets]  Load: 0.0%
PPP Cofigure Options
    LCP Local: Magic-Number MRU, Remote: CHAP Magic-Number MRU
    IPCP Local: Primary-DNS(xxx.xxx.xxx.xxx) Secondary-DNS(xxx.xxx.xxx.xxx), Remo
te: IP-Address
    PP IP Address Local: xxx.xxx.xxx.xxx, Remote: xxx.xxx.xxx.xxx
    CCP: None</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を打ってみる。</p>

<pre class="code" data-unlink># ping 8.8.8.8 
received from 8.8.8.8: icmp_seq=1 ttl=47 time=56.253ms
received from 8.8.8.8: icmp_seq=2 ttl=47 time=47.024ms
received from 8.8.8.8: icmp_seq=3 ttl=47 time=50.333ms

4 packets transmitted, 3 packets received, 25.0% packet loss
round-trip min/avg/max = 47.024/51.203/56.253 ms</pre>




<pre class="code" data-unlink># ping www.google.co.jp 
received from nrt04s07-in-f24.1e100.net (173.194.126.216): icmp_seq=0 ttl=53 time=22.926ms
received from nrt04s07-in-f24.1e100.net (173.194.126.216): icmp_seq=1 ttl=53 time=24.834ms
received from nrt04s07-in-f24.1e100.net (173.194.126.216): icmp_seq=2 ttl=53 time=22.070ms

3 packets transmitted, 3 packets received, 0.0% packet loss
round-trip min/avg/max = 22.070/23.276/24.834 ms</pre>


<p>当然ですが、この段階ではNAT<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%B9%A5%AF%A5%EA%A5%D7%A5%BF">ディスクリプタ</a>を記述していないのでRTX1200にぶら下がっている機器からはインターネットに<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を打つことはできません。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Mac OS Xでプログラミングしたい
BASENAME: 2014/02/20/213154
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/20/2014 21:31:54
CATEGORY: Mac
CATEGORY: プログラミング
CATEGORY: Objective-C
CATEGORY: メモ
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>で純粋に<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>プログラミングがしたくて調べてる。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows">Windows</a>で<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>プログラミングしたい時と同じで、そのものズバリのものが少ない。<br/>
調べると<a class="keyword" href="http://d.hatena.ne.jp/keyword/iOS">iOS</a>とか<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3">スマートフォン</a>系の記事がすごく多くヒットするんだけど、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>自体での<a class="keyword" href="http://d.hatena.ne.jp/keyword/GUI">GUI</a>プログラミングがなかなかみつからない。</p>

<ul>
<li><a href="http://libro.tuyano.com/index2?id=524006">初心者のためのObjective-Cプログラミング入門</a></li>
<li><a href="http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q1124396591">僕はXcodeでMacOS用ソフトのプログラミングがしたいんですが、どのような順番で、... - Yahoo!知恵袋</a></li>
<li><a href="http://www.atmarkit.co.jp/ait/articles/1303/13/news023.html">iOS SDKで始めるObjective-C入門（4）：Xcode／Objective-Cで始めるプログラミング基本のキ (1/2) - ＠IT</a></li>
</ul>


<p>何気に調べてたら知り合いが<a class="keyword" href="http://d.hatena.ne.jp/keyword/%40IT">@IT</a>で記事を書かれてた。<br/>
出世してるなあ。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Macのzshでawscliの補完を有効化する
BASENAME: 2014/02/19/222928
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/19/2014 22:29:28
CATEGORY: zsh
CATEGORY: AWS
CATEGORY: Mac
CATEGORY: awscli
-----
BODY:
<p>最近、ローカルのラップトップマシンは順次、<a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a>に乗り換え始めたんだけど、
<a class="keyword" href="http://d.hatena.ne.jp/keyword/Bash">Bash</a>と同じノリでawscliの補完を有効化しようとして</p>

<pre class="code" data-unlink>complete -C aws_completer aws</pre>


<p>としてsourceしたらエラーになってしまった。</p>

<pre class="code" data-unlink>/Users/noguchiwataru/.zshrc:13: command not found: complete</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a>に関しては <code>aws_zsh_completer.sh</code> というのを読み込むらしいので、
findで探してみたらパスが通っているところにあった</p>

<pre class="code" data-unlink>% find / -name aws_zsh_completer.sh 2&gt;/dev/null
/usr/local/bin/aws_zsh_completer.sh</pre>


<p>なので</p>

<pre class="code" data-unlink><span class="synComment"># ~/.zshrc</span>

<span class="synStatement">export</span> AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
<span class="synStatement">export</span> AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
<span class="synStatement">export</span> AWS_DEFAULT_REGION=ap-northeast-1
aws_zsh_completer.sh
</pre>


<p>を <code>.zshrc</code> に書いてsourceすればOKかな？</p>

<pre class="code" data-unlink>[noguchiwataru@Macintosh] ~
% source ~/.zshrc
/usr/local/bin/aws_zsh_completer.sh: line 18: autoload: command not found
/usr/local/bin/aws_zsh_completer.sh: line 19: compinit: command not found
/usr/local/bin/aws_zsh_completer.sh: line 20: bashcompinit: command not found</pre>


<p>だめだった。。。<br/>
よくよく考えたら<a class="keyword" href="http://d.hatena.ne.jp/keyword/zsh">zsh</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%A7%A5%EB%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8">シェルスクリプト</a>内で別シェルとしてさらに<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%AF%A5%EA%A5%D7%A5%C8">スクリプト</a>実行したら意味が無いので、<br/>
ここでは <code>aws_zsh_completer.sh</code> をsourceするのが正しいですよね。</p>

<pre class="code" data-unlink><span class="synComment"># ~/.zshrc</span>

<span class="synStatement">export</span> AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
<span class="synStatement">export</span> AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
<span class="synStatement">export</span> AWS_DEFAULT_REGION=ap-northeast-1
<span class="synStatement">source</span> aws_zsh_completer.sh
</pre>


<p>今度はエラーでなかったけど、あれ、補完効かないぞ。。。ぼくの幻覚なのかな。。。<br/>
でもみんなこの書き方で動いているっぽいし、なんでだろう。</p>

<p><strong>で、よく調べてみたら始めの方に記述していたのがいけなかった。<br/>
<code>.zshrc</code> の一番最後の方に書いたらうまく動くようになった。</strong></p>

<pre class="code" data-unlink><span class="synComment"># ~/.zshrc</span>

<span class="synComment"># (snip)</span>

<span class="synStatement">export</span> AWS_ACCESS_KEY_ID=AKIAIOSFODNN7EXAMPLE
<span class="synStatement">export</span> AWS_SECRET_ACCESS_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
<span class="synStatement">export</span> AWS_DEFAULT_REGION=ap-northeast-1
<span class="synStatement">source</span> /usr/<span class="synType">local</span>/bin/aws_zsh_completer.sh
complete -C aws_completer aws

<span class="synComment"># [EOF]</span>
</pre>


<h2>参考文献</h2>

<ul>
<li><a href="https://github.com/aws/aws-cli">aws/aws-cli</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: NTPリフレクション関係リンクまとめ
BASENAME: 2014/02/19/212028
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/19/2014 21:20:28
CATEGORY: セキュリティ
CATEGORY: ネットワーク
-----
BODY:
<h2>キーワード</h2>

<p>monlist, BCP38（イングレスフィルタリング）, BCP84（<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>リフレクション）</p>

<h2>わかりやすそうな解説</h2>

<ul>
<li><a href="http://wazanova.jp/items/893">NTPベースのDDoS攻撃を理解する - ワザノバ | wazanova</a></li>
<li><a href="http://www.vincentina.net/?p=3947">NTPの脆弱性についてのお知らせが来た | たけけんのサーバー勉強日記</a></li>
</ul>


<h2>オフィシャル的な</h2>

<ul>
<li><a href="http://www.jpcert.or.jp/at/2014/at140001.html">ntpd の monlist 機能を使った DDoS 攻撃に関する注意喚起</a></li>
<li><a href="http://www.sakura.ad.jp/news/sakurainfo/newsentry.php?id=861">【重要】NTPの脆弱性について | さくらインターネット</a></li>
<li><a href="http://www.team-cymru.org/ReadingRoom/Templates/secure-ntp-template.html">Secure NTP Template - Team Cymru</a></li>
</ul>


<h2>おべんきょ</h2>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/BCP">BCP</a>(Business Continuity Plan)</li>
<li><a href="http://www.ipa.go.jp/security/manager/protect/bcp/">IPA 独立行政法人 情報処理推進機構：情報セキュリティ事業継続計画（BCP）とは</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: セキュリティ関係でFeedlyに登録しておくべきもの
BASENAME: 2014/02/19/211515
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/19/2014 21:15:15
CATEGORY: セキュリティ
CATEGORY: インフラ
-----
BODY:
<ul>
<li><a href="http://www.jpcert.or.jp/">JPCERT コーディネーションセンター</a></li>
</ul>


<p>自戒の念を込めて、以下のフィードを<a class="keyword" href="http://d.hatena.ne.jp/keyword/Feedly">Feedly</a>にでも登録しておこう。</p>

<ul>
<li><a href="http://www.jpcert.or.jp/rss/jpcert.rdf">http://www.jpcert.or.jp/rss/jpcert.rdf</a></li>
<li><a href="http://www.jpcert.or.jp/rss/whatsnew.rdf">http://www.jpcert.or.jp/rss/whatsnew.rdf</a></li>
<li><a href="http://www.jpcert.or.jp/rss/jpcert-all.rdf">http://www.jpcert.or.jp/rss/jpcert-all.rdf</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Raspberry Pi入門 - 起動まで
BASENAME: 2014/02/19/015219
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/19/2014 01:52:19
CATEGORY: Raspberry Pi
CATEGORY: 組み込み
IMAGE: http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216153919.jpg
-----
BODY:
<p>Raspberry Piを以前購入して、肥やしになりかけていたので、思い立って起動するところまでやってみました。</p>

<h2>必要なもの</h2>

<ul>
<li>Raspberry Pi(Model B)<br/>
以下の話は全部Model Bであることを前提としています。</li>
<li>ディスプレイ（<a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>, DVIいずれか対応必須）</li>
<li>キーボード</li>
<li>マウス</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>-DVI変換ケーブル（<a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>が繋がるテレビがあれば<a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>のままでも可）</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%D5%A5%A9%A5%F3">スマートフォン</a>や<a class="keyword" href="http://d.hatena.ne.jp/keyword/kindle">kindle</a>等の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B9%A5%DE%A1%BC%A5%C8%A5%C7%A5%D0%A5%A4%A5%B9">スマートデバイス</a>用の電源直結の充電ケーブル（micro USB タイプA）<br/>
これで給電します。</li>
<li>ポート数が Model B でも2つしかないので、キーボードとマウスでいっぱいになっちゃいます。<br/>
なので<a class="keyword" href="http://d.hatena.ne.jp/keyword/USB%A5%CF%A5%D6">USBハブ</a>もあると便利です。バスパワーではなく、セルフパワータイプの<a class="keyword" href="http://d.hatena.ne.jp/keyword/USB%A5%CF%A5%D6">USBハブ</a>を購入することを強く推奨。</li>
<li>LANケーブル（ネットに繋がないとほんとできることが少ないのでつないでおいて損はないです。ちなみに<a class="keyword" href="http://d.hatena.ne.jp/keyword/DHCP">DHCP</a>環境なら自動的に<a class="keyword" href="http://d.hatena.ne.jp/keyword/IP%A5%A2%A5%C9%A5%EC%A5%B9">IPアドレス</a>まで設定してネットに勝手につながるようになるのでとても便利です。いたれりつくせりです。）</li>
<li>SDカードに書き込む母艦となるPC。ここでは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>を使用しています。</li>
</ul>


<h2>操作メモ</h2>

<p>では、起動までのメモをば。</p>

<p>パッケージの外観はこんなの。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216153919.jpg" alt="f:id:wnoguchi0727:20140216153919j:plain" title="f:id:wnoguchi0727:20140216153919j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>開けたら以下の様な感じになります。ほんとにカードサイズでコンパクトでびっくりしました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216153947.jpg" alt="f:id:wnoguchi0727:20140216153947j:plain" title="f:id:wnoguchi0727:20140216153947j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>SDカードは16GBのものを使います。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216154517.jpg" alt="f:id:wnoguchi0727:20140216154517j:plain" title="f:id:wnoguchi0727:20140216154517j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>以下は最低限必要な配線をしたところ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216165233.jpg" alt="f:id:wnoguchi0727:20140216165233j:plain" title="f:id:wnoguchi0727:20140216165233j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<ul>
<li>一番上の白いmicro USBケーブルは<a class="keyword" href="http://d.hatena.ne.jp/keyword/kindle">kindle</a>のACアダプタとつながっています。<br/>
これぐらいの電力の気合がないと立ち上がらないのかな。<br/>
ちなみに、このケーブルを挿した瞬間に起動してしまうので、一番最後に挿し込みます。</li>
<li>左の横っちょについてるのは<a class="keyword" href="http://d.hatena.ne.jp/keyword/HDMI">HDMI</a>ケーブルです。</li>
<li>左下の黒いケーブルはわかりにくいですが、LANケーブルです。<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D6%A5%ED%A1%BC%A5%C9%A5%D0%A5%F3%A5%C9%A5%EB%A1%BC%A5%BF">ブロードバンドルータ</a>ーを介してネットにつながっています。</li>
<li>下中央のケーブルは右側のセルフパワー<a class="keyword" href="http://d.hatena.ne.jp/keyword/USB%A5%CF%A5%D6">USBハブ</a>につながっていて、キーボードとマウスがつながっています。</li>
<li>サウンドは考慮していません。</li>
</ul>


<p>さて、ここまでで肝心のOSをインストールしていません。ここでは <a href="http://www.raspbian.org/">Raspbian</a> のイメージをSDカードに書き込みます。RaspbianはRaspberry Pi用に<a class="keyword" href="http://d.hatena.ne.jp/keyword/Debian">Debian</a>から派生したものっぽいです。<br/>
イメージは以下のサイトからダウンロードします。</p>

<ul>
<li><a href="http://www.raspberrypi.org/downloads">Downloads | Raspberry Pi</a></li>
</ul>


<p>まずはSDカードを差し込んで、容量からどのディスクデバイス名として認識されるか確認します。</p>

<pre class="code" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~/Documents/repositories/github/doc/raspberry-pi
% diskutil list
/dev/disk0
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:      GUID_partition_scheme                        *500.3 GB   disk0
   1:                        EFI EFI                     209.7 MB   disk0s1
   2:                  Apple_HFS Macintosh HD            499.4 GB   disk0s2
   3:                 Apple_Boot Recovery HD             650.0 MB   disk0s3
/dev/disk1
   #:                       TYPE NAME                    SIZE       IDENTIFIER
   0:     FDisk_partition_scheme                        *15.8 GB    disk1
   1:             Windows_FAT_32 NO NAME                 15.8 GB    disk1s1</pre>


<p>16GBなので <code>/dev/disk1</code> がSDカードに該当します。このへんはddで書き込むディスクをミスると大変なことになるので注意します。<br/>
デバイス名がわかったらアンマウントします。Finderから取り外しても大丈夫です。</p>

<pre class="code" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~/Documents/repositories/github/doc/raspberry-pi
% diskutil unmountdisk /dev/disk1
Unmount of all volumes on disk1 was successful</pre>


<p>そろそろイメージのダウンロードが終わった頃なので、zipを展開して、</p>

<pre class="code" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~/Documents/repositories/github/doc/raspberry-pi
% cd ~/Downloads
[noguchiwataru@Macintosh] ~/Downloads
% unzip 2014-01-07-wheezy-raspbian.zip
Archive:  2014-01-07-wheezy-raspbian.zip
  inflating: 2014-01-07-wheezy-raspbian.img  </pre>


<p>実際にSDカードにイメージを書き込みます。3GB近くあるので辛抱強く待ちます。<br/>
コーヒーでも飲んで他のことをして待ちましょう。</p>

<pre class="code" data-lang="" data-unlink>[noguchiwataru@Macintosh] ~/Downloads
% sudo dd if=~/Downloads/2014-01-07-wheezy-raspbian.img of=/dev/disk1 bs=4m
Password:
706+1 records in
706+1 records out
2962227200 bytes transferred in 1478.284275 secs (2003828 bytes/sec)</pre>


<p>ここまできたらSDカードをRaspberry Piに挿し込みます。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216170439.jpg" alt="f:id:wnoguchi0727:20140216170439j:plain" title="f:id:wnoguchi0727:20140216170439j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>いよいよmicro USBケーブルをPOWERに挿して起動します。PoEもいけるのかなと思ったのですが、だめでした。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216170545.jpg" alt="f:id:wnoguchi0727:20140216170545j:plain" title="f:id:wnoguchi0727:20140216170545j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>起動時のコンソール。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216170527.jpg" alt="f:id:wnoguchi0727:20140216170527j:plain" title="f:id:wnoguchi0727:20140216170527j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>とりあえずそのままFinish。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216170617.jpg" alt="f:id:wnoguchi0727:20140216170617j:plain" title="f:id:wnoguchi0727:20140216170617j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>startxで<a class="keyword" href="http://d.hatena.ne.jp/keyword/X%20Window%20System">X Window System</a>を立ち上げます。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216170932.jpg" alt="f:id:wnoguchi0727:20140216170932j:plain" title="f:id:wnoguchi0727:20140216170932j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p>意外と軽快に立ち上がりました。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216171024.jpg" alt="f:id:wnoguchi0727:20140216171024j:plain" title="f:id:wnoguchi0727:20140216171024j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Python">Python</a>のコンソールで計算させてみたところ。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216171245.jpg" alt="f:id:wnoguchi0727:20140216171245j:plain" title="f:id:wnoguchi0727:20140216171245j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Google">Google</a>に<a class="keyword" href="http://d.hatena.ne.jp/keyword/ping">ping</a>を打ってみたところ。見事に外につながります。</p>

<p><span itemscope itemtype="http://schema.org/Photograph"><img src="http://cdn-ak.f.st-hatena.com/images/fotolife/w/wnoguchi0727/20140216/20140216171331.jpg" alt="f:id:wnoguchi0727:20140216171331j:plain" title="f:id:wnoguchi0727:20140216171331j:plain" class="hatena-fotolife" itemprop="image"></span></p>


<h2>さいごに</h2>

<p>再起動したらログインのプロンプトが立ち上がってパスワードがわからなくて焦りました。<br/>
以下の初期アカウントで入れます。</p>

<ul>
<li>ID: <code>pi</code></li>
<li>PASS: <code>raspberry</code></li>
</ul>


<p>感想として、<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D5%A5%A1%A5%F3%A5%EC%A5%B9">ファンレス</a>なのでほんとに静音です。しかもこのコンパクトさに似合わない軽快さも素敵です。いろいろ遊べそうです。</p>

<h2>購買意欲のわく各種リンク</h2>

<p><div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00CBWMXVE/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/51IYHYasekL._SL160_.jpg" class="hatena-asin-detail-image" alt="Raspberry Pi Type B 512MB" title="Raspberry Pi Type B 512MB"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B00CBWMXVE/blogpg1xcom01-22/">Raspberry Pi Type B 512MB</a></p><ul><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> RS Components Ltd (ソースマーキング及び販売 Umemoto LLP)</li><li><span class="hatena-asin-detail-label">メディア:</span> エレクトロニクス</li><li><a href="http://d.hatena.ne.jp/asin/B00CBWMXVE/blogpg1xcom01-22" target="_blank">この商品を含むブログ (12件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div>
<div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844333747/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/61Wq4Znh1dL._SL160_.jpg" class="hatena-asin-detail-image" alt="Raspberry Piユーザーガイド" title="Raspberry Piユーザーガイド"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/4844333747/blogpg1xcom01-22/">Raspberry Piユーザーガイド</a></p><ul><li><span class="hatena-asin-detail-label">作者:</span> Eben Upton,Gareth Halfacree,<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B3%F4%BC%B0%B2%F1%BC%D2%A5%AF%A5%A4%A1%BC%A5%D7">株式会社クイープ</a></li><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%D7%A5%EC%A5%B9%A5%B8%A5%E3%A5%D1%A5%F3">インプレスジャパン</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2013/03/15</li><li><span class="hatena-asin-detail-label">メディア:</span> 単行本（ソフトカバー）</li><li><span class="hatena-asin-detail-label">購入</span>: 2人 <span class="hatena-asin-detail-label">クリック</span>: 21回</li><li><a href="http://d.hatena.ne.jp/asin/4844333747/blogpg1xcom01-22" target="_blank">この商品を含むブログ (9件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div>
<div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B000T738TE/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/41uFtwiUMlL._SL160_.jpg" class="hatena-asin-detail-image" alt="PLANEX HDMI-DVI変換ケーブル 2.0m PL-HDDV02" title="PLANEX HDMI-DVI変換ケーブル 2.0m PL-HDDV02"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B000T738TE/blogpg1xcom01-22/">PLANEX HDMI-DVI変換ケーブル 2.0m PL-HDDV02</a></p><ul><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%E9%A5%CD%A5%C3%A5%AF%A5%B9">プラネックス</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2007/07/26</li><li><span class="hatena-asin-detail-label">メディア:</span> エレクトロニクス</li><li><span class="hatena-asin-detail-label">購入</span>: 79人 <span class="hatena-asin-detail-label">クリック</span>: 463回</li><li><a href="http://d.hatena.ne.jp/asin/B000T738TE/blogpg1xcom01-22" target="_blank">この商品を含むブログ (22件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div>
<div class="hatena-asin-detail"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B003EVU5KW/blogpg1xcom01-22/"><img src="http://ecx.images-amazon.com/images/I/41PXY-kUWhL._SL160_.jpg" class="hatena-asin-detail-image" alt="ELECOM USBハブ USB2.0対応 ACアダプタ付 セルフ・バスパワー両対応 4ポート ブラック U2H-EG4SBK" title="ELECOM USBハブ USB2.0対応 ACアダプタ付 セルフ・バスパワー両対応 4ポート ブラック U2H-EG4SBK"></a><div class="hatena-asin-detail-info"><p class="hatena-asin-detail-title"><a href="http://www.amazon.co.jp/exec/obidos/ASIN/B003EVU5KW/blogpg1xcom01-22/">ELECOM USBハブ USB2.0対応 ACアダプタ付 セルフ・バスパワー両対応 4ポート ブラック U2H-EG4SBK</a></p><ul><li><span class="hatena-asin-detail-label">出版社/メーカー:</span> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A8%A5%EC%A5%B3%A5%E0">エレコム</a></li><li><span class="hatena-asin-detail-label">発売日:</span> 2010/04/05</li><li><span class="hatena-asin-detail-label">メディア:</span> Personal Computers</li><li><span class="hatena-asin-detail-label">購入</span>: 15人 <span class="hatena-asin-detail-label">クリック</span>: 41回</li><li><a href="http://d.hatena.ne.jp/asin/B003EVU5KW/blogpg1xcom01-22" target="_blank">この商品を含むブログ (5件) を見る</a></li></ul></div><div class="hatena-asin-detail-foot"></div></div></p>

<h2>参考文献</h2>

<ul>
<li><a href="http://openrtm.org/openrtm/ja/node/266">Raspberry Pi の初期設定 | OpenRTM-aist</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: GitHubのpull requestワークフローについてメモ
BASENAME: 2014/02/16/163346
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/16/2014 16:33:46
CATEGORY: Git
CATEGORY: GitHub
-----
BODY:
<h2><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B4%F0%CB%DC%C5%AA">基本的</a>なこと</h2>

<ul>
<li>マージ前に必ずリベース</li>
<li>ホットフィックス、フィーチャーにマージする意味が無い(git-flow)</li>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/%B4%F0%CB%DC%C5%AA">基本的</a>に Fast-forward しない</li>
</ul>


<h2>コミットメッセージについて</h2>

<p>Gitコミュニティにパッチを送る際に学習したことですが、
1行目に50文字以内でそのコミットの概要を記載する。
空行を開けて3行目以降には詳細を説明する。</p>

<pre class="code" data-unlink>Issue #1122 hogehoge.rb: [AAA] aaaaa

XXXにした。</pre>


<ul>
<li>なるべく豊富なコミットメッセージを残す。</li>
<li>経緯・歴史がわかるように。</li>
</ul>


<h2>参考文献</h2>

<ul>
<li><a href="http://tech.nitoyon.com/ja/blog/2013/07/23/git-patch/">Git にパッチを送って取り込まれた話 - てっく煮ブログ</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: RTX1200初期設定 - その他もろもろ編
BASENAME: 2014/02/15/235954
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/15/2014 23:59:54
-----
BODY:
<p>1時間でログインが切れるようにする。<br/>
そのままだと5分ぐらいで切れて設定作業では支障が出るから。</p>

<pre class="code" data-unlink>login timer 3600</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: RTX1200初期設定 - 管理者パスワードの設定編
BASENAME: 2014/02/15/233717
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/15/2014 23:37:17
CATEGORY: YAMAHA
CATEGORY: RTX1200
-----
BODY:
<p>出荷時設定に戻す。</p>

<pre class="code" data-unlink>cold start</pre>


<p>管理者モード移行。</p>

<pre class="code" data-unlink>administrator</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%CA%B8%BB%FA%A5%B3%A1%BC%A5%C9">文字コード</a>をASCIIに。<a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac">Mac</a>とかだと文字化けしてかなわない。</p>

<pre class="code" data-unlink>console character ascii</pre>


<p>一般ユーザーパスワード設定。</p>

<pre class="code" data-unlink># login password 
Old_Password: ←空パスキーイン
New_Password: ←パスワード設定 
New_Password: ←パスワード設定（確認） </pre>


<p>管理者ユーザーパスワード設定。</p>

<pre class="code" data-unlink># administrator password 
Old_Password: ←空パスキーイン 
New_Password: ←パスワード設定 
New_Password: ←パスワード設定（確認） </pre>


<p>保存を忘れずに。</p>

<pre class="code" data-unlink># save 
Saving ... CONFIG0 Done .</pre>


<p>設定は以下の様な感じになる。</p>

<pre class="code" data-unlink># RTX1200 Rev.10.01.53 (Mon Sep  9 15:23:58 2013)
# MAC Address : 00:a0:de:6b:74:13, 00:a0:de:6b:74:14, 00:a0:de:6b:74:15
# Memory 128Mbytes, 3LAN, 1BRI
# main:  RTX1200 ver=c0 serial=D26127845 MAC-Address=00:a0:de:6b:74:13 MAC-Addr
ess=00:a0:de:6b:74:14 MAC-Address=00:a0:de:6b:74:15
# Reporting Date: Feb 15 23:36:27 2014
login password *
administrator password *
console character ascii
ip lan1 address 192.168.100.1/24
dhcp service server
dhcp server rfc2131 compliant except remain-silent
dhcp scope 1 192.168.100.2-192.168.100.191/24</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: GitHubの公開鍵一覧に学ぶ公開鍵認証方式の哲学
BASENAME: 2014/02/02/213313
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 02/02/2014 21:33:13
CATEGORY: GitHub
CATEGORY: 公開鍵認証
-----
BODY:
<p>私は基本バカなので、公開鍵認証はどっちも秘密にしなきゃいけないだろって思ってたんですが、<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>をみてわかったのですが、公開鍵はその名の通り公開しても問題のない鍵のようですね。</p>

<p>ちなみに私の<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>公開鍵の一覧は以下の様な感じですね。</p>

<p><a href="https://github.com/wnoguchi.keys">https://github.com/wnoguchi.keys</a></p>

<p>問題なのは<a class="keyword" href="http://d.hatena.ne.jp/keyword/%C8%EB%CC%A9%B8%B0">秘密鍵</a>を持つクライアントがその対応する公開鍵を持つサーバーを信頼するかどうかにあるわけですね。確かに、<a class="keyword" href="http://d.hatena.ne.jp/keyword/GitHub">GitHub</a>のサーバーなら信頼できますけど、どこぞの誰が建てたかわからないサーバーに接続するとか怖くてできないですねえ。</p>

<p>誰を信用するかということが重要なんですね。</p>

<p>我ながらまとまりのない文章だなあ。</p>

<h2>参考文献</h2>

<p><a href="http://blog.id774.net/post/2013/12/16/441/">GitHub に登録した SSH 公開鍵は全世界に公開されている | 774::Blog</a></p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: .NET Framework4でHttpUtility.UrlEncodeが使えない件
BASENAME: 2014/01/30/000422
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/30/2014 00:04:22
CATEGORY: .NET Framework
CATEGORY: C#
-----
BODY:
<p>VisualStudio 2010で<a class="keyword" href="http://d.hatena.ne.jp/keyword/.NET%20Framework">.NET Framework</a> 4で以下のコードを動かそうとしたらエラーがでた。</p>

<ul>
<li><a href="http://dobon.net/vb/dotnet/internet/webrequestpost.html">POSTでデータを送信する: .NET Tips: C#, VB.NET</a></li>
</ul>


<pre class="code lang-cs" data-lang="cs" data-unlink><span class="synComment">// 文字コードを指定する</span>
System.Text.Encoding enc = System.Text.Encoding.GetEncoding(<span class="synConstant">&quot;shift_jis&quot;</span>);
<span class="synComment">// POST送信する文字列を作成</span>
<span class="synType">string</span> postData = <span class="synConstant">&quot;inlang=ja&amp;word=&quot;</span> + System.Web.HttpUtility.UrlEncode(<span class="synConstant">&quot;インターネット&quot;</span>, enc);
</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%BB%A5%F3%A5%D6%A5%EA">アセンブリ</a>参照が見つからないらしいんだけど、参照を追加しようとしてもそれらしい<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A2%A5%BB%A5%F3%A5%D6%A5%EA">アセンブリ</a>が見つからない。</p>

<ul>
<li><a href="http://www.atmarkit.co.jp/fdotnet/dotnettips/1021targetfx/targetfx.html">WindowsアプリケーションでSystem.Webアセンブリを参照するには？［VS 2010以降］ － ＠IT</a></li>
</ul>


<p>によるともはや.NET Framework4環境では <code>HttpUtility</code> は無理して使うようなものでもないみたい。</p>

<p>もう少し調べると</p>

<ul>
<li><a href="http://www.atmarkit.co.jp/fdotnet/dotnettips/1015webutility/webutility.html">WindowsアプリケーションでHTMLデコード／エンコードを行うには？［4以降、C#、VB］ － ＠IT</a></li>
</ul>


<p>なので、 <code>System</code> <a class="keyword" href="http://d.hatena.ne.jp/keyword/%CC%BE%C1%B0%B6%F5%B4%D6">名前空間</a>の <code>Uri</code> クラスの <code>EscapeDataString</code> メソッドを使えばいいらしい。</p>

<pre class="code lang-cs" data-lang="cs" data-unlink>var postData = <span class="synConstant">&quot;body=&quot;</span> + Uri.EscapeDataString(messageTextBox.Text);
</pre>


<p>これで解決。</p>

<hr />

<p>って、.NET Client Profileだったからいけなかったってオチでした。
ClientProfileに</p>

<ul>
<li><a href="http://stackoverflow.com/questions/7694380/system-web-assembly-is-not-found-on-net-4-0-version">c# - System.Web assembly is not found on .net 4.0 version - Stack Overflow</a></li>
</ul>


<p>あー恥ずかしい。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 拡張子を指定してgit grep
BASENAME: 2014/01/02/195649
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 01/02/2014 19:56:49
CATEGORY: Git
-----
BODY:
<p>そのまま<a class="keyword" href="http://d.hatena.ne.jp/keyword/grep">grep</a>かけるとログファイルとか引っかかることがあったので、このような感じで拡張子指定できるようです。否定はないのかな。</p>

<pre class="code" data-unlink>git grep foobar -- &#34;*.php&#34;</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Ubuntu12.04 LTSをインストールしたLenovo G500を再起動するたびに画面が真っ暗になる件
BASENAME: 2013/12/15/000311
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/15/2013 00:03:11
CATEGORY: Linux
CATEGORY: Ubuntu
CATEGORY: Ubuntu 12.04 LTS
CATEGORY: Lenovo
CATEGORY: ノートPC
-----
BODY:
<p>以前<a class="keyword" href="http://d.hatena.ne.jp/keyword/Linux">Linux</a>専用機として運用するために<a class="keyword" href="http://d.hatena.ne.jp/keyword/Lenovo">Lenovo</a> G500を購入して、<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a> 12.04 LTSを入れたのですが、再起動するたびに画面が真っ暗になって、その度バックライトの輝度を最大まで上げていたのですが、いい加減窓からマシンをかなぐり捨てたいぐらいにいやになってきたところです。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>がいけないのかと思って、その他の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C7%A5%A3%A5%B9%A5%C8%A5%EA%A5%D3%A5%E5%A1%BC%A5%B7%A5%E7%A5%F3">ディストリビューション</a>を検討したのですが、ラップトップマシンに最適なディストリを考えたとき<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>も<a class="keyword" href="http://d.hatena.ne.jp/keyword/Debian">Debian</a>も<a class="keyword" href="http://d.hatena.ne.jp/keyword/Slackware">Slackware</a>も<a class="keyword" href="http://d.hatena.ne.jp/keyword/Fedora">Fedora</a>もSLもどうにも、、、なんかなぁという感じでした。だいぶ<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>も設定してしまったのでまた他の入れなおすのは気が重いです。</p>

<p>なので<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>でどうにかならないか検索してみました。<br/>
調べてみると</p>

<pre class="code" data-unlink># echo xxx &gt; /sys/class/backlight/acpi_video0/brightness</pre>


<p>で輝度を調整できるみたいです。で、G500の輝度のMAX値を調べると</p>

<pre class="code" data-unlink># cat /sys/class/backlight/acpi_video0/brightness
100</pre>


<p>なので</p>

<pre class="code" data-unlink># echo 100 &gt; /sys/class/backlight/acpi_video0/brightness</pre>


<p>として最大の明るさに設定しました。即座に反映されます。でもこのままでは再起動したらきれいさっぱりリセットされてしまうので <code>/etc/rc.local</code> に記述します。実行権限がついていることを確認して</p>

<pre class="code" data-unlink>echo 100 &gt; /sys/class/backlight/acpi_video0/brightness

exit 0</pre>


<p>とします。<code>exit 0</code> の前に入れるのがポイントです。</p>

<p>そして再起動。一回目はなぜか真っ暗になってしまったので、なんだよーと思いながら <code>sleep 5</code> とか入れたらディスプレイマネージャが立ち上がらなくなってしまいました。なので <code>sleep 5</code> を削除して、改めて再起動したら今度は反映されました。なんだったんだろう。。。</p>

<p>それにしてもこのマシン、テンキー邪魔だな・・・。エンターキー小さいし・・・。</p>

<h2>参考文献</h2>

<ul>
<li><a href="http://askubuntu.com/questions/345307/installing-ubuntu-12-04-on-a-lenovo-g500">installation - Installing Ubuntu 12.04 on a Lenovo G500 - Ask Ubuntu</a></li>
<li><a href="http://askubuntu.com/questions/79983/screen-brightness-reset-to-minimum-after-every-reboot">11.10 - Screen brightness reset to minimum after every reboot - Ask Ubuntu</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: AWS SDK for PHP 2を使ってEC2のインスタンスを起動してみる
BASENAME: 2013/12/13/000924
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/13/2013 00:09:24
CATEGORY: AWS
CATEGORY: Amazon EC2
CATEGORY: PHP
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Amazon%20Web%20Services">Amazon Web Services</a> ガイドブックのEC2セットアップスクリプトの内容をAWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> 2用に書きなおしてみました。</p>

<ul>
<li><a href="http://www.amazon.co.jp/Amazon-Web-Services-%E3%82%AC%E3%82%A4%E3%83%89%E3%83%96%E3%83%83%E3%82%AF-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%A7Web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%81/dp/4844329804">Amazon.co.jp： Amazon Web Services ガイドブック クラウドでWebサービスを作ろう！: Jeff Barr, 玉川 憲, 株式会社クイープ: 本</a></li>
</ul>


<p>動くようになるまで結構大変でした。。。<br/>
ただ、<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>から仮想サーバー立ち上げられるってすごいなあと改めて実感。<br/>
S3のときなどと違ってEC2は高価だから心臓に悪いですね。<br/>
こういうのいじるときはこまめにアカウントアクティビティチェックして、開放漏れのIPや無駄に<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>、スペックの高い<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を知らずに立ち上げてしまっていないか注意しないといけないですね。</p>

<p>細かいセットアップについては</p>

<ul>
<li><a href="http://blog.pg1x.com/entry/2013/12/07/193613">AWS SDK for PHP 2 入門（Composer編） - ひとりごと</a></li>
</ul>


<p>にゆずります。</p>

<p>では以下がスクリプトとなります。</p>

<pre class="code lang-php" data-lang="php" data-unlink><span class="synSpecial">&lt;?php</span>

<span class="synIdentifier">error_reporting</span><span class="synSpecial">(</span><span class="synConstant">E_ALL</span><span class="synSpecial">)</span>;

<span class="synComment">// Composer</span>
<span class="synPreProc">require_once</span><span class="synSpecial">(</span>'<span class="synConstant">vendor/autoload.php</span>'<span class="synSpecial">)</span>;

use Aws\Ec2\Ec2Client;

<span class="synComment">// AWSアクセストークン</span>
<span class="synStatement">$</span><span class="synIdentifier">config</span> <span class="synStatement">=</span> <span class="synType">array</span><span class="synSpecial">(</span>
  '<span class="synConstant">key</span>'    <span class="synStatement">=&gt;</span> '<span class="synConstant">AKIAIOSFODNN7EXAMPLE</span>',
  '<span class="synConstant">secret</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</span>'
  <span class="synComment">// 東京リージョン指定</span>
  '<span class="synConstant">region</span>' <span class="synStatement">=&gt;</span> \Aws\Common\Enum\Region<span class="synStatement">::</span>AP_NORTHEAST_1,
<span class="synSpecial">)</span>;

<span class="synStatement">$</span><span class="synIdentifier">ec2</span> <span class="synStatement">=</span> Ec2Client<span class="synStatement">::</span>factory<span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">config</span><span class="synSpecial">)</span>;

<span class="synStatement">try</span> <span class="synSpecial">{</span>
  <span class="synStatement">$</span><span class="synIdentifier">options</span> <span class="synStatement">=</span> <span class="synType">array</span><span class="synSpecial">(</span>
    <span class="synComment">// Amazon LinuxのAMIを使う</span>
    '<span class="synConstant">ImageId</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">ami-b1fe9bb0</span>',
    <span class="synComment">// インスタンス1個</span>
    '<span class="synConstant">MinCount</span>' <span class="synStatement">=&gt;</span> <span class="synConstant">1</span>,
    '<span class="synConstant">MaxCount</span>' <span class="synStatement">=&gt;</span> <span class="synConstant">1</span>,
    <span class="synComment">// キーを指定</span>
    '<span class="synConstant">KeyName</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">securekey</span>',
    <span class="synComment">// セキュリティグループを指定</span>
    '<span class="synConstant">SecurityGroups</span>' <span class="synStatement">=&gt;</span> <span class="synType">array</span><span class="synSpecial">(</span>
      '<span class="synConstant">webserver</span>' <span class="synComment">// sg-134678</span>
    <span class="synSpecial">)</span>,
    <span class="synComment">// インスタンスタイプはマイクロインスタンスを立ち上げる</span>
    '<span class="synConstant">InstanceType</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">t1.micro</span>',
  <span class="synSpecial">)</span>;
  <span class="synStatement">$</span><span class="synIdentifier">result</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>RunInstances<span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">options</span><span class="synSpecial">)</span>;
<span class="synSpecial">}</span> <span class="synStatement">catch</span> <span class="synSpecial">(</span><span class="synIdentifier">Exception</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
  <span class="synStatement">exit</span><span class="synSpecial">(</span>&quot;<span class="synConstant">Instance Launch failed.: </span>&quot; <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synType">-&gt;</span>getMessage<span class="synSpecial">()</span> <span class="synStatement">.</span> &quot;<span class="synSpecial">\n</span>&quot;<span class="synSpecial">)</span>;
<span class="synSpecial">}</span>

<span class="synComment">// インスタンス情報を取得</span>
<span class="synStatement">$</span><span class="synIdentifier">instance</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">result</span><span class="synSpecial">[</span>'<span class="synConstant">Instances</span>'<span class="synSpecial">][</span><span class="synConstant">0</span><span class="synSpecial">]</span>;
<span class="synStatement">$</span><span class="synIdentifier">instanceId</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">instance</span><span class="synSpecial">[</span>'<span class="synConstant">InstanceId</span>'<span class="synSpecial">]</span>;
<span class="synStatement">$</span><span class="synIdentifier">availabilityZone</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">instance</span><span class="synSpecial">[</span>'<span class="synConstant">Placement</span>'<span class="synSpecial">][</span>'<span class="synConstant">AvailabilityZone</span>'<span class="synSpecial">]</span>;

<span class="synPreProc">echo</span> &quot;<span class="synConstant">Instance ID: </span><span class="synStatement">$</span><span class="synIdentifier">instanceId</span><span class="synSpecial">\n</span>&quot;;
<span class="synPreProc">echo</span> &quot;<span class="synConstant">Availability Zone: </span><span class="synStatement">$</span><span class="synIdentifier">availabilityZone</span><span class="synSpecial">\n</span>&quot;;

<span class="synComment">// EC2インスタンスの準備ができるのを待つ</span>
<span class="synStatement">do</span> <span class="synSpecial">{</span>
  <span class="synStatement">$</span><span class="synIdentifier">result</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>describeInstances<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">InstanceIds</span>' <span class="synStatement">=&gt;</span> <span class="synType">array</span><span class="synSpecial">(</span>
      <span class="synStatement">$</span><span class="synIdentifier">instanceId</span>
    <span class="synSpecial">)</span>
  <span class="synSpecial">))</span>;
  
  <span class="synStatement">$</span><span class="synIdentifier">status</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">result</span><span class="synSpecial">[</span>'<span class="synConstant">Reservations</span>'<span class="synSpecial">][</span><span class="synConstant">0</span><span class="synSpecial">][</span>'<span class="synConstant">Instances</span>'<span class="synSpecial">][</span><span class="synConstant">0</span><span class="synSpecial">][</span>'<span class="synConstant">State</span>'<span class="synSpecial">][</span>'<span class="synConstant">Name</span>'<span class="synSpecial">]</span>;
  <span class="synStatement">$</span><span class="synIdentifier">runnning</span> <span class="synStatement">=</span> <span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">status</span> <span class="synStatement">==</span> '<span class="synConstant">running</span>'<span class="synSpecial">)</span>;
  
  <span class="synStatement">if</span> <span class="synSpecial">(</span><span class="synStatement">!$</span><span class="synIdentifier">runnning</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
    <span class="synPreProc">echo</span> &quot;<span class="synConstant">instance is currently in </span><span class="synStatement">$</span><span class="synIdentifier">status</span><span class="synConstant">, waiting 10 seconds.</span><span class="synSpecial">\n</span>&quot;;
    <span class="synIdentifier">sleep</span><span class="synSpecial">(</span><span class="synConstant">10</span><span class="synSpecial">)</span>;
  <span class="synSpecial">}</span>
  
<span class="synSpecial">}</span> <span class="synStatement">while</span><span class="synSpecial">(</span><span class="synStatement">!$</span><span class="synIdentifier">runnning</span><span class="synSpecial">)</span>;

<span class="synStatement">try</span> <span class="synSpecial">{</span>
  <span class="synComment">// ElasticIPを割り当て</span>
  <span class="synStatement">$</span><span class="synIdentifier">result</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>allocateAddress<span class="synSpecial">()</span>;
  <span class="synStatement">$</span><span class="synIdentifier">publicIp</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">result</span><span class="synSpecial">[</span>'<span class="synConstant">PublicIp</span>'<span class="synSpecial">]</span>;
  <span class="synPreProc">echo</span> &quot;<span class="synConstant">allocate IP Address: </span><span class="synStatement">$</span><span class="synIdentifier">publicIp</span><span class="synSpecial">\n</span>&quot;;
<span class="synSpecial">}</span> <span class="synStatement">catch</span> <span class="synSpecial">(</span><span class="synIdentifier">Exception</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
  <span class="synStatement">exit</span><span class="synSpecial">(</span>&quot;<span class="synConstant">Allocate IP Address failed. </span>&quot; <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synType">-&gt;</span>getMessage<span class="synSpecial">()</span> <span class="synStatement">.</span> &quot;<span class="synSpecial">\n</span>&quot;<span class="synSpecial">)</span>;
<span class="synSpecial">}</span>

<span class="synStatement">try</span> <span class="synSpecial">{</span>
  <span class="synComment">// ElasticIPをインスタンスにアタッチ</span>
  <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>associateAddress<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">InstanceId</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">instanceId</span>,
    '<span class="synConstant">PublicIp</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">publicIp</span>,
  <span class="synSpecial">))</span>;
  <span class="synPreProc">echo</span> &quot;<span class="synConstant">Associated IP address : </span><span class="synStatement">$</span><span class="synSpecial">{</span><span class="synIdentifier">publicIp</span><span class="synSpecial">}</span><span class="synConstant"> to </span><span class="synStatement">$</span><span class="synSpecial">{</span><span class="synIdentifier">instanceId</span><span class="synSpecial">}\n</span>&quot;;
<span class="synSpecial">}</span> <span class="synStatement">catch</span> <span class="synSpecial">(</span><span class="synIdentifier">Exception</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
  <span class="synStatement">exit</span><span class="synSpecial">(</span>&quot;<span class="synConstant">IP Address Association failed. </span>&quot; <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synType">-&gt;</span>getMessage<span class="synSpecial">()</span> <span class="synStatement">.</span> &quot;<span class="synSpecial">\n</span>&quot;<span class="synSpecial">)</span>;
<span class="synSpecial">}</span>

<span class="synStatement">try</span> <span class="synSpecial">{</span>
  <span class="synComment">// 先ほど得られたアベイラビリティゾーンに1GiBのボリュームを2つ作成</span>
  <span class="synStatement">$</span><span class="synIdentifier">res1</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>createVolume<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">Size</span>' <span class="synStatement">=&gt;</span> <span class="synConstant">1</span>,
    '<span class="synConstant">AvailabilityZone</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">availabilityZone</span>,
  <span class="synSpecial">))</span>;
  <span class="synStatement">$</span><span class="synIdentifier">res2</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>createVolume<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">Size</span>' <span class="synStatement">=&gt;</span> <span class="synConstant">1</span>,
    '<span class="synConstant">AvailabilityZone</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">availabilityZone</span>,
  <span class="synSpecial">))</span>;
  <span class="synStatement">$</span><span class="synIdentifier">volumeId1</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">res1</span><span class="synSpecial">[</span>'<span class="synConstant">VolumeId</span>'<span class="synSpecial">]</span>;
  <span class="synStatement">$</span><span class="synIdentifier">volumeId2</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">res2</span><span class="synSpecial">[</span>'<span class="synConstant">VolumeId</span>'<span class="synSpecial">]</span>;
  <span class="synPreProc">echo</span> &quot;<span class="synConstant">EBS Volume: </span><span class="synStatement">$</span><span class="synIdentifier">volumeId1</span><span class="synConstant">, </span><span class="synStatement">$</span><span class="synIdentifier">volumeId2</span><span class="synConstant"> created.</span><span class="synSpecial">\n</span>&quot;;
<span class="synSpecial">}</span> <span class="synStatement">catch</span> <span class="synSpecial">(</span><span class="synIdentifier">Exception</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
  <span class="synStatement">exit</span><span class="synSpecial">(</span>&quot;<span class="synConstant">EBS Volume create failed. </span>&quot; <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synType">-&gt;</span>getMessage<span class="synSpecial">()</span> <span class="synStatement">.</span> &quot;<span class="synSpecial">\n</span>&quot;<span class="synSpecial">)</span>;
<span class="synSpecial">}</span>


<span class="synComment">// ボリュームが使えるようになるまで待つ</span>
<span class="synStatement">do</span> <span class="synSpecial">{</span>
  <span class="synStatement">$</span><span class="synIdentifier">result</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>describeVolumes<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">VolumeIds</span>' <span class="synStatement">=&gt;</span> <span class="synType">array</span><span class="synSpecial">(</span>
      <span class="synStatement">$</span><span class="synIdentifier">volumeId1</span>, <span class="synStatement">$</span><span class="synIdentifier">volumeId2</span>
    <span class="synSpecial">)</span>
  <span class="synSpecial">))</span>;
  
  <span class="synStatement">$</span><span class="synIdentifier">status1</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">result</span><span class="synSpecial">[</span>'<span class="synConstant">Volumes</span>'<span class="synSpecial">][</span><span class="synConstant">0</span><span class="synSpecial">][</span>'<span class="synConstant">State</span>'<span class="synSpecial">]</span>;
  <span class="synStatement">$</span><span class="synIdentifier">status2</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">result</span><span class="synSpecial">[</span>'<span class="synConstant">Volumes</span>'<span class="synSpecial">][</span><span class="synConstant">1</span><span class="synSpecial">][</span>'<span class="synConstant">State</span>'<span class="synSpecial">]</span>;
  <span class="synStatement">$</span><span class="synIdentifier">volumeReady</span> <span class="synStatement">=</span> <span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">status1</span> <span class="synStatement">==</span> '<span class="synConstant">available</span>' <span class="synStatement">&amp;&amp;</span> <span class="synStatement">$</span><span class="synIdentifier">status2</span> <span class="synStatement">==</span> '<span class="synConstant">available</span>'<span class="synSpecial">)</span>;
  
  <span class="synStatement">if</span> <span class="synSpecial">(</span><span class="synStatement">!$</span><span class="synIdentifier">volumeReady</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
    <span class="synPreProc">echo</span> &quot;<span class="synConstant">volumes are currently in (</span><span class="synStatement">$</span><span class="synIdentifier">status1</span><span class="synConstant">, </span><span class="synStatement">$</span><span class="synIdentifier">status2</span><span class="synConstant">), waiting 10 seconds.</span><span class="synSpecial">\n</span>&quot;;
    <span class="synIdentifier">sleep</span><span class="synSpecial">(</span><span class="synConstant">10</span><span class="synSpecial">)</span>;
  <span class="synSpecial">}</span>
  
<span class="synSpecial">}</span> <span class="synStatement">while</span><span class="synSpecial">(</span><span class="synStatement">!$</span><span class="synIdentifier">volumeReady</span><span class="synSpecial">)</span>;


<span class="synStatement">try</span> <span class="synSpecial">{</span>
  <span class="synComment">// ボリュームをインスタンスにアタッチ</span>
  <span class="synStatement">$</span><span class="synIdentifier">res1</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>attachVolume<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">VolumeId</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">volumeId1</span>,
    '<span class="synConstant">InstanceId</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">instanceId</span>,
    '<span class="synConstant">Device</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">/dev/sdf</span>',
  <span class="synSpecial">))</span>;
  <span class="synStatement">$</span><span class="synIdentifier">res2</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">ec2</span><span class="synType">-&gt;</span>attachVolume<span class="synSpecial">(</span><span class="synType">array</span><span class="synSpecial">(</span>
    '<span class="synConstant">VolumeId</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">volumeId2</span>,
    '<span class="synConstant">InstanceId</span>' <span class="synStatement">=&gt;</span> <span class="synStatement">$</span><span class="synIdentifier">instanceId</span>,
    '<span class="synConstant">Device</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">/dev/sdg</span>',
  <span class="synSpecial">))</span>;

  <span class="synPreProc">echo</span> &quot;<span class="synConstant">Volume </span><span class="synStatement">$</span><span class="synIdentifier">volumeId1</span><span class="synConstant">, </span><span class="synStatement">$</span><span class="synIdentifier">volumeId2</span><span class="synConstant"> has been attached successfully.</span><span class="synSpecial">\n</span>&quot;;
<span class="synSpecial">}</span> <span class="synStatement">catch</span> <span class="synSpecial">(</span><span class="synIdentifier">Exception</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synSpecial">)</span> <span class="synSpecial">{</span>
  <span class="synStatement">exit</span><span class="synSpecial">(</span>&quot;<span class="synConstant">EBS Attache failed. </span>&quot; <span class="synStatement">.</span> <span class="synStatement">$</span><span class="synIdentifier">ex</span><span class="synType">-&gt;</span>getMessage<span class="synSpecial">()</span> <span class="synStatement">.</span> &quot;<span class="synSpecial">\n</span>&quot;<span class="synSpecial">)</span>;
<span class="synSpecial">}</span>

<span class="synPreProc">echo</span> &quot;<span class="synConstant">Finished!!</span><span class="synSpecial">\n</span>&quot;;
</pre>


<p>で、出力は以下のようになります。</p>

<pre class="code lang-" data-lang="" data-unlink>$ php ec2_setup.php 
Instance ID: i-11223344
Availability Zone: ap-northeast-1c
instance is currently in pending, waiting 10 seconds.
instance is currently in pending, waiting 10 seconds.
allocate IP Address: 54.111.95.222
Associated IP address : 54.111.95.222 to i-11223344
EBS Volume: vol-12345ba, vol-653ac created.
volumes are currently in (creating, creating), waiting 10 seconds.
Volume vol-12345ba, vol-653ac has been attached successfully.
Finished!!</pre>


<p>AWS Management Consoleで確認したらちゃんと<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>が立ち上がってElasticIPがアタッチ、ボリュームもきちんとアタッチされていました。いいこいいこ。</p>

<h2>参考文献</h2>

<ul>
<li><a href="http://www.amazon.co.jp/Amazon-Web-Services-%E3%82%AC%E3%82%A4%E3%83%89%E3%83%96%E3%83%83%E3%82%AF-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%A7Web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%81/dp/4844329804">Amazon.co.jp： Amazon Web Services ガイドブック クラウドでWebサービスを作ろう！: Jeff Barr, 玉川 憲, 株式会社クイープ: 本</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Amazon Route53の設定管理ツールのRoadworkerを使ってみた
BASENAME: 2013/12/08/000913
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/08/2013 00:09:13
CATEGORY: AWS
CATEGORY: Route53
CATEGORY: Ruby
CATEGORY: Roadworker
-----
BODY:
<p>Amazon Route53を<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a> DSL設定ファイルで管理する<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a>製のツール。<br/>
もちろんDSLで記述されているので<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D0%A1%BC%A5%B8%A5%E7%A5%F3%B4%C9%CD%FD%A5%B7%A5%B9%A5%C6%A5%E0">バージョン管理システム</a>との相性も抜群です。</p>

<h2>環境</h2>

<ul>
<li><a class="keyword" href="http://d.hatena.ne.jp/keyword/Mac%20OS%20X">Mac OS X</a> Mavericks, <a class="keyword" href="http://d.hatena.ne.jp/keyword/MBA">MBA</a></li>
</ul>


<h2>インストール</h2>

<h3>Gemfile</h3>

<p>僕はGemfileを用意します。</p>

<pre class="code lang-ruby" data-lang="ruby" data-unlink>source <span class="synSpecial">&quot;</span><span class="synConstant">https://rubygems.org</span><span class="synSpecial">&quot;</span>

gem <span class="synSpecial">'</span><span class="synConstant">roadworker</span><span class="synSpecial">'</span>
</pre>


<p>そして</p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle install --path ~/vendor/bundle

Fetching gem metadata from https://rubygems.org/.........
Fetching gem metadata from https://rubygems.org/..
Resolving dependencies...
Using json (1.8.1)
Using mini_portile (0.5.2)
Using nokogiri (1.6.0)
Using uuidtools (2.1.4)
Installing aws-sdk (1.29.1)
Using systemu (2.5.2)
Installing macaddr (1.6.1)
Installing net-dns (0.8.0)
Installing tins (0.13.1)
Installing term-ansicolor (1.2.2)
Installing uuid (2.3.7)
Installing roadworker (0.3.10)
Using bundler (1.3.5)
Your bundle is complete!
It was installed into /Users/noguchiwataru/vendor/bundle</pre>


<p>特にhomebrewでインストールするパッケージが必要なわけでもなくインストールできました。</p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle exec roadwork --version
roadwork 0.3.10</pre>


<h2>使う</h2>

<p>当然ですが、AWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>アクセスのためのアクセスキーに関する<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B4%C4%B6%AD%CA%D1%BF%F4">環境変数</a>が事前にセットアップされている必要があります。</p>

<pre class="code lang-" data-lang="" data-unlink>export AWS_ACCESS_KEY_ID=&#39;...&#39;
export AWS_SECRET_ACCESS_KEY=&#39;...&#39;</pre>


<h3>初期設定</h3>

<p>Routefileに現在管理されている Hosted Zone の設定を出力する。</p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle exec roadwork -e -o Routefile

Export Route53 to `Routefile</pre>


<h3>中身はどうなっているか</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ruby">Ruby</a>のDSLになっています。</p>

<pre class="code lang-ruby" data-lang="ruby" data-unlink>hosted_zone <span class="synSpecial">&quot;</span><span class="synConstant">example.com.</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
  rrset <span class="synSpecial">&quot;</span><span class="synConstant">example.com.</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">A</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
    ttl <span class="synConstant">300</span>
    resource_records(
      <span class="synSpecial">&quot;</span><span class="synConstant">11.33.99.91</span><span class="synSpecial">&quot;</span>
    )
  <span class="synStatement">end</span>

  rrset <span class="synSpecial">&quot;</span><span class="synConstant">*.example.com.</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">A</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
    ttl <span class="synConstant">300</span>
    resource_records(
      <span class="synSpecial">&quot;</span><span class="synConstant">11.33.99.91</span><span class="synSpecial">&quot;</span>
    )
  <span class="synStatement">end</span>

  rrset <span class="synSpecial">&quot;</span><span class="synConstant">yunocchi.example.com.</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">CNAME</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
    ttl <span class="synConstant">300</span>
    resource_records(
      <span class="synSpecial">&quot;</span><span class="synConstant">hatenablog.com</span><span class="synSpecial">&quot;</span>
    )
  <span class="synStatement">end</span>

  rrset <span class="synSpecial">&quot;</span><span class="synConstant">miyako.example.com.</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">A</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
    ttl <span class="synConstant">300</span>
    resource_records(
      <span class="synSpecial">&quot;</span><span class="synConstant">111.222.333.444</span><span class="synSpecial">&quot;</span>
    )
  <span class="synStatement">end</span>

  rrset <span class="synSpecial">&quot;</span><span class="synConstant">nori.example.com.</span><span class="synSpecial">&quot;</span>, <span class="synSpecial">&quot;</span><span class="synConstant">CNAME</span><span class="synSpecial">&quot;</span> <span class="synStatement">do</span>
    ttl <span class="synConstant">300</span>
    resource_records(
      <span class="synSpecial">&quot;</span><span class="synConstant">domains.tumblr.com</span><span class="synSpecial">&quot;</span>
    )
  <span class="synStatement">end</span>
<span class="synStatement">end</span>
</pre>


<h3>適用してみる</h3>

<p>まずは <code>--dry-run</code> してみる。</p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle exec roadwork --dry-run -a -f Routefile

Apply `Routefile` to Route53 (dry-run)
Update ResourceRecordSet: example.com. A (dry-run)
  set resource_records=[{:value=&gt;&#34;11.33.99.91&#34;}] (dry-run)
Update ResourceRecordSet: *.example.com. A (dry-run)
  set resource_records=[{:value=&gt;&#34;11.33.99.91&#34;}] (dry-run)
No change</pre>


<p>問題なければ適用。<br/>
2回目の実行ではちゃんと変更なしとなっている。<br/>
冪等性ばんざい。</p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle exec roadwork -a -f Routefile
Apply `Routefile` to Route53
Update ResourceRecordSet: pg1x.com. A
  set resource_records=[{:value=&gt;&#34;11.33.99.91&#34;}]
Update ResourceRecordSet: *.pg1x.com. A
  set resource_records=[{:value=&gt;&#34;11.33.99.91&#34;}]

$ bundle exec roadwork -a -f Routefile
Apply `Routefile` to Route53
No change</pre>


<p>AWS Management Console上で見てみるとちゃんと適用できている。<br/>
すばらしい。</p>

<h3>いじわるしてみる</h3>

<p>AWS Management Console上でレコードを1行追加してみました。<br/>
本来ならRoutefile上で管理するつもりなので、あってはならないことです。<br/>
まあ、コンテキストによってはAWS Management Console上で変更したやつはRoutefileにも反映してほしい気もしますが、<br/>
そんな虫のいい話はないですね。<br/>
<strong>なので、ここではRoutefileにないレコードは消えてくれることを期待します。</strong></p>

<pre class="code lang-" data-lang="" data-unlink>$ bundle exec roadwork --dry-run -a -f Routefile

Apply `Routefile` to Route53 (dry-run)
Delete ResourceRecordSet: localns.pg1x.com. A (dry-run)
No change</pre>


<p>余計な行が増えているよと教えてくれました。<br/>
<code>--dry-run</code> を消して適用すればOKです。<br/>
AWS Management Console上からはきれいさっぱり消えています。</p>

<h2>参考サイト</h2>

<p>クラスメソッドさんの説明がとても参考になりました。</p>

<ul>
<li><a href="http://dev.classmethod.jp/cloud/aws/route53-as-code-roadworker/">【AWS】Route53をgitで管理する「Roadworker」を早速試してみました ｜ Developers.IO</a></li>
<li><a href="http://rubydoc.info/gems/roadworker/0.3.2/file/README.md">File: README — Documentation for roadworker (0.3.2)</a></li>
<li><a href="https://bitbucket.org/winebarrel/roadworker">winebarrel / Roadworker — Bitbucket</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: Gemfile初期化
BASENAME: 2013/12/07/215453
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/07/2013 21:54:53
-----
BODY:
<p>いつも Gemfile のテンプレ手作業でコピーしてた。
コマンド一発で生成できるのしらなかった。。。</p>

<pre class="code" data-unlink>$ bundle init
Writing new Gemfile to /Users/noguchiwataru/Documents/repositories/bitbucket/roadworker-wnoguchi/Gemfile</pre>


<p>で、出力内容は以下のようになる。</p>

<pre class="code" data-unlink>$ cat Gemfile
# A sample Gemfile
source &#34;https://rubygems.org&#34;

# gem &#34;rails&#34;</pre>


-----
--------
AUTHOR: wnoguchi0727
TITLE: GitHubを2段階認証にしたときのSourceTreeの対応方法
BASENAME: 2013/12/07/214932
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/07/2013 21:49:32
-----
BODY:
<p>当然ですが、GitHubに2段階認証を設定したらSourceTreeのGitHub連携機能が使えなくなりました。<br/>
その対応方法。</p>

<ol>
<li>設定画面に行きます。</li>
<li>サイドメニューの Applications をクリックします。</li>
<li>Personal Access Tokens の Create new token で好きなアプリ名を入れて、トークンを生成します。</li>
<li>あとは SourceTree のGitHubアカウント欄のパスワードにそのトークンを設定すればOK。</li>
</ol>


<h2>参考サイト</h2>

<ul>
<li><a href="https://confluence.atlassian.com/display/SOURCETREEKB/Two-Factor+Authentication+2FA+with+GitHub+in+SourceTree">Two-Factor Authentication (2FA) with GitHub in SourceTree - SourceTree Knowledge Base - Atlassian Documentation</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: A conflicting conditional operation is currently in progress against this resource.
BASENAME: 2013/12/07/202434
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/07/2013 20:24:34
CATEGORY: AWS
CATEGORY: PHP
CATEGORY: Amazon S3
-----
BODY:
<p>以前間違って<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%AA%A5%EC%A5%B4%A5%F3%BD%A3">オレゴン州</a>に作成してしまったバケットを削除して、AWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>経由で同じ名前で東京リージョンに新たにバケットを作成しようとしたらエラーになって怒られました。</p>

<pre class="code" data-unlink>PHP Fatal error:  Uncaught Aws\S3\Exception\OperationAbortedException: AWS Error Code: OperationAborted, Status Code: 409, AWS Request ID: XXXXXXXXXXXXXXXX, AWS Error Type: client, AWS Error Message: A conflicting conditional operation is currently in progress against this resource. Please try again., User-Agent: aws-sdk-php2/2.4.11 Guzzle/3.7.4 curl/7.19.7 PHP/5.3.3
  thrown in /vagrant/src/s3/vendor/aws/aws-sdk-php/src/Aws/Common/Exception/Name</pre>


<p>イマイチよくわからなくていろいろ調べたところ</p>

<ul>
<li><a href="http://stackoverflow.com/questions/13898057/aws-error-message-a-conflicting-conditional-operation-is-currently-in-progress">java - AWS Error Message: A conflicting conditional operation is currently in progress against this resource - Stack Overflow</a></li>
</ul>


<p>というエントリがひっかかりました。<br/>
<strong>どうもすぐにバケットを作りなおそうとしたのが原因ぽいです。</strong><br/>
削除のオペレーションをやってもすぐにはバックエンドの<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%C8%A5%E9%A5%F3%A5%B6%A5%AF%A5%B7%A5%E7%A5%F3">トランザクション</a>は完了されないみたいで、数時間置いてからもう一回やり直してくれとのことでした。</p>

<p>なのでその日は寝て、次の日にやったらうまくできました。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Composerを使ってみた
BASENAME: 2013/12/07/201728
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/07/2013 20:17:28
CATEGORY: PHP
CATEGORY: Composer
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>版のBundlerみたいなもの。<br/>
最近この類の異常に目にするようになりました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a>の入門記事でも書きましたが、Composerに関する部分だけ抜粋してまとめます。<br/>
なので重複する文面が多いです。</p>

<h2>Composerのインストール</h2>

<pre class="code" data-lang="" data-unlink>curl -sS http://getcomposer.org/installer | php

#!/usr/bin/env php
All settings correct for using Composer
Downloading...

Composer successfully installed to: /var/www/aws/s3/composer.phar
Use it: php composer.phar</pre>


<p>ここで <code>composer.phar</code> がカレントに作成されます。</p>

<h3><code>composer.json</code> の作成</h3>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/json">json</a>ファイルを作成します。Gemfileみたいなものです。</p>

<pre class="code" data-lang="" data-unlink>{
  &#34;require&#34;: {
    &#34;aws/aws-sdk-php&#34;: &#34;*&#34;
  }
}</pre>


<h3>Composerで依存パッケージのインストール</h3>

<p>ここで <code>composer.json</code> に記述された依存パッケージがインストールされる。<br/>
カレントディレクトリの <code>vendor</code> ディレクトリにインストールされます。 <code>.gitignore</code> で <code>composer.phar</code> とか <code>vendor/</code> は外したほうがいいかもしれませんね。</p>

<pre class="code" data-lang="" data-unlink>$ php composer.phar install

Loading composer repositories with package information
Installing dependencies (including require-dev)
  - Installing symfony/event-dispatcher (v2.4.0)
    Loading from cache

  - Installing guzzle/guzzle (v3.7.4)
    Loading from cache

  - Installing aws/aws-sdk-php (2.4.11)
    Loading from cache

symfony/event-dispatcher suggests installing symfony/dependency-injection ()
symfony/event-dispatcher suggests installing symfony/http-kernel ()
aws/aws-sdk-php suggests installing doctrine/cache (Adds support for caching of credentials and responses)
aws/aws-sdk-php suggests installing ext-apc (Allows service description opcode caching, request and response caching, and credentials caching)
aws/aws-sdk-php suggests installing monolog/monolog (Adds support for logging HTTP requests and responses)
aws/aws-sdk-php suggests installing symfony/yaml (Eases the ability to write manifests for creating jobs in AWS Import/Export)
Writing lock file
Generating autoload files</pre>


<p>不足しているシステムパッケージがあったら<a class="keyword" href="http://d.hatena.ne.jp/keyword/yum">yum</a>とapt-getを使ってインストールします。</p>

<h3>さらにパッケージ追加</h3>

<p>今度は<a class="keyword" href="http://d.hatena.ne.jp/keyword/log4php">log4php</a>を使いたくなったとしましょう。
<code>composer.json</code> は以下のようになります。</p>

<pre class="code" data-lang="" data-unlink>{
  &#34;require&#34;: {
    &#34;aws/aws-sdk-php&#34;: &#34;*&#34;,
    &#34;apache/log4php&#34;: &#34;2.3.0&#34;
  }
}</pre>


<p>bundle installみたいな感覚でやってみましたが</p>

<pre class="code" data-lang="" data-unlink>$ php composer.phar install

Installing dependencies (including require-dev) from lock file
Warning: The lock file is not up to date with the latest changes in composer.json. You may be getting outdated dependencies. Run update to update them.
Nothing to install or update
Generating autoload files</pre>


<p>lockファイルと一致しないと怒られてしまいました。
こういうときはupdateしないといけないみたいです。
ただ、</p>

<pre class="code" data-lang="" data-unlink>php composer.phar update</pre>


<p>とするとバージョンがロックされたものについてまでアップデートがかかってしまうので、今回は<a class="keyword" href="http://d.hatena.ne.jp/keyword/log4php">log4php</a>に関係するものだけインストールしてほしいので以下の様な感じにします。</p>

<pre class="code" data-lang="" data-unlink>php composer.phar update apache/log4php

Loading composer repositories with package information
Updating dependencies (including require-dev)
  - Installing apache/log4php (2.3.0)
    Cloning 8c6df2481cd68d0d211d38f700406c5f0a9de0c2

Writing lock file
Generating autoload files</pre>


<h2>実際にアプリで使ってみる</h2>

<p>ここでは追加でインストールした<a class="keyword" href="http://d.hatena.ne.jp/keyword/log4php">log4php</a>を使っています。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/AWS">AWS</a> <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a>は使っていません。ゴメンなさい。<br/>
カレントディレクトリに vendor ディレクトリがあることを確認してください。</p>

<pre class="code lang-php" data-lang="php" data-unlink><span class="synSpecial">&lt;?php</span>
<span class="synComment">// composer.json に記述されたパッケージがインストールされた</span>
<span class="synComment">// Vendorディレクトリの中身をロードするおまじない</span>
<span class="synPreProc">require</span> '<span class="synConstant">vendor/autoload.php</span>';

<span class="synStatement">$</span><span class="synIdentifier">log</span> <span class="synStatement">=</span> Logger<span class="synStatement">::</span>getLogger<span class="synSpecial">(</span>&quot;<span class="synConstant">hogehoge</span>&quot;<span class="synSpecial">)</span>;
<span class="synStatement">$</span><span class="synIdentifier">log</span><span class="synType">-&gt;</span><span class="synIdentifier">info</span><span class="synSpecial">(</span>&quot;<span class="synConstant">Hello, World!</span>&quot;<span class="synSpecial">)</span>;
</pre>


<p>実行してみます。
今回は<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B3%A5%DE%A5%F3%A5%C9%A5%E9%A5%A4%A5%F3">コマンドライン</a>です。</p>

<pre class="code" data-lang="" data-unlink>$ php hello_composer.php 
INFO - Hello, World!</pre>


<h2>参考サイト</h2>

<ol>
<li><a href="https://gist.github.com/wnoguchi/7838085">gist:7838085</a></li>
<li><a href="http://stackoverflow.com/questions/15212381/composer-how-can-i-install-another-dependency-without-updating-old-ones">Composer: how can I install another dependency without updating old ones? - Stack Overflow</a></li>
<li><a href="http://qiita.com/ngyuki/items/eaec9adb0a946973e6cf">PHP - composer の「Warning: The lock file is not up to date ～」 - Qiita [キータ]</a></li>
<li><a href="https://getcomposer.org/doc/00-intro.md">Composer</a></li>
</ol>


-----
--------
AUTHOR: wnoguchi0727
TITLE: AWS SDK for PHP 2 入門（Composer編）
BASENAME: 2013/12/07/193613
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 12/07/2013 19:36:13
CATEGORY: AWS
CATEGORY: PHP
CATEGORY: SDK
CATEGORY: Amazon S3
-----
BODY:
<p>今年の春頃に無料枠で契約してそのままになってたAWSをもう少し本格的に習得してみようと最近しこしこと本やらネットやらで勉強していました。<br/>
バックアップとかスケールアウト、障害対応であまり頭を悩ませなくて良さそうなので最近とても魅力的に見える。
インフラまわりの管理は意外と大変なんですよね・・・。</p>

<p>とりあえずAWS Management ConsoleからEC2の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>を立ち上げたり、S3にファイルをアップロードしたり、Route53で<a class="keyword" href="http://d.hatena.ne.jp/keyword/DNS">DNS</a>ゾーンを管理したりしてみてそれっぽく使うことはできるようになったけど、どうも何かが違う気がする。<br/>
機能が多すぎて使いどころや、定石みたいなのがわからないので体系的な知識を得るために本を購入してみました。<br/>
こういうのから基本的な考え方を吸収していけるのはいいね。</p>

<ul>
<li><a href="http://www.amazon.co.jp/Amazon-Web-Services-%E3%82%AC%E3%82%A4%E3%83%89%E3%83%96%E3%83%83%E3%82%AF-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%A7Web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%81/dp/4844329804">Amazon.co.jp： Amazon Web Services ガイドブック クラウドでWebサービスを作ろう！: Jeff Barr, 玉川 憲, 株式会社クイープ: 本</a></li>
</ul>


<p>やっぱりAWSの着目すべき点はインフラに統合された<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>が提供されているところにあるんですかね。
実際にS3の<a class="keyword" href="http://d.hatena.ne.jp/keyword/API">API</a>叩いてみたけど、少しずつ面白さがわかってきた。少しだけね。</p>

<h2>躓いたところ</h2>

<p>さて、一番最初のサンプルを作成しようと思って、一番最初に躓いたのですが、本書ではAWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>をインストールするように言われているのですが、どこからダウンロードしたらいいのかよくわかりませんでした。</p>

<ul>
<li><a href="http://aws.amazon.com/jp/sdkforphp/">AWS SDK for PHP | アマゾン ウェブ サービス（AWS 日本語）</a></li>
</ul>


<p>ここで <code>aws.phar</code> というファイルがダウンロードできるのですが、これをどうしたらいいのかわからない・・・。</p>

<ul>
<li><a href="http://aws.amazon.com/jp/sdkforphp2/">AWS SDK for PHP 2</a></li>
</ul>


<p>こちらも <code>aws.phar</code>。pharという拡張子は<a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> Archiveの略のようなのですが、どうもこのファイルをインクルードして使うようです。</p>

<ul>
<li><a href="http://docs.aws.amazon.com/aws-sdk-php/guide/latest/installation.html">Installation — AWS SDK for PHP 2.4.11 documentation</a></li>
</ul>


<p>いろいろ試行錯誤してやっとネットに掲載されていた簡単なサンプルが動くようになったのですが、どうも本のサンプルと書き方がぜんぜん違うように思えて、よくよく調べてみたら本に載っているのはバージョン1のもののようです。</p>

<p>バージョン1で合わせてサンプルをやっていってもいいのですが、どうせ今後は2系にシフトしていくので、2系のイディオムに読み替えながら進むようにしました。</p>

<p>上のようにpharをインクルードしてもいいのですが、AWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> 2開発ではComposerを併用して開発するのが推奨されているようなので、それに従います。</p>

<p>それでは始まり始まり。</p>

<h2>環境</h2>

<p>VagrantとChef Soloあたりでちゃちゃっと作れちゃうと思います。<br/>
それか普通にEC2の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%A4%A5%F3%A5%B9%A5%BF%A5%F3%A5%B9">インスタンス</a>や他の既成の<a class="keyword" href="http://d.hatena.ne.jp/keyword/%B2%BE%C1%DB%A5%DE%A5%B7%A5%F3">仮想マシン</a>にインストールすればいいと思います。</p>

<ul>
<li>CentOS6.4 x64 または <a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a> 12.04 LTS</li>
<li>Apache2</li>
<li>PHP5.3.3</li>
</ul>


<h2>Composerのインストール</h2>

<p>Composerは<a class="keyword" href="http://d.hatena.ne.jp/keyword/Rails">Rails</a>のBundlerみたいなもんですね。</p>

<pre class="code" data-unlink>curl -s http://getcomposer.org/installer | php

#!/usr/bin/env php
All settings correct for using Composer
Downloading...

Composer successfully installed to: /var/www/aws/s3/composer.phar
Use it: php composer.phar</pre>


<p>ここで <code>composer.phar</code> がカレントに作成されます。</p>

<h3><code>composer.json</code> の作成</h3>

<p>jsonファイルを作成します。Gemfileみたいなものです。</p>

<pre class="code" data-unlink>{
  &#34;require&#34;: {
    &#34;aws/aws-sdk-php&#34;: &#34;*&#34;
  }
}</pre>


<h3>Composerで依存パッケージのインストール</h3>

<p>ここで <code>composer.json</code> に記述された依存パッケージがインストールされる。<br/>
カレントディレクトリの <code>vendor</code> ディレクトリにインストールされます。 <code>.gitignore</code> で <code>composer.phar</code> とか <code>vendor/</code> は外したほうがいいかもしれませんね。</p>

<pre class="code" data-unlink>$ php composer.phar install

Loading composer repositories with package information
Installing dependencies (including require-dev)
  - Installing symfony/event-dispatcher (v2.3.7)
    Downloading: 100%         

  - Installing guzzle/guzzle (v3.7.4)
    Downloading: 100%         

  - Installing aws/aws-sdk-php (2.4.11)
    Downloading: 100%         

symfony/event-dispatcher suggests installing symfony/dependency-injection ()
symfony/event-dispatcher suggests installing symfony/http-kernel ()
aws/aws-sdk-php suggests installing doctrine/cache (Adds support for caching of credentials and responses)
aws/aws-sdk-php suggests installing ext-apc (Allows service description opcode caching, request and response caching, and credentials caching)
aws/aws-sdk-php suggests installing monolog/monolog (Adds support for logging HTTP requests and responses)
aws/aws-sdk-php suggests installing symfony/yaml (Eases the ability to write manifests for creating jobs in AWS Import/Export)
Writing lock file
Generating autoload files</pre>


<p>不足しているシステムパッケージがあったらyumとapt-getを使ってインストールします。<br/>
たぶん<a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>の場合そのままだとエラーになると思います。詳しくは下のトラブルシューティングへ。</p>

<h2>最初のAWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a> for <a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a> 2プログラミング</h2>

<p>ここではバケットの一覧表示をするプログラムを書いてみたいと思います。
プログラムは以下のサンプルを参考にさせていただきました。</p>

<ul>
<li><a href="http://devlog.mitsugeek.net/entry/2013/06/13/AWS_SDK_for_PHP_2%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB_%E3%80%9C_S3%E3%81%AE%E3%83%90%E3%82%B1%E3%83%83%E3%83%88%E4%B8%80%E8%A6%A7%E5%8F%96%E5%BE%97%E3%81%BE%E3%81%A7">AWS SDK for PHP 2のインストール 〜 S3のバケット一覧取得まで - developer's diary</a></li>
</ul>


<h3><code>include/awssecure.inc.php</code></h3>

<p>AWSのアクセスキーを設定します。これは漏れたらやばいので別ファイルとして管理するといいです。<br/>
最初アクセストークンはどこで取得すればいいんだろう？って思っていたのですが、以下で取得するようです。</p>

<ul>
<li><a href="https://console.aws.amazon.com/iam/home?#security_credential">IAM Management Console</a></li>
</ul>


<p>ただ、警告にもあるとおり、ここで発行されるアクセストークンはAWSアカウントに直接紐づく <strong>rootユーザーみたいなとんでもない特権レベル</strong> を持っているので、あんまりおすすめされません。</p>

<p>なので、IAM(Identity and Access Management)でユーザーとグループを作成してそこでクレデンシャルを発行するのがスマートなようです。</p>

<ul>
<li><a href="https://console.aws.amazon.com/iam/home#home">IAM Management Console</a></li>
</ul>


<p><strong>ちなみに、1ユーザーあたり2つのクレデンシャルしか発行できないみたいです。</strong></p>

<pre class="code" data-unlink><span class="synSpecial">&lt;?php</span>
<span class="synComment">// AWSアクセストークン</span>
<span class="synStatement">$</span><span class="synIdentifier">config</span> <span class="synStatement">=</span> <span class="synType">array</span><span class="synSpecial">(</span>
  '<span class="synConstant">key</span>'    <span class="synStatement">=&gt;</span> '<span class="synConstant">AKIAIOSFODNN7EXAMPLE</span>',
  '<span class="synConstant">secret</span>' <span class="synStatement">=&gt;</span> '<span class="synConstant">wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</span>'
<span class="synSpecial">)</span>;
</pre>


<p>gitで管理するときはこのファイルのトラッキングを外しましょう。
ただ、テンプレート的なファイルだけは残っていてほしいのでインデックスから無視するだけにします。</p>

<pre class="code" data-unlink>git update-index --skip-worktree include/awssecure.inc.php</pre>


<h3><code>list_buckets.php</code></h3>

<p>以下が本命のプログラムとなります。</p>

<pre class="code" data-unlink><span class="synSpecial">&lt;?php</span>

<span class="synIdentifier">error_reporting</span><span class="synSpecial">(</span><span class="synConstant">E_ALL</span><span class="synSpecial">)</span>;

<span class="synComment">// Load Composer Vendor Modules</span>
<span class="synPreProc">require_once</span><span class="synSpecial">(</span>'<span class="synConstant">vendor/autoload.php</span>'<span class="synSpecial">)</span>;
<span class="synComment">// AWS Credential</span>
<span class="synPreProc">require_once</span><span class="synSpecial">(</span>'<span class="synConstant">include/awssecure.inc.php</span>'<span class="synSpecial">)</span>;

use Aws\S3\S3Client;

<span class="synStatement">$</span><span class="synIdentifier">s3</span> <span class="synStatement">=</span> S3Client<span class="synStatement">::</span>factory<span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">config</span><span class="synSpecial">)</span>;

<span class="synStatement">$</span><span class="synIdentifier">blist</span> <span class="synStatement">=</span> <span class="synStatement">$</span><span class="synIdentifier">s3</span><span class="synType">-&gt;</span>listBuckets<span class="synSpecial">()</span>;

<span class="synStatement">foreach</span> <span class="synSpecial">(</span><span class="synStatement">$</span><span class="synIdentifier">blist</span><span class="synSpecial">[</span>'<span class="synConstant">Buckets</span>'<span class="synSpecial">]</span> <span class="synStatement">as</span> <span class="synStatement">$</span><span class="synIdentifier">b</span><span class="synSpecial">)</span>
<span class="synSpecial">{</span>
  <span class="synPreProc">echo</span> &quot;<span class="synConstant">${b['Name']}: created at ${b['CreationDate']}</span><span class="synSpecial">\n</span>&quot;;
<span class="synSpecial">}</span>
</pre>


<h3>実行してみる</h3>

<p>コマンドラインからでも、ブラウザ経由でもどっちでも大丈夫だと思います。</p>

<pre class="code" data-unlink>$ php list_buckets.php 

hogehogehoge: created at 2013-11-22T10:50:47.000Z
sitepoint-aws-cloud-book-wnoguchi: created at 2013-12-04T23:06:19.000Z
blhablahblah: created at 2013-12-02T03:48:40.000Z
foobarbar: created at 2013-11-09T12:13:07.000Z</pre>


<p>これでOKです。</p>

<p>とりあえずAWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a>を使ったプログラミングを始めようと思って躓いたところをまとめてみました。</p>

<h2>トラブルシューティング</h2>

<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>のエラー</h3>

<p>以下は実際に<a class="keyword" href="http://d.hatena.ne.jp/keyword/XML">XML</a>がからむAWS <a class="keyword" href="http://d.hatena.ne.jp/keyword/SDK">SDK</a>を呼び出している時に発生していた気がします。</p>

<pre class="code" data-unlink>php create_bucket.php ppp

PHP Fatal error:  Class &#39;XMLWriter&#39; not found in /vagrant/src/s3/vendor/guzzle/guzzle/src/Guzzle/Service/Command/LocationVisitor/Request/XmlVisitor.php on line 201</pre>


<p>以下のようにして対応</p>

<pre class="code" data-unlink>yum -y install php-xml</pre>


<h3><a class="keyword" href="http://d.hatena.ne.jp/keyword/Ubuntu">Ubuntu</a>のエラー</h3>

<p>Composerの依存パッケージをインストールしようとしたらエラーになりました。</p>

<pre class="code" data-unlink>php composer.phar install

Loading composer repositories with package information
Installing dependencies (including require-dev)
Your requirements could not be resolved to an installable set of packages.

  Problem 1
    - aws/aws-sdk-php 2.4.0 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.1 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.10 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.11 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.2 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.3 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.4 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.5 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.6 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.7 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.8 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.4.9 requires guzzle/guzzle ~3.7.0 -&gt; satisfiable by guzzle/guzzle[v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.3.4 requires guzzle/guzzle ~3.6.0 -&gt; satisfiable by guzzle/guzzle[v3.6.0].
    - aws/aws-sdk-php 2.3.1 requires guzzle/guzzle ~3.4.3 -&gt; satisfiable by guzzle/guzzle[v3.4.3].
    - aws/aws-sdk-php 2.3.2 requires guzzle/guzzle &gt;=3.4.3,&lt;4 -&gt; satisfiable by guzzle/guzzle[v3.4.3, v3.5.0, v3.6.0, v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.3.3 requires guzzle/guzzle &gt;=3.4.3,&lt;4 -&gt; satisfiable by guzzle/guzzle[v3.4.3, v3.5.0, v3.6.0, v3.7.0, v3.7.1, v3.7.2, v3.7.3, v3.7.4].
    - aws/aws-sdk-php 2.3.0 requires guzzle/guzzle ~3.4.1 -&gt; satisfiable by guzzle/guzzle[v3.4.1, v3.4.2, v3.4.3].
    - aws/aws-sdk-php 2.2.0 requires guzzle/guzzle ~3.3.0 -&gt; satisfiable by guzzle/guzzle[v3.3.0, v3.3.1].
    - aws/aws-sdk-php 2.2.1 requires guzzle/guzzle ~3.3.0 -&gt; satisfiable by guzzle/guzzle[v3.3.0, v3.3.1].
    - aws/aws-sdk-php 2.1.1 requires guzzle/guzzle ~3.2.0 -&gt; satisfiable by guzzle/guzzle[v3.2.0].
    - aws/aws-sdk-php 2.1.2 requires guzzle/guzzle ~3.2.0 -&gt; satisfiable by guzzle/guzzle[v3.2.0].
    - aws/aws-sdk-php 2.1.0 requires guzzle/guzzle ~3.1.2 -&gt; satisfiable by guzzle/guzzle[v3.1.2].
    - aws/aws-sdk-php 2.0.0 requires guzzle/guzzle 3.0.* -&gt; satisfiable by guzzle/guzzle[v3.0.0, v3.0.1, v3.0.2, v3.0.3, v3.0.4, v3.0.5, v3.0.6, v3.0.7].
    - aws/aws-sdk-php 2.0.1 requires guzzle/guzzle 3.0.* -&gt; satisfiable by guzzle/guzzle[v3.0.0, v3.0.1, v3.0.2, v3.0.3, v3.0.4, v3.0.5, v3.0.6, v3.0.7].
    - aws/aws-sdk-php 2.0.2 requires guzzle/guzzle 3.0.* -&gt; satisfiable by guzzle/guzzle[v3.0.0, v3.0.1, v3.0.2, v3.0.3, v3.0.4, v3.0.5, v3.0.6, v3.0.7].
    - aws/aws-sdk-php 2.0.3 requires guzzle/guzzle 3.0.* -&gt; satisfiable by guzzle/guzzle[v3.0.0, v3.0.1, v3.0.2, v3.0.3, v3.0.4, v3.0.5, v3.0.6, v3.0.7].
    - guzzle/guzzle v3.7.4 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.7.3 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.7.2 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.7.1 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.7.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.6.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.5.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.4.3 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.4.2 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.4.1 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.3.1 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.3.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.2.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.1.2 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.7 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.6 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.5 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.4 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.3 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.2 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.1 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - guzzle/guzzle v3.0.0 requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
    - Installation request for aws/aws-sdk-php * -&gt; satisfiable by aws/aws-sdk-php[2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.2.0, 2.2.1, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.4.0, 2.4.1, 2.4.10, 2.4.11, 2.4.2, 2.4.3, 2.4.4, 2.4.5, 2.4.6, 2.4.7, 2.4.8, 2.4.9].
</pre>


<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/PHP">PHP</a>の<a class="keyword" href="http://d.hatena.ne.jp/keyword/curl">curl</a>拡張がないって言ってる気がします。</p>

<pre class="code" data-unlink>sudo apt-get -y install php5-curl</pre>


<p>もういっかい。</p>

<pre class="code" data-unlink>php composer.phar install

Loading composer repositories with package information
Installing dependencies (including require-dev)
  - Installing symfony/event-dispatcher (v2.3.7)
    Downloading: 100%         

  - Installing guzzle/guzzle (v3.7.4)
    Downloading: 100%         

  - Installing aws/aws-sdk-php (2.4.11)
    Downloading: 100%         

symfony/event-dispatcher suggests installing symfony/dependency-injection ()
symfony/event-dispatcher suggests installing symfony/http-kernel ()
aws/aws-sdk-php suggests installing doctrine/cache (Adds support for caching of credentials and responses)
aws/aws-sdk-php suggests installing ext-apc (Allows service description opcode caching, request and response caching, and credentials caching)
aws/aws-sdk-php suggests installing monolog/monolog (Adds support for logging HTTP requests and responses)
aws/aws-sdk-php suggests installing symfony/yaml (Eases the ability to write manifests for creating jobs in AWS Import/Export)
Writing lock file
Generating autoload files</pre>


<p>うまくいきました。</p>

<h2>参考サイト</h2>

<ul>
<li><a href="http://devlog.mitsugeek.net/entry/2013/06/13/AWS_SDK_for_PHP_2%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB_%E3%80%9C_S3%E3%81%AE%E3%83%90%E3%82%B1%E3%83%83%E3%83%88%E4%B8%80%E8%A6%A7%E5%8F%96%E5%BE%97%E3%81%BE%E3%81%A7">AWS SDK for PHP 2のインストール 〜 S3のバケット一覧取得まで - developer's diary</a></li>
<li><a href="http://www.ebisawa.co.jp/wiki/index.php?AWS%2FS3">AWS/S3 - Ebisawa's Wiki</a></li>
<li><a href="http://docs.aws.amazon.com/aws-sdk-php/guide/latest/service-s3.html">Amazon Simple Storage Service — AWS SDK for PHP 2.4.11 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/aws-sdk-php/guide/latest/index.html">AWS SDK for PHP — AWS SDK for PHP 2.4.11 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/aws-sdk-php/guide/latest/migration-guide.html">Migration Guide — AWS SDK for PHP 2.4.11 documentation</a></li>
<li><a href="http://docs.aws.amazon.com/AWSSDKforPHP/latest/index.html#m=AmazonS3/create_bucket">AWS SDK for PHP 1.6.2</a></li>
</ul>


<p>S3開発に関しては以下のドキュメントが良さそう。</p>

<ul>
<li><a href="http://docs.aws.amazon.com/aws-sdk-php/latest/class-Aws.S3.S3Client.html">Class Aws\S3\S3Client | AWS SDK for PHP</a></li>
</ul>


<p>その他。</p>

<ul>
<li><a href="http://qiita.com/usamik26/items/56d0d3ba7a1300625f92">既に git 管理しているファイルをあえて無視したい - Qiita [キータ]</a></li>
</ul>


<h3>参考文献</h3>

<ul>
<li><a href="http://www.amazon.co.jp/Amazon-Web-Services-%E3%82%AC%E3%82%A4%E3%83%89%E3%83%96%E3%83%83%E3%82%AF-%E3%82%AF%E3%83%A9%E3%82%A6%E3%83%89%E3%81%A7Web%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E4%BD%9C%E3%82%8D%E3%81%86%EF%BC%81/dp/4844329804">Amazon.co.jp： Amazon Web Services ガイドブック クラウドでWebサービスを作ろう！: Jeff Barr, 玉川 憲, 株式会社クイープ: 本</a></li>
</ul>


-----
--------
AUTHOR: wnoguchi0727
TITLE: msysGitのマルチバイトファイルパス
BASENAME: 2013/10/20/184717
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/20/2013 18:47:17
CATEGORY: Git
-----
BODY:
<p>つかれた。
msysGitであげた不具合のお返事がなくなって、正直みんなこのあたりで困ってないんだろうなー、パッチ送ってもOS依存の <code>PATH_MAX</code> まわりがからんでるから容易には取り込まれないだろうし、3流<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%D7%A5%ED%A5%B0%A5%E9%A5%DE">プログラマ</a>のぼくには修正は難しくて、とりあえず最適化無効にしてビルドすれば動くからそれで諦めてたんだけど、最近だれかがまたパッチ投げてくれたっぽい。末尾をゼロ埋めする <code>strlcpy</code> を使うようにしてるみたい。ものすごい長い英文で議論が始まってついていけないので、遠くから見る。Reported-byがついてたから微妙に嬉しい。
うむ、つかれた。</p>

-----
EXCERPT:
つかれた。 msysGitであげた不具合のお返事がなくなって、正直みんなこのあたりで困ってないんだろうなー、パッチ送ってもOS依存のPATH_MAXまわりがからんでるから容易には取り込まれないだろうし、3流プログラマのぼくには難しくて、とりあえず最適化無効にすれば動くからそれで諦めてたんだけど、最近だれかがパッチ投げてくれたっぽい。strlcpy を使うようにしてるみたい。ものすごい長い英文で議論が始まってついていけないので、遠くから見る。Reported-byがついてたから微妙に嬉しい。 うむ、つかれた。 
-----
COMMENT:
AUTHOR: wnoguchi0727
IP: 219.114.17.168
DATE: 11/02/2013 00:23:27
ありがとうございます。
とても励みになりますｗ
-----
COMMENT:
AUTHOR: kouji0625
IP: 202.162.112.40
DATE: 11/02/2013 00:06:39
情報ありがとうございます。
いや～、たくさんのレスがついていますね～。いちmsysGitユーザとして修正されるといいなと思います。

それにしても一連のスレッドのきっかけのポストをされたことがすばらしいですね。見習いたいものです。
-----
COMMENT:
AUTHOR: wnoguchi0727
IP: 219.114.17.168
DATE: 11/01/2013 23:15:37
こんばんは。
コメントいただきありがとうございます。
その件については、足りない英語力をひねり出してコミットログを書いてパッチを出してみたのですが、軽くリジェクトされましたｗ

以下でAntoine Pelisseという方がパッチを投げて下さったようです。
https://groups.google.com/forum/#!topic/msysgit/pFi9hMnd8KA
https://groups.google.com/forum/#!topic/msysgit/_AQLjpwOI6I

最適化をひとつひとつ無効にしていって `-fno-inline-small-functions` で直ったのがわかったところで力尽きました...。
パス名を短くすればとりあえず使えるようになったので、様子見させていただいています。
-----
COMMENT:
AUTHOR: kouji0625
IP: 202.162.112.40
DATE: 11/01/2013 22:51:05
自己解決しました。不具合の詳細は以下にありますね。
https://groups.google.com/forum/#!topic/msysgit/M0XcHNAeKPA

1か月以上立ちますが特にコメントなしなのですね。残念ですが、日本語のファイル名での問題なので海外の人ががんばって修正するのは期待できないのかもしれませんね。（感想だけですみません...）
-----
COMMENT:
AUTHOR: kouji0625
IP: 202.162.112.40
DATE: 11/01/2013 22:42:07
msysGitの不具合ですが、少し気になりました。不具合の内容を確認するためのURLを教えていたがけないでしょうか。
お手すきのときで結構です。
-----
--------
AUTHOR: wnoguchi0727
TITLE: 初めての東京出張
BASENAME: 2013/10/18/233000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/18/2013 23:30:00
-----
BODY:
<p>初めて東京出張しました。東京ひろい。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Vagrant+chef
BASENAME: 2013/10/16/233000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/16/2013 23:30:00
CATEGORY: Vagrant
CATEGORY: Chef
-----
BODY:
<p>chef-soloとknife-soloとVagrantの勘所がなんとなくつかめてきた。<br/>
気がする。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Route53設定続編
BASENAME: 2013/10/13/084633
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/13/2013 08:46:33
CATEGORY: AWS
-----
BODY:
<p>お名前.comでネームサーバーを変更してみた。<br/>
digってみたら<a class="keyword" href="http://d.hatena.ne.jp/keyword/SOA">SOA</a>がRoute53に移って、ちゃんとpingも通る。<br/>
セカンダリネームサーバーとか普通にできてるし、やばいな、これは。</p>

<p>NSレコードが4つもあって「<a class="keyword" href="http://d.hatena.ne.jp/keyword/%BE%E9%C4%B9%B2%BD">冗長化</a>？誰に向かっていってんの？？？」って感じ。</p>

-----
EXCERPT:
お名前.comでネームサーバーを変更してみた。 digってみたらSOAがRoute53に移って、ちゃんとpingも通る。 セカンダリネームサーバーとか普通にできてるし、やばいな、これは。 
-----
--------
AUTHOR: wnoguchi0727
TITLE: Amazon Route53を使ってみた
BASENAME: 2013/10/12/230000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/12/2013 23:00:00
CATEGORY: AWS
-----
BODY:
<p>ゾーン管理が簡単。<br/>
BINDよりめっちゃかんたん。<br/>
お名前.comメンテ中だったからまだpingとか確認できてないけど。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: まとめ
BASENAME: 2013/10/11/223000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/11/2013 22:30:00
-----
BODY:
<p>長い一週間だった。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: Bitcasa
BASENAME: 2013/10/10/230000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/10/2013 23:00:00
-----
BODY:
<p>アップロードに失敗したのが断片化してる。。。<br/>
巨大なファイルのアーカイブだけに限定したほうが良さそう。</p>

-----
EXCERPT:
アップロードに失敗したのが断片化してる。。。 巨大なファイルのアーカイブだけに限定したほうが良さそう。 
-----
--------
AUTHOR: wnoguchi0727
TITLE: 烏龍茶の悲劇
BASENAME: 2013/10/09/230000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/09/2013 23:00:00
-----
BODY:
<p>水が尽きたので会社の烏龍茶飲みまくってたら水分補給にならなくて、<br/>
余計に喉乾いてやばかったです。
脱水症状こわい。<br/>
今度から水にしよう。
烏龍茶だとパフォーマンスも低下するし。</p>

<p>今日も疲れた。</p>

<h2>今日のTips</h2>

<p>teeコマンド意外と有能ってこと。</p>

<pre class="code" data-unlink>$ vagrant ssh-config --host yunocchi | tee -a ~/.ssh/config

Host yunocchi
  HostName 127.0.0.1
  User vagrant
  Port 2200
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile /Users/noguchiwataru/.vagrant.d/insecure_private_key
  IdentitiesOnly yes
  LogLevel FATAL</pre>


<h2>Bitcasa</h2>

<ul>
<li>年間無制限プラン契約したけど、アップロード速度は問題ない。</li>
<li>容量7EB超えヤバイ</li>
<li>ダウンロードはまだ試してない</li>
<li>主にあまり参照しないような大容量のファイルのバックアップに使う</li>
<li>頻繁に使用するファイルは<a class="keyword" href="http://d.hatena.ne.jp/keyword/DropBox">DropBox</a>がよさげ</li>
</ul>


<h2>雑記</h2>

<p>勉強会行ってみたい。</p>

<p>最近金欠なので、なんか<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%A7%A5%A2%A5%A6%A5%A7%A5%A2">シェアウェア</a>か何か作れないかなあ。<br/>
そんなアイディアがうかばないのがちょっとなぁ。</p>

<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/VMware">VMware</a> Workstationとか<a class="keyword" href="http://d.hatena.ne.jp/keyword/VMware%20Fusion">VMware Fusion</a>は最低限ほしい。</p>

<p>chef+Vagrantの勉強と応用情報の勉強が急務であります。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: きょうのまとめ
BASENAME: 2013/10/08/222715
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/08/2013 22:27:15
CATEGORY: Vagrant
CATEGORY: Chef
-----
BODY:
<p>うん、疲れた。<br/>
構成管理は Vagrant + chef-solo でちゃちゃっとやりたいね。<br/>
サクッと好きな環境を構築できる。<br/>
とりあえずWindowsで</p>

<pre class="code" data-unlink>knife solo prepare root@192.168.33.10
Enter the password for root@192.168.33.10: ←パスワードキーイン</pre>


<p>したらうまいぐあいに<a class="keyword" href="http://d.hatena.ne.jp/keyword/CentOS">CentOS</a>にchef-solo入れてくれたっぽい。<br/>
いい感じ。</p>

<p>それにしてもWindowsの構成管理はVagrant+chef-soloみたいにラジカルにぶっ壊したいと思う今日この頃。</p>

<p>はてなのMarkdownはpre記法にGFMっぽいシンタックスが使えるからなんかいい感じだ。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: 俺は人間をやめるぞ、ジョジョーッ！！
BASENAME: 2013/10/07/000000
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/07/2013 00:00:00
-----
BODY:
<p>資料いろいろ整理していたら一日終わった。<br/>
応用情報の受験票届いた。<br/>
chef-soloの勉強しようとしたら戸惑ってうまくいかんかった。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/VMware%20Fusion">VMware Fusion</a>に気軽に<a class="keyword" href="http://d.hatena.ne.jp/keyword/Windows7">Windows7</a>やらXPやら<a class="keyword" href="http://d.hatena.ne.jp/keyword/Visual%20Studio">Visual Studio</a>を好きに入れられるので、<br/>
ほんとに<a class="keyword" href="http://d.hatena.ne.jp/keyword/MSDN">MSDN</a>は最高だと思う。<br/>
.NETの案件も柔軟に対応できると思うよ。<br/>
なんか今日はつかれた。</p>

-----
--------
AUTHOR: wnoguchi0727
TITLE: こんばんは
BASENAME: 2013/10/08/221503
STATUS: Publish
ALLOW COMMENTS: 1
CONVERT BREAKS: 0
DATE: 10/08/2013 22:15:03
-----
BODY:
<p><a class="keyword" href="http://d.hatena.ne.jp/keyword/%A4%CF%A4%C6%A4%CA%A5%D6%A5%ED%A5%B0">はてなブログ</a>を開設しました。<br/>
<a class="keyword" href="http://d.hatena.ne.jp/keyword/%A5%B7%A5%B9%A5%C6%A5%E0%A5%A8%A5%F3%A5%B8%A5%CB%A5%A2">システムエンジニア</a>5年生です。<br/>
よろしくおねがいします。</p>

-----
--------
